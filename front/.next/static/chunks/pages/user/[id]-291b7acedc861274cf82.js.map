{"version":3,"sources":["webpack://_N_E/../../../next-server/lib/amp.ts","webpack://_N_E/../../../next-server/lib/head.tsx","webpack://_N_E/./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack://_N_E/./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack://_N_E/./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack://_N_E/./pages/user/.js","webpack://_N_E/./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack://_N_E/../../../next-server/lib/side-effect.tsx","webpack://_N_E/./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?e7a7","webpack://_N_E/./node_modules/@babel/runtime/helpers/defineProperty.js","webpack://_N_E/../../../next-server/lib/amp-context.ts"],"names":["isInAmpMode","React","AmpStateContext","ampFirst","hybrid","hasQuery","defaultHead","inAmpMode","head","charSet","name","content","onlyReactElement","child","list","fragmentChild","fragmentList","METATYPES","reduceComponents","headElements","headElementChildren","headElement","props","keys","tags","metaTypes","metaCategories","h","isUnique","key","i","len","metatype","category","categories","unique","c","Head","ampState","useContext","headManager","HeadManagerContext","reduceComponentsToState","module","exports","TypeError","iter","Symbol","iterator","Object","Array","from","arrayLikeToArray","arr","isArray","User","dispatch","useDispatch","id","useRouter","query","useSelector","state","post","mainPosts","hasMorePosts","loadUserPostsLoading","userInfo","user","useEffect","onScroll","window","scrollY","document","documentElement","clientHeight","scrollHeight","type","LOAD_USER_POSTS_REQUEST","lastId","length","data","addEventListener","removeEventListener","nickname","property","actions","Posts","Followings","Followers","Meta","avatar","title","map","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","constructor","_hasHeadManager","emitChange","componentDidMount","this","componentDidUpdate","componentWillUnmount","render","Component","__NEXT_P","push","obj","value","defineProperty","enumerable","configurable","writable"],"mappings":"oJAWO,WAEL,OAAOA,EAAYC,qBAAiBC,EAApC,mBAbF,I,EAAA,G,EAAA,Y,2BACA,YAEO,SAASF,IAIC,6DAJV,GAIU,IAHfG,gBAGe,aAFfC,cAEe,aADfC,gBACe,SACf,OAAOF,GAAaC,GAApB,I,+FCRF,I,EAAA,E,waAAA,YACA,G,EAAA,Y,2BACA,YACA,YACA,Y,0GAMO,SAASE,IAA8C,IAAlCC,EAAkC,wDACtDC,EAAO,CAAC,gCAAMC,QAApB,WAIA,OAHA,GACED,OAAU,gCAAME,KAAN,WAAsBC,QAAhCH,wBAEF,EAGF,SAASI,EAAiB,EAA1B,GAKE,MAAqB,kBAAVC,GAAX,kBAAwCA,EACtC,EAGEA,SAAeZ,UAAnB,SACSa,SACLb,2BAAuBY,QAAvBZ,kBACE,cAIE,MAC2B,kBAAlBc,GADT,kBAESA,EAEP,EAEKC,SAAP,KAZN,KAkBKF,SAAP,GAGF,IAAMG,EAAY,CAAC,OAAQ,YAAa,UAAxC,YAoEA,SAASC,EAAiB,EAA1B,GAIE,OAAOC,UAEH,cACE,IAAMC,EAAsBnB,2BAC1BoB,QADF,UAGA,OAAOP,SAAP,KANCK,kCAYGb,EAAYgB,EAZfH,mBAjET,WACE,IAAMI,EAAO,IAAb,IACMC,EAAO,IAAb,IACMC,EAAY,IAAlB,IACMC,EAAN,GAEA,OAAQC,YACN,IAAIC,GAAJ,EAEA,GAAID,yBAAgBA,EAAP,KAA6BA,mBAA1C,EAAkE,CAChE,IAAME,EAAMF,YAAYA,mBAAxB,GACIJ,MAAJ,GACEK,KAEAL,SAKJ,OAAQI,EAAR,MACE,YACA,WACMH,MAASG,EAAb,MACEC,KAEAJ,MAASG,EAATH,MAEF,MACF,WACE,IAAK,IAAIM,EAAJ,EAAWC,EAAMd,EAAtB,OAAwCa,EAAxC,EAAiDA,IAAK,CACpD,IAAME,EAAWf,EAAjB,GACA,GAAKU,uBAAL,GAEA,eAAIK,EACEP,MAAJ,GACEG,KAEAH,aAEG,CACL,IAAMQ,EAAWN,QAAjB,GACMO,EAAaR,MAA4B,IAA/C,IACIQ,MAAJ,GACEN,MAEAM,SACAR,UAOV,UAyBQS,IAbHhB,eAeA,cACH,IAAMU,EAAMO,OAAZ,EAgBA,OAAOnC,yBAAsB,CAAE4B,WAQrC,SAASQ,EAAK,GAA6C,IAA3D,EAA2D,EAA3D,SACQC,GAAW,IAAAC,YAAWrC,EAA5B,iBACMsC,GAAc,IAAAD,YAAWE,EAA/B,oBACA,OACE,wBAAC,EAAD,SACEC,wBADF,EAEEF,YAFF,EAGEjC,WAAW,IAAAP,aAHb,IADF,GAYFqC,SAAc,a,MAECA,E,gCC9KfM,EAAOC,QAJP,WACE,MAAM,IAAIC,UAAU,0I,mBCGtBF,EAAOC,QAJP,SAA0BE,GACxB,GAAsB,qBAAXC,QAA0BA,OAAOC,YAAYC,OAAOH,GAAO,OAAOI,MAAMC,KAAKL,K,qBCD1F,IAAIM,EAAmB,EAAQ,QAM/BT,EAAOC,QAJP,SAA4BS,GAC1B,GAAIH,MAAMI,QAAQD,GAAM,OAAOD,EAAiBC,K,kCCHlD,oL,KAsIeE,UAxHF,WACT,IAAMC,EAAWC,cAETC,EADOC,sBACOC,MAAdF,GAHO,EAI2CG,aAAY,SAACC,GAAD,OAAWA,EAAMC,QAA/EC,EAJO,EAIPA,UAAWC,EAJJ,EAIIA,aAAcC,EAJlB,EAIkBA,qBACzBC,EAAaN,aAAY,SAACC,GAAD,OAAWA,EAAMM,QAA1CD,SAqCR,OAlBAE,qBAAU,WACN,IAAMC,EAAW,WACTC,OAAOC,QAAUC,SAASC,gBAAgBC,aAAeF,SAASC,gBAAgBE,aAAe,KAC7FX,IAAiBC,GACjBV,EAAS,CACLqB,KAAMC,IACNC,OAAQf,EAAUA,EAAUgB,OAAS,IAAMhB,EAAUA,EAAUgB,OAAS,GAAGtB,GAC3EuB,KAAMvB,KAMtB,OADAa,OAAOW,iBAAiB,SAAUZ,GAC3B,WACHC,OAAOY,oBAAoB,SAAUb,MAE1C,CAACN,EAAUgB,OAAQf,EAAcP,IAGhC,eAAC,IAAD,WAGKS,GACG,eAAC,IAAD,WACI,kCACKA,EAASiB,SADd,0BAGA,sBAAM1E,KAAK,cAAcC,QAAO,UAAKwD,EAASiB,SAAd,qCAChC,sBAAMC,SAAS,WAAW1E,QAAO,UAAKwD,EAASiB,SAAd,qCACjC,sBAAMC,SAAS,iBAAiB1E,QAAO,UAAKwD,EAASiB,SAAd,qCACvC,sBAAMC,SAAS,WAAW1E,QAAQ,qCAClC,sBAAM0E,SAAS,SAAS1E,QAAO,oCAA+B+C,QAIrES,EAEO,cAAC,IAAD,CACImB,QAAS,CACL,+CAEZ,uBACiBnB,EAASoB,QAHL,QAKT,qDAEZ,uBACiBpB,EAASqB,aAHL,aAKT,qDAEZ,uBACiBrB,EAASsB,YAHL,aAZjB,SAmBI,cAAC,IAAKC,KAAN,CACIC,OAAQ,cAAC,IAAD,UAASxB,EAASiB,SAAS,KACnCQ,MAAOzB,EAASiB,aAI1B,KAELpB,EAAU6B,KAAI,SAACzD,GAAD,OACX,cAAC,IAAD,CAAqB2B,KAAM3B,GAAZA,EAAEsB,Y,qBCvGjC,IAAIoC,EAAoB,EAAQ,QAE5BC,EAAkB,EAAQ,QAE1BC,EAA6B,EAAQ,QAErCC,EAAoB,EAAQ,QAMhCtD,EAAOC,QAJP,SAA4BS,GAC1B,OAAOyC,EAAkBzC,IAAQ0C,EAAgB1C,IAAQ2C,EAA2B3C,IAAQ4C,M,+jBCT9F,gBAgBe,E,8BAcbC,WAAW,GAAa,wBACtB,kBAdMC,qBAagB,IAXxBC,WAAa,WACP,EAAJ,iBACE,+BACE,kCACM,oBADN,kBAEE,EAHJ,SAWF,kBACE,qBAA0B,oBAD5B,iBAFsB,E,2CAUxBC,WACMC,KAAJ,iBACEA,KAAA,uCAAAA,MAEFA,KAAA,e,gCAEFC,WACED,KAAA,e,kCAEFE,WACMF,KAAJ,iBACEA,KAAA,0CAAAA,MAEFA,KAAA,e,oBAGFG,WACE,gB,GAzCyBC,a,mCCfxBnC,OAAOoC,SAAWpC,OAAOoC,UAAY,IAAIC,KAAK,CAC7C,aACA,WACE,OAAO,EAAQ,Y,mBCWvBjE,EAAOC,QAfP,SAAyBiE,EAAKhF,EAAKiF,GAYjC,OAXIjF,KAAOgF,EACT5D,OAAO8D,eAAeF,EAAKhF,EAAK,CAC9BiF,MAAOA,EACPE,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZL,EAAIhF,GAAOiF,EAGND,I,kCCZT,I,2CAEO,IAAM3G,I,EAFb,Y,4BAEmDD,sBAA5C,I","file":"static/chunks/pages/user/[id]-291b7acedc861274cf82.js","sourcesContent":["import React from 'react'\nimport { AmpStateContext } from './amp-context'\n\nexport function isInAmpMode({\n  ampFirst = false,\n  hybrid = false,\n  hasQuery = false,\n} = {}): boolean {\n  return ampFirst || (hybrid && hasQuery)\n}\n\nexport function useAmp(): boolean {\n  // Don't assign the context value to a variable to save bytes\n  return isInAmpMode(React.useContext(AmpStateContext))\n}\n","import React, { useContext } from 'react'\nimport Effect from './side-effect'\nimport { AmpStateContext } from './amp-context'\nimport { HeadManagerContext } from './head-manager-context'\nimport { isInAmpMode } from './amp'\n\ntype WithInAmpMode = {\n  inAmpMode?: boolean\n}\n\nexport function defaultHead(inAmpMode = false): JSX.Element[] {\n  const head = [<meta charSet=\"utf-8\" />]\n  if (!inAmpMode) {\n    head.push(<meta name=\"viewport\" content=\"width=device-width\" />)\n  }\n  return head\n}\n\nfunction onlyReactElement(\n  list: Array<React.ReactElement<any>>,\n  child: React.ReactChild\n): Array<React.ReactElement<any>> {\n  // React children can be \"string\" or \"number\" in this case we ignore them for backwards compat\n  if (typeof child === 'string' || typeof child === 'number') {\n    return list\n  }\n  // Adds support for React.Fragment\n  if (child.type === React.Fragment) {\n    return list.concat(\n      React.Children.toArray(child.props.children).reduce(\n        (\n          fragmentList: Array<React.ReactElement<any>>,\n          fragmentChild: React.ReactChild\n        ): Array<React.ReactElement<any>> => {\n          if (\n            typeof fragmentChild === 'string' ||\n            typeof fragmentChild === 'number'\n          ) {\n            return fragmentList\n          }\n          return fragmentList.concat(fragmentChild)\n        },\n        []\n      )\n    )\n  }\n  return list.concat(child)\n}\n\nconst METATYPES = ['name', 'httpEquiv', 'charSet', 'itemProp']\n\n/*\n returns a function for filtering head child elements\n which shouldn't be duplicated, like <title/>\n Also adds support for deduplicated `key` properties\n*/\nfunction unique() {\n  const keys = new Set()\n  const tags = new Set()\n  const metaTypes = new Set()\n  const metaCategories: { [metatype: string]: Set<string> } = {}\n\n  return (h: React.ReactElement<any>) => {\n    let isUnique = true\n\n    if (h.key && typeof h.key !== 'number' && h.key.indexOf('$') > 0) {\n      const key = h.key.slice(h.key.indexOf('$') + 1)\n      if (keys.has(key)) {\n        isUnique = false\n      } else {\n        keys.add(key)\n      }\n    }\n\n    // eslint-disable-next-line default-case\n    switch (h.type) {\n      case 'title':\n      case 'base':\n        if (tags.has(h.type)) {\n          isUnique = false\n        } else {\n          tags.add(h.type)\n        }\n        break\n      case 'meta':\n        for (let i = 0, len = METATYPES.length; i < len; i++) {\n          const metatype = METATYPES[i]\n          if (!h.props.hasOwnProperty(metatype)) continue\n\n          if (metatype === 'charSet') {\n            if (metaTypes.has(metatype)) {\n              isUnique = false\n            } else {\n              metaTypes.add(metatype)\n            }\n          } else {\n            const category = h.props[metatype]\n            const categories = metaCategories[metatype] || new Set()\n            if (categories.has(category)) {\n              isUnique = false\n            } else {\n              categories.add(category)\n              metaCategories[metatype] = categories\n            }\n          }\n        }\n        break\n    }\n\n    return isUnique\n  }\n}\n\n/**\n *\n * @param headElements List of multiple <Head> instances\n */\nfunction reduceComponents(\n  headElements: Array<React.ReactElement<any>>,\n  props: WithInAmpMode\n) {\n  return headElements\n    .reduce(\n      (list: React.ReactChild[], headElement: React.ReactElement<any>) => {\n        const headElementChildren = React.Children.toArray(\n          headElement.props.children\n        )\n        return list.concat(headElementChildren)\n      },\n      []\n    )\n    .reduce(onlyReactElement, [])\n    .reverse()\n    .concat(defaultHead(props.inAmpMode))\n    .filter(unique())\n    .reverse()\n    .map((c: React.ReactElement<any>, i: number) => {\n      const key = c.key || i\n      if (process.env.__NEXT_OPTIMIZE_FONTS && !props.inAmpMode) {\n        if (\n          c.type === 'link' &&\n          c.props['href'] &&\n          // TODO(prateekbh@): Replace this with const from `constants` when the tree shaking works.\n          ['https://fonts.googleapis.com/css'].some((url) =>\n            c.props['href'].startsWith(url)\n          )\n        ) {\n          const newProps = { ...(c.props || {}) }\n          newProps['data-href'] = newProps['href']\n          newProps['href'] = undefined\n          return React.cloneElement(c, newProps)\n        }\n      }\n      return React.cloneElement(c, { key })\n    })\n}\n\n/**\n * This component injects elements to `<head>` of your page.\n * To avoid duplicated `tags` in `<head>` you can use the `key` property, which will make sure every tag is only rendered once.\n */\nfunction Head({ children }: { children: React.ReactNode }) {\n  const ampState = useContext(AmpStateContext)\n  const headManager = useContext(HeadManagerContext)\n  return (\n    <Effect\n      reduceComponentsToState={reduceComponents}\n      headManager={headManager}\n      inAmpMode={isInAmpMode(ampState)}\n    >\n      {children}\n    </Effect>\n  )\n}\n\n// TODO: Remove in the next major release\nHead.rewind = () => {}\n\nexport default Head\n","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;","import React, { useCallback, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Avatar, Card } from 'antd';\r\nimport { END } from 'redux-saga';\r\nimport Head from 'next/head';\r\nimport { useRouter } from 'next/router';\r\n\r\nimport axios from 'axios';\r\nimport { LOAD_USER_POSTS_REQUEST } from '../../reducers/post';\r\nimport { LOAD_MY_INFO_REQUEST, LOAD_USER_REQUEST } from '../../reducers/user';\r\nimport PostCard from '../../components/PostCard';\r\nimport wrapper from '../../store/configureStore';\r\nimport AppLayout from '../../components/AppLayout';\r\n\r\nconst User = () => {\r\n    const dispatch = useDispatch();\r\n    const router = useRouter();\r\n    const { id } = router.query;\r\n    const { mainPosts, hasMorePosts, loadUserPostsLoading } = useSelector((state) => state.post);\r\n    const { userInfo } = useSelector((state) => state.user);\r\n\r\n    // useEffect(() => {\r\n    //     dispatch({\r\n    //         type: LOAD_USER_REQUEST,\r\n    //         data: id,\r\n    //     });\r\n    //     dispatch({\r\n    //         type: LOAD_USER_POSTS_REQUEST,\r\n    //         data: id,\r\n    //     });\r\n    //     dispatch({\r\n    //         type: LOAD_MY_INFO_REQUEST,\r\n    //     });\r\n\r\n    //     console.log(\"userInfo: \", userInfo);\r\n\r\n    // }, [])\r\n\r\n    useEffect(() => {\r\n        const onScroll = () => {\r\n            if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\r\n                if (hasMorePosts && !loadUserPostsLoading) {\r\n                    dispatch({\r\n                        type: LOAD_USER_POSTS_REQUEST,\r\n                        lastId: mainPosts[mainPosts.length - 1] && mainPosts[mainPosts.length - 1].id,\r\n                        data: id,\r\n                    });\r\n                }\r\n            }\r\n        };\r\n        window.addEventListener('scroll', onScroll);\r\n        return () => {\r\n            window.removeEventListener('scroll', onScroll);\r\n        };\r\n    }, [mainPosts.length, hasMorePosts, id]);\r\n\r\n    return (\r\n        <AppLayout>\r\n            {/* <div> {id} 로 유저 정보, 유저 포스팅 정보 검색 하기</div> */}\r\n\r\n            {userInfo &&\r\n                <Head>\r\n                    <title>\r\n                        {userInfo.nickname} 님의 글\r\n                    </title>\r\n                    <meta name=\"description\" content={`${userInfo.nickname}님의 게시글`} />\r\n                    <meta property=\"og:title\" content={`${userInfo.nickname}님의 게시글`} />\r\n                    <meta property=\"og:description\" content={`${userInfo.nickname}님의 게시글`} />\r\n                    <meta property=\"og:image\" content=\"https://nodebird.com/favicon.ico\" />\r\n                    <meta property=\"og:url\" content={`https://nodebird.com/user/${id}`} />\r\n                </Head>\r\n            }\r\n\r\n            {userInfo\r\n                ? (\r\n                    <Card\r\n                        actions={[\r\n                            <div key=\"twit\">\r\n                                짹짹\r\n                <br />\r\n                                {userInfo.Posts}\r\n                            </div>,\r\n                            <div key=\"following\">\r\n                                팔로잉\r\n                <br />\r\n                                {userInfo.Followings}\r\n                            </div>,\r\n                            <div key=\"follower\">\r\n                                팔로워\r\n                <br />\r\n                                {userInfo.Followers}\r\n                            </div>,\r\n                        ]}\r\n                    >\r\n                        <Card.Meta\r\n                            avatar={<Avatar>{userInfo.nickname[0]}</Avatar>}\r\n                            title={userInfo.nickname}\r\n                        />\r\n                    </Card>\r\n                )\r\n                : null}\r\n\r\n            {mainPosts.map((c) => (\r\n                <PostCard key={c.id} post={c} />\r\n            ))}\r\n\r\n        </AppLayout>\r\n\r\n    );\r\n};\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n    const cookie = context.req ? context.req.headers.cookie : '';\r\n    axios.defaults.headers.Cookie = '';\r\n    if (context.req && cookie) {\r\n        axios.defaults.headers.Cookie = cookie;\r\n    }\r\n    context.store.dispatch({\r\n        type: LOAD_USER_POSTS_REQUEST,\r\n        data: context.params.id,\r\n    });\r\n    context.store.dispatch({\r\n        type: LOAD_MY_INFO_REQUEST,\r\n    });\r\n    context.store.dispatch({\r\n        type: LOAD_USER_REQUEST,\r\n        data: context.params.id,\r\n    });\r\n    context.store.dispatch(END);\r\n    await context.store.sagaTask.toPromise();\r\n    console.log('getState', context.store.getState().post.mainPosts);\r\n    return { props: {} };\r\n});\r\n\r\nexport default User;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","import React, { Component } from 'react'\n\nconst isServer = typeof window === 'undefined'\n\ntype State = JSX.Element[] | undefined\n\ntype SideEffectProps = {\n  reduceComponentsToState: <T>(\n    components: Array<React.ReactElement<any>>,\n    props: T\n  ) => State\n  handleStateChange?: (state: State) => void\n  headManager: any\n  inAmpMode?: boolean\n}\n\nexport default class extends Component<SideEffectProps> {\n  private _hasHeadManager: boolean\n\n  emitChange = (): void => {\n    if (this._hasHeadManager) {\n      this.props.headManager.updateHead(\n        this.props.reduceComponentsToState(\n          [...this.props.headManager.mountedInstances],\n          this.props\n        )\n      )\n    }\n  }\n\n  constructor(props: any) {\n    super(props)\n    this._hasHeadManager =\n      this.props.headManager && this.props.headManager.mountedInstances\n\n    if (isServer && this._hasHeadManager) {\n      this.props.headManager.mountedInstances.add(this)\n      this.emitChange()\n    }\n  }\n  componentDidMount() {\n    if (this._hasHeadManager) {\n      this.props.headManager.mountedInstances.add(this)\n    }\n    this.emitChange()\n  }\n  componentDidUpdate() {\n    this.emitChange()\n  }\n  componentWillUnmount() {\n    if (this._hasHeadManager) {\n      this.props.headManager.mountedInstances.delete(this)\n    }\n    this.emitChange()\n  }\n\n  render() {\n    return null\n  }\n}\n","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/user/[id]\",\n      function () {\n        return require(\"private-next-pages/user/[id].js\");\n      }\n    ]);\n  ","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","import React from 'react'\n\nexport const AmpStateContext: React.Context<any> = React.createContext({})\n\nif (process.env.NODE_ENV !== 'production') {\n  AmpStateContext.displayName = 'AmpStateContext'\n}\n"],"sourceRoot":""}