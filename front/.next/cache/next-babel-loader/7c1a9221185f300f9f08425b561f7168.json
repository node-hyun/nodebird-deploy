{"ast":null,"code":"import React, { useEffect } from \"react\";\nimport AppLayout from \"../components/AppLayout\";\nimport Head from \"next/head\";\nimport PostForm from \"../components/PostForm\";\nimport PostCard from \"../components/PostCard\";\nimport { LOAD_POSTS_REQUEST } from '../reducers/post';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { notification } from \"antd\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Home = function Home() {\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me;\n\n  var dispatch = useDispatch();\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector2.mainPosts,\n      hasMorePosts = _useSelector2.hasMorePosts,\n      loadPostsLoading = _useSelector2.loadPostsLoading,\n      addPostDone = _useSelector2.addPostDone,\n      removePostDone = _useSelector2.removePostDone;\n\n  var _useSelector3 = useSelector(function (state) {\n    return state.user;\n  }),\n      followError = _useSelector3.followError,\n      unfollowError = _useSelector3.unfollowError; // useEffect(() => {\n  //     if (addPostDone){\n  //     }\n  // }, [addPostDone]);\n\n\n  if (followError) {\n    alert(\"followError : \" + followError);\n  }\n\n  if (unfollowError) {\n    alert(\"unfollowError : \" + unfollowError);\n  }\n\n  useEffect(function () {\n    function onScroll() {\n      // console.log(window.scrollY + document.documentElement.clientHeight, document.documentElement.scrollHeight);\n      if (window.scrollY + document.documentElement.clientHeight >= document.documentElement.scrollHeight - 300) {\n        // console.log(\"화면이 바닥에 도달했습니다.\");\n        if (hasMorePosts && !loadPostsLoading) {\n          var _mainPosts;\n\n          console.log(\"화면이 바닥에 도달 + 포스팅 추가!!\"); // mainPosts 배열의 개수 - 1이 마지막 요소의 인덱스 번호가 되므로 다음과 같이 indec 번호를 가져 온다.\n\n          var lastId = (_mainPosts = mainPosts[mainPosts.length - 1]) === null || _mainPosts === void 0 ? void 0 : _mainPosts.id;\n          dispatch({\n            type: LOAD_POSTS_REQUEST,\n            // data: mainPosts[mainPosts.length - 1].id,\n            lastId: lastId // 그냥 lastId만 써도 된다.\n\n          });\n        }\n      }\n    }\n\n    window.addEventListener('scroll', onScroll);\n    return function () {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [mainPosts, hasMorePosts, loadPostsLoading]);\n  return /*#__PURE__*/_jsxs(AppLayout, {\n    children: [/*#__PURE__*/_jsx(Head, {\n      children: /*#__PURE__*/_jsx(\"title\", {\n        children: \"Home\"\n      })\n    }), me && /*#__PURE__*/_jsx(PostForm, {}), mainPosts.map(function (c) {\n      return /*#__PURE__*/_jsx(PostCard, {\n        post: c\n      }, c.id);\n    })]\n  });\n};\n\nexport var __N_SSP = true;\nexport default Home;","map":null,"metadata":{},"sourceType":"module"}