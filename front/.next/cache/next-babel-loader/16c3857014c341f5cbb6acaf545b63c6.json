{"ast":null,"code":"var _jsxFileName = \"C:\\\\nodebird\\\\front\\\\pages\\\\user\\\\[id].js\";\nimport React, { useCallback, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Avatar, Card } from 'antd';\nimport { END } from 'redux-saga';\nimport Head from 'next/head';\nimport { useRouter } from 'next/router';\nimport axios from 'axios';\nimport { LOAD_USER_POSTS_REQUEST } from '../../reducers/post';\nimport { LOAD_MY_INFO_REQUEST, LOAD_USER_REQUEST } from '../../reducers/user';\nimport PostCard from '../../components/PostCard';\nimport wrapper from '../../store/configureStore';\nimport AppLayout from '../../components/AppLayout';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst User = () => {\n  const dispatch = useDispatch();\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n  const {\n    mainPosts,\n    hasMorePosts,\n    loadUserPostsLoading\n  } = useSelector(state => state.post);\n  const {\n    userInfo\n  } = useSelector(state => state.user);\n  useEffect(() => {\n    const onScroll = () => {\n      if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n        if (hasMorePosts && !loadUserPostsLoading) {\n          dispatch({\n            type: LOAD_USER_POSTS_REQUEST,\n            lastId: mainPosts[mainPosts.length - 1] && mainPosts[mainPosts.length - 1].id,\n            data: id\n          });\n        }\n      }\n    };\n\n    window.addEventListener('scroll', onScroll);\n    return () => {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [mainPosts.length, hasMorePosts, id]);\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: [userInfo.nickname, \"\\uB2D8\\uC758 \\uAE00\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: `${userInfo.nickname}님의 게시글`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        property: \"og:title\",\n        content: `${userInfo.nickname}님의 게시글`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        property: \"og:description\",\n        content: `${userInfo.nickname}님의 게시글`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        property: \"og:image\",\n        content: \"https://nodebird.com/favicon.ico\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        property: \"og:url\",\n        content: `https://nodebird.com/user/${id}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), userInfo ? /*#__PURE__*/_jsxDEV(Card, {\n      actions: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"\\uC9F9\\uC9F9\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this), userInfo.Posts]\n      }, \"twit\", true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"\\uD314\\uB85C\\uC789\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this), userInfo.Followings]\n      }, \"following\", true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"\\uD314\\uB85C\\uC6CC\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this), userInfo.Followers]\n      }, \"follower\", true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 29\n      }, this)],\n      children: /*#__PURE__*/_jsxDEV(Card.Meta, {\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          children: userInfo.nickname[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 37\n        }, this),\n        title: userInfo.nickname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }, this) : null, mainPosts.map(c => /*#__PURE__*/_jsxDEV(PostCard, {\n      post: c\n    }, c.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    type: LOAD_USER_POSTS_REQUEST,\n    data: context.params.id\n  });\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch({\n    type: LOAD_USER_REQUEST,\n    data: context.params.id\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n  console.log('getState', context.store.getState().post.mainPosts);\n  return {\n    props: {}\n  };\n});\nexport default User;","map":{"version":3,"sources":["C:/nodebird/front/pages/user/[id].js"],"names":["React","useCallback","useEffect","useDispatch","useSelector","Avatar","Card","END","Head","useRouter","axios","LOAD_USER_POSTS_REQUEST","LOAD_MY_INFO_REQUEST","LOAD_USER_REQUEST","PostCard","wrapper","AppLayout","User","dispatch","router","id","query","mainPosts","hasMorePosts","loadUserPostsLoading","state","post","userInfo","user","onScroll","window","scrollY","document","documentElement","clientHeight","scrollHeight","type","lastId","length","data","addEventListener","removeEventListener","nickname","Posts","Followings","Followers","map","c","getServerSideProps","context","cookie","req","headers","defaults","Cookie","store","params","sagaTask","toPromise","console","log","getState","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,QAA8C,OAA9C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,MAA7B;AACA,SAASC,GAAT,QAAoB,YAApB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,uBAAT,QAAwC,qBAAxC;AACA,SAASC,oBAAT,EAA+BC,iBAA/B,QAAwD,qBAAxD;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,OAAP,MAAoB,4BAApB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACf,QAAMC,QAAQ,GAAGf,WAAW,EAA5B;AACA,QAAMgB,MAAM,GAAGV,SAAS,EAAxB;AACA,QAAM;AAAEW,IAAAA;AAAF,MAASD,MAAM,CAACE,KAAtB;AACA,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,YAAb;AAA2BC,IAAAA;AAA3B,MAAoDpB,WAAW,CAAEqB,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAArE;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAevB,WAAW,CAAEqB,KAAD,IAAWA,KAAK,CAACG,IAAlB,CAAhC;AAEA1B,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAM2B,QAAQ,GAAG,MAAM;AACnB,UAAIC,MAAM,CAACC,OAAP,GAAiBC,QAAQ,CAACC,eAAT,CAAyBC,YAA1C,GAAyDF,QAAQ,CAACC,eAAT,CAAyBE,YAAzB,GAAwC,GAArG,EAA0G;AACtG,YAAIZ,YAAY,IAAI,CAACC,oBAArB,EAA2C;AACvCN,UAAAA,QAAQ,CAAC;AACLkB,YAAAA,IAAI,EAAEzB,uBADD;AAEL0B,YAAAA,MAAM,EAAEf,SAAS,CAACA,SAAS,CAACgB,MAAV,GAAmB,CAApB,CAAT,IAAmChB,SAAS,CAACA,SAAS,CAACgB,MAAV,GAAmB,CAApB,CAAT,CAAgClB,EAFtE;AAGLmB,YAAAA,IAAI,EAAEnB;AAHD,WAAD,CAAR;AAKH;AACJ;AACJ,KAVD;;AAWAU,IAAAA,MAAM,CAACU,gBAAP,CAAwB,QAAxB,EAAkCX,QAAlC;AACA,WAAO,MAAM;AACTC,MAAAA,MAAM,CAACW,mBAAP,CAA2B,QAA3B,EAAqCZ,QAArC;AACH,KAFD;AAGH,GAhBQ,EAgBN,CAACP,SAAS,CAACgB,MAAX,EAAmBf,YAAnB,EAAiCH,EAAjC,CAhBM,CAAT;AAkBA,sBACI,QAAC,SAAD;AAAA,4BACI,QAAC,IAAD;AAAA,8BACI;AAAA,mBACKO,QAAQ,CAACe,QADd;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAG,GAAEf,QAAQ,CAACe,QAAS;AAAvD;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAM,QAAA,QAAQ,EAAC,UAAf;AAA0B,QAAA,OAAO,EAAG,GAAEf,QAAQ,CAACe,QAAS;AAAxD;AAAA;AAAA;AAAA;AAAA,cANJ,eAOI;AAAM,QAAA,QAAQ,EAAC,gBAAf;AAAgC,QAAA,OAAO,EAAG,GAAEf,QAAQ,CAACe,QAAS;AAA9D;AAAA;AAAA;AAAA;AAAA,cAPJ,eAQI;AAAM,QAAA,QAAQ,EAAC,UAAf;AAA0B,QAAA,OAAO,EAAC;AAAlC;AAAA;AAAA;AAAA;AAAA,cARJ,eASI;AAAM,QAAA,QAAQ,EAAC,QAAf;AAAwB,QAAA,OAAO,EAAG,6BAA4BtB,EAAG;AAAjE;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAYKO,QAAQ,gBAED,QAAC,IAAD;AACI,MAAA,OAAO,EAAE,cACL;AAAA,gDAEZ;AAAA;AAAA;AAAA;AAAA,gBAFY,EAGKA,QAAQ,CAACgB,KAHd;AAAA,SAAS,MAAT;AAAA;AAAA;AAAA;AAAA,cADK,eAML;AAAA,sDAEZ;AAAA;AAAA;AAAA;AAAA,gBAFY,EAGKhB,QAAQ,CAACiB,UAHd;AAAA,SAAS,WAAT;AAAA;AAAA;AAAA;AAAA,cANK,eAWL;AAAA,sDAEZ;AAAA;AAAA;AAAA;AAAA,gBAFY,EAGKjB,QAAQ,CAACkB,SAHd;AAAA,SAAS,UAAT;AAAA;AAAA;AAAA;AAAA,cAXK,CADb;AAAA,6BAmBI,QAAC,IAAD,CAAM,IAAN;AACI,QAAA,MAAM,eAAE,QAAC,MAAD;AAAA,oBAASlB,QAAQ,CAACe,QAAT,CAAkB,CAAlB;AAAT;AAAA;AAAA;AAAA;AAAA,gBADZ;AAEI,QAAA,KAAK,EAAEf,QAAQ,CAACe;AAFpB;AAAA;AAAA;AAAA;AAAA;AAnBJ;AAAA;AAAA;AAAA;AAAA,YAFC,GA2BH,IAvCV,EAwCKpB,SAAS,CAACwB,GAAV,CAAeC,CAAD,iBACX,QAAC,QAAD;AAAqB,MAAA,IAAI,EAAEA;AAA3B,OAAeA,CAAC,CAAC3B,EAAjB;AAAA;AAAA;AAAA;AAAA,YADH,CAxCL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA8CH,CAvED;;AAyEA,OAAO,MAAM4B,kBAAkB,GAAGjC,OAAO,CAACiC,kBAAR,CAA2B,MAAOC,OAAP,IAAmB;AAC5E,QAAMC,MAAM,GAAGD,OAAO,CAACE,GAAR,GAAcF,OAAO,CAACE,GAAR,CAAYC,OAAZ,CAAoBF,MAAlC,GAA2C,EAA1D;AACAxC,EAAAA,KAAK,CAAC2C,QAAN,CAAeD,OAAf,CAAuBE,MAAvB,GAAgC,EAAhC;;AACA,MAAIL,OAAO,CAACE,GAAR,IAAeD,MAAnB,EAA2B;AACvBxC,IAAAA,KAAK,CAAC2C,QAAN,CAAeD,OAAf,CAAuBE,MAAvB,GAAgCJ,MAAhC;AACH;;AACDD,EAAAA,OAAO,CAACM,KAAR,CAAcrC,QAAd,CAAuB;AACnBkB,IAAAA,IAAI,EAAEzB,uBADa;AAEnB4B,IAAAA,IAAI,EAAEU,OAAO,CAACO,MAAR,CAAepC;AAFF,GAAvB;AAIA6B,EAAAA,OAAO,CAACM,KAAR,CAAcrC,QAAd,CAAuB;AACnBkB,IAAAA,IAAI,EAAExB;AADa,GAAvB;AAGAqC,EAAAA,OAAO,CAACM,KAAR,CAAcrC,QAAd,CAAuB;AACnBkB,IAAAA,IAAI,EAAEvB,iBADa;AAEnB0B,IAAAA,IAAI,EAAEU,OAAO,CAACO,MAAR,CAAepC;AAFF,GAAvB;AAIA6B,EAAAA,OAAO,CAACM,KAAR,CAAcrC,QAAd,CAAuBX,GAAvB;AACA,QAAM0C,OAAO,CAACM,KAAR,CAAcE,QAAd,CAAuBC,SAAvB,EAAN;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBX,OAAO,CAACM,KAAR,CAAcM,QAAd,GAAyBnC,IAAzB,CAA8BJ,SAAtD;AACA,SAAO;AAAEwC,IAAAA,KAAK,EAAE;AAAT,GAAP;AACH,CArBiC,CAA3B;AAuBP,eAAe7C,IAAf","sourcesContent":["import React, { useCallback, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Avatar, Card } from 'antd';\r\nimport { END } from 'redux-saga';\r\nimport Head from 'next/head';\r\nimport { useRouter } from 'next/router';\r\n\r\nimport axios from 'axios';\r\nimport { LOAD_USER_POSTS_REQUEST } from '../../reducers/post';\r\nimport { LOAD_MY_INFO_REQUEST, LOAD_USER_REQUEST } from '../../reducers/user';\r\nimport PostCard from '../../components/PostCard';\r\nimport wrapper from '../../store/configureStore';\r\nimport AppLayout from '../../components/AppLayout';\r\n\r\nconst User = () => {\r\n    const dispatch = useDispatch();\r\n    const router = useRouter();\r\n    const { id } = router.query;\r\n    const { mainPosts, hasMorePosts, loadUserPostsLoading } = useSelector((state) => state.post);\r\n    const { userInfo } = useSelector((state) => state.user);\r\n\r\n    useEffect(() => {\r\n        const onScroll = () => {\r\n            if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\r\n                if (hasMorePosts && !loadUserPostsLoading) {\r\n                    dispatch({\r\n                        type: LOAD_USER_POSTS_REQUEST,\r\n                        lastId: mainPosts[mainPosts.length - 1] && mainPosts[mainPosts.length - 1].id,\r\n                        data: id,\r\n                    });\r\n                }\r\n            }\r\n        };\r\n        window.addEventListener('scroll', onScroll);\r\n        return () => {\r\n            window.removeEventListener('scroll', onScroll);\r\n        };\r\n    }, [mainPosts.length, hasMorePosts, id]);\r\n\r\n    return (\r\n        <AppLayout>\r\n            <Head>\r\n                <title>\r\n                    {userInfo.nickname}\r\n          님의 글\r\n        </title>\r\n                <meta name=\"description\" content={`${userInfo.nickname}님의 게시글`} />\r\n                <meta property=\"og:title\" content={`${userInfo.nickname}님의 게시글`} />\r\n                <meta property=\"og:description\" content={`${userInfo.nickname}님의 게시글`} />\r\n                <meta property=\"og:image\" content=\"https://nodebird.com/favicon.ico\" />\r\n                <meta property=\"og:url\" content={`https://nodebird.com/user/${id}`} />\r\n            </Head>\r\n            {userInfo\r\n                ? (\r\n                    <Card\r\n                        actions={[\r\n                            <div key=\"twit\">\r\n                                짹짹\r\n                <br />\r\n                                {userInfo.Posts}\r\n                            </div>,\r\n                            <div key=\"following\">\r\n                                팔로잉\r\n                <br />\r\n                                {userInfo.Followings}\r\n                            </div>,\r\n                            <div key=\"follower\">\r\n                                팔로워\r\n                <br />\r\n                                {userInfo.Followers}\r\n                            </div>,\r\n                        ]}\r\n                    >\r\n                        <Card.Meta\r\n                            avatar={<Avatar>{userInfo.nickname[0]}</Avatar>}\r\n                            title={userInfo.nickname}\r\n                        />\r\n                    </Card>\r\n                )\r\n                : null}\r\n            {mainPosts.map((c) => (\r\n                <PostCard key={c.id} post={c} />\r\n            ))}\r\n        </AppLayout>\r\n    );\r\n};\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n    const cookie = context.req ? context.req.headers.cookie : '';\r\n    axios.defaults.headers.Cookie = '';\r\n    if (context.req && cookie) {\r\n        axios.defaults.headers.Cookie = cookie;\r\n    }\r\n    context.store.dispatch({\r\n        type: LOAD_USER_POSTS_REQUEST,\r\n        data: context.params.id,\r\n    });\r\n    context.store.dispatch({\r\n        type: LOAD_MY_INFO_REQUEST,\r\n    });\r\n    context.store.dispatch({\r\n        type: LOAD_USER_REQUEST,\r\n        data: context.params.id,\r\n    });\r\n    context.store.dispatch(END);\r\n    await context.store.sagaTask.toPromise();\r\n    console.log('getState', context.store.getState().post.mainPosts);\r\n    return { props: {} };\r\n});\r\n\r\nexport default User;"]},"metadata":{},"sourceType":"module"}