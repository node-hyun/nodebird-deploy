{"ast":null,"code":"var _jsxFileName = \"C:\\\\nodebird\\\\front\\\\components\\\\UserProfile.js\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { Avatar, Card, Button, notification } from \"antd\"; // import { useDispatch } from \"react-redux\";\n// import { logoutAction } from \"../reducers/user\";\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { LOG_OUT_REQUEST } from '../reducers/user';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst dummy = {\n  nickname: \"제로초\",\n  Post: [],\n  Followings: [],\n  Followers: [],\n  isLoggedIn: false\n};\n\nconst UserProfile = ({\n  setIsLoggedIn\n}) => {\n  const dispatch = useDispatch();\n  const {\n    me,\n    logOutLoading,\n    logindone,\n    logOutDone\n  } = useSelector(state => state.user);\n  const {\n    0: logOutUser,\n    1: setlogOutUser\n  } = useState(\"\");\n  console.log(\"logInDone : \", logInDone);\n  useEffect(() => {\n    if (logInDone) {\n      console.log(\"로그인 했습니다.\");\n      notification.open({\n        message: '알림',\n        description: \"환영합니다 \" + me.nickname + \"님\"\n      });\n    }\n  }, [logInDone]);\n  useEffect(() => {\n    notification.open({\n      message: '알림',\n      description: \"안녕히 가세요 \" + logOutUser + \"님\"\n    });\n  }, [logOutDone]);\n  const onLogOut = useCallback(() => {\n    // setIsLoggedIn(false);\n    // dispatch(logoutAction());\n    dispatch({\n      type: LOG_OUT_REQUEST\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    actions: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\uC9F9\\uC9F9\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this), me.Posts.length]\n    }, \"twit\", true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\uD314\\uB85C\\uC789\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this), me.Followings.length]\n    }, \"following\", true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\uD314\\uB85C\\uC6CC\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this), me.Followers.length]\n    }, \"follower\", true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }, this)],\n    children: [/*#__PURE__*/_jsxDEV(Card.Meta, {\n      avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n        children: me.nickname[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 25\n      }, this),\n      title: me.nickname\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: onLogOut,\n      loading: logOutLoading,\n      children: \"\\uB85C\\uADF8\\uC544\\uC6C3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n\nexport default UserProfile;","map":{"version":3,"sources":["C:/nodebird/front/components/UserProfile.js"],"names":["React","useCallback","useEffect","useState","Avatar","Card","Button","notification","useSelector","useDispatch","LOG_OUT_REQUEST","dummy","nickname","Post","Followings","Followers","isLoggedIn","UserProfile","setIsLoggedIn","dispatch","me","logOutLoading","logindone","logOutDone","state","user","logOutUser","setlogOutUser","console","log","logInDone","open","message","description","onLogOut","type","Posts","length"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { Avatar, Card, Button, notification } from \"antd\";\r\n\r\n\r\n// import { useDispatch } from \"react-redux\";\r\n// import { logoutAction } from \"../reducers/user\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { LOG_OUT_REQUEST } from '../reducers/user';\r\n\r\n\r\nconst dummy = {\r\n    nickname: \"제로초\",\r\n    Post: [],\r\n    Followings: [],\r\n    Followers: [],\r\n    isLoggedIn: false,\r\n};\r\n\r\n\r\nconst UserProfile = ({ setIsLoggedIn }) => {\r\n    const dispatch = useDispatch();\r\n    const { me, logOutLoading, logindone, logOutDone } = useSelector((state) => state.user);\r\n    const [logOutUser, setlogOutUser] = useState(\"\")\r\n\r\n    console.log(\"logInDone : \", logInDone);\r\n\r\n    useEffect(() => {\r\n        if (logInDone) {\r\n            console.log(\"로그인 했습니다.\");\r\n            notification.open({\r\n                message: '알림',\r\n                description: \"환영합니다 \" + me.nickname + \"님\"\r\n            })\r\n        }\r\n    }, [logInDone])\r\n\r\n    useEffect(() => {\r\n        notification.open({\r\n            message: '알림',\r\n            description: \"안녕히 가세요 \" + logOutUser + \"님\"\r\n        })\r\n    }, [logOutDone])\r\n\r\n\r\n\r\n    const onLogOut = useCallback(() => {\r\n        // setIsLoggedIn(false);\r\n        // dispatch(logoutAction());\r\n        dispatch({\r\n            type: LOG_OUT_REQUEST,\r\n        });\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <Card\r\n            actions={[\r\n                <div key=\"twit\">\r\n                    짹짹\r\n                    <br />\r\n                    {me.Posts.length}\r\n                </div>,\r\n                <div key=\"following\">\r\n                    팔로잉\r\n                    <br />\r\n                    {me.Followings.length}\r\n                </div>,\r\n                <div key=\"follower\">\r\n                    팔로워\r\n                    <br />\r\n                    {me.Followers.length}\r\n                </div>,\r\n            ]}\r\n        >\r\n            <Card.Meta\r\n                avatar={<Avatar>{me.nickname[0]}</Avatar>}\r\n                title={me.nickname}\r\n            />\r\n            <Button onClick={onLogOut} loading={logOutLoading}>로그아웃</Button>\r\n        </Card>\r\n    );\r\n};\r\n\r\n\r\nexport default UserProfile;"]},"metadata":{},"sourceType":"module"}