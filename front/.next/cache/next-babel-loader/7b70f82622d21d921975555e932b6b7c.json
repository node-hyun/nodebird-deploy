{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport produce from 'immer';\nexport const initialState = {\n  me: null,\n  logInLoading: false,\n  // 로그인 시도중\n  logInDone: false,\n  logInError: null,\n  logOutLoading: false,\n  // 로그아웃 시도중\n  logOutDone: false,\n  logOutError: null\n};\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME';\nexport const REMOVE_POST_OF_ME = 'REMOVE_POST_OF_ME';\n\nconst dummyUser = data => _objectSpread(_objectSpread({}, data), {}, {\n  // saga에서 넘어온 데이터\n  nickname: '제로초',\n  id: 1,\n  Posts: [{\n    id: 1\n  }],\n  Followings: [{\n    nickname: '부기초'\n  }, {\n    nickname: 'Chanho Lee'\n  }, {\n    nickname: 'neue zeal'\n  }],\n  Followers: [{\n    nickname: '부기초'\n  }, {\n    nickname: 'Chanho Lee'\n  }, {\n    nickname: 'neue zeal'\n  }]\n});\n\nexport default ((state = initialState, action) => {\n  return produce(state, draft => {\n    switch (action.type) {\n      case LOG_IN_REQUEST:\n        return _objectSpread(_objectSpread({}, state), {}, {\n          logInLoading: true,\n          logInError: null,\n          logInDone: false\n        });\n\n      case LOG_IN_SUCCESS:\n        return _objectSpread(_objectSpread({}, state), {}, {\n          logInLoading: false,\n          logInDone: true,\n          me: dummyUser(action.data)\n        });\n\n      case LOG_IN_FAILURE:\n        return _objectSpread(_objectSpread({}, state), {}, {\n          logInLoading: false,\n          logInError: action.data\n        });\n\n      case LOG_OUT_REQUEST:\n        return _objectSpread(_objectSpread({}, state), {}, {\n          logOutLoading: true,\n          logouterror: null,\n          logOutDone: false\n        });\n\n      case LOG_OUT_SUCCESS:\n        return _objectSpread(_objectSpread({}, state), {}, {\n          logOutLoading: false,\n          logOutDone: true,\n          me: null\n        });\n\n      case LOG_OUT_FAILURE:\n        return _objectSpread(_objectSpread({}, state), {}, {\n          logOutLoading: false,\n          logouterror: action.error\n        });\n\n      case ADD_POST_TO_ME:\n        return _objectSpread(_objectSpread({}, state), {}, {\n          me: _objectSpread(_objectSpread({}, state.me), {}, {\n            Posts: [{\n              id: action.data\n            }, ...state.me.Posts]\n          })\n        });\n\n      case REMOVE_POST_OF_ME:\n        return _objectSpread(_objectSpread({}, state), {}, {\n          me: _objectSpread(_objectSpread({}, state.me), {}, {\n            Posts: state.me.Posts.filter(v => v.id !== action.data)\n          })\n        });\n\n      default:\n        return state;\n    }\n  });\n}); // export default reducer;","map":{"version":3,"sources":["C:/prepare/front/reducers/user.js"],"names":["produce","initialState","me","logInLoading","logInDone","logInError","logOutLoading","logOutDone","logOutError","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","ADD_POST_TO_ME","REMOVE_POST_OF_ME","dummyUser","data","nickname","id","Posts","Followings","Followers","state","action","draft","type","logouterror","error","filter","v"],"mappings":"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","sourcesContent":["import produce from 'immer';   \r\n\r\nexport const initialState = {\r\n    me: null,\r\n    logInLoading: false, // 로그인 시도중\r\n    logInDone: false,\r\n    logInError: null,\r\n\r\n    logOutLoading: false, // 로그아웃 시도중\r\n    logOutDone: false,\r\n    logOutError: null,\r\n};\r\n\r\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\r\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\r\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\r\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\r\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\r\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\r\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME';\r\nexport const REMOVE_POST_OF_ME = 'REMOVE_POST_OF_ME';\r\n\r\n\r\nconst dummyUser = (data) => ({\r\n    ...data, // saga에서 넘어온 데이터\r\n    nickname: '제로초',\r\n    id: 1,\r\n    Posts: [{ id: 1 }],\r\n    Followings: [{ nickname: '부기초' }, { nickname: 'Chanho Lee' }, { nickname: 'neue zeal' }],\r\n    Followers: [{ nickname: '부기초' }, { nickname: 'Chanho Lee' }, { nickname: 'neue zeal' }],\r\n});\r\n\r\n\r\nexport default (state = initialState, action) => {\r\n    return produce(state, (draft) => {\r\n        switch (action.type) {\r\n            case LOG_IN_REQUEST:\r\n                return {\r\n                    ...state,\r\n                    logInLoading: true,\r\n                    logInError: null,\r\n                    logInDone: false\r\n                };\r\n            case LOG_IN_SUCCESS:\r\n                return {\r\n                    ...state,\r\n                    logInLoading: false,\r\n                    logInDone: true,\r\n                    me: dummyUser(action.data),\r\n                };\r\n            case LOG_IN_FAILURE:\r\n                return {\r\n                    ...state,\r\n                    logInLoading: false,\r\n                    logInError: action.data\r\n                };\r\n            case LOG_OUT_REQUEST:\r\n                return {\r\n                    ...state,\r\n                    logOutLoading: true,\r\n                    logouterror: null,\r\n                    logOutDone: false\r\n                };\r\n            case LOG_OUT_SUCCESS:\r\n                return {\r\n                    ...state,\r\n                    logOutLoading: false,\r\n                    logOutDone: true,\r\n                    me: null,\r\n                };\r\n            case LOG_OUT_FAILURE:\r\n                return {\r\n                    ...state,\r\n                    logOutLoading: false,\r\n                    logouterror: action.error,\r\n                };\r\n            case ADD_POST_TO_ME:\r\n                return {\r\n                    ...state,\r\n                    me: {\r\n                        ...state.me,\r\n                        Posts: [{ id: action.data }, ...state.me.Posts],\r\n                    },\r\n                };\r\n            case REMOVE_POST_OF_ME:\r\n                return {\r\n                    ...state,\r\n                    me: {\r\n                        ...state.me,\r\n                        Posts: state.me.Posts.filter((v) => v.id !== action.data),\r\n                    },\r\n                };\r\n            default:\r\n                return state;\r\n        }\r\n    });\r\n}\r\n\r\n// export default reducer;\r\n"]},"metadata":{},"sourceType":"module"}