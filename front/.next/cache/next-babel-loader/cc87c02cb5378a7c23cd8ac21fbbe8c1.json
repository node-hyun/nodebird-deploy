{"ast":null,"code":"var _jsxFileName = \"C:\\\\nodebird\\\\front\\\\pages\\\\user\\\\[id].js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Avatar, Card } from 'antd';\nimport { END } from 'redux-saga';\nimport Head from 'next/head';\nimport { useRouter } from 'next/router';\nimport axios from 'axios';\nimport { LOAD_USER_POSTS_REQUEST } from '../../reducers/post';\nimport { LOAD_MY_INFO_REQUEST, LOAD_USER_REQUEST } from '../../reducers/user';\nimport PostCard from '../../components/PostCard';\nimport wrapper from '../../store/configureStore';\nimport AppLayout from '../../components/AppLayout';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar User = function User() {\n  _s();\n\n  var dispatch = useDispatch();\n  var router = useRouter();\n  var id = router.query.id;\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector.mainPosts,\n      hasMorePosts = _useSelector.hasMorePosts,\n      loadUserPostsLoading = _useSelector.loadUserPostsLoading;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.user;\n  }),\n      userInfo = _useSelector2.userInfo;\n\n  useEffect(function () {// context.store.dispat/\n  });\n  useEffect(function () {\n    var onScroll = function onScroll() {\n      if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n        if (hasMorePosts && !loadUserPostsLoading) {\n          dispatch({\n            type: LOAD_USER_POSTS_REQUEST,\n            lastId: mainPosts[mainPosts.length - 1] && mainPosts[mainPosts.length - 1].id,\n            data: id\n          });\n        }\n      }\n    };\n\n    window.addEventListener('scroll', onScroll);\n    return function () {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [mainPosts.length, hasMorePosts, id]);\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: [userInfo.nickname, \"\\uB2D8\\uC758 \\uAE00\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, _this), userInfo ? /*#__PURE__*/_jsxDEV(Card, {\n      actions: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"\\uC9F9\\uC9F9\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, _this), userInfo.Posts]\n      }, \"twit\", true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 29\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"\\uD314\\uB85C\\uC789\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, _this), userInfo.Followings]\n      }, \"following\", true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 29\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"\\uD314\\uB85C\\uC6CC\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, _this), userInfo.Followers]\n      }, \"follower\", true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 29\n      }, _this)],\n      children: /*#__PURE__*/_jsxDEV(Card.Meta, {\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          children: userInfo.nickname[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 37\n        }, _this),\n        title: userInfo.nickname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 25\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }, _this) : null, mainPosts.map(function (c) {\n      return /*#__PURE__*/_jsxDEV(PostCard, {\n        post: c\n      }, c.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, _this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, _this);\n}; // export const getServerSideProps = wrapper.getServerSideProps(async (context) => {\n//     const cookie = context.req ? context.req.headers.cookie : '';\n//     axios.defaults.headers.Cookie = '';\n//     if (context.req && cookie) {\n//         axios.defaults.headers.Cookie = cookie;\n//     }\n//     context.store.dispatch({\n//         type: LOAD_USER_POSTS_REQUEST,\n//         data: context.params.id,\n//     });\n//     context.store.dispatch({\n//         type: LOAD_MY_INFO_REQUEST,\n//     });\n//     context.store.dispatch({\n//         type: LOAD_USER_REQUEST,\n//         data: context.params.id,\n//     });\n//     context.store.dispatch(END);\n//     await context.store.sagaTask.toPromise();\n//     console.log('getState', context.store.getState().post.mainPosts);\n//     return { props: {} };\n// });\n\n\n_s(User, \"xFRJtzTd5ijeSg8U2b62ktCHhZE=\", false, function () {\n  return [useDispatch, useRouter, useSelector, useSelector];\n});\n\n_c = User;\nexport default User;\n\nvar _c;\n\n$RefreshReg$(_c, \"User\");","map":{"version":3,"sources":["C:/nodebird/front/pages/user/[id].js"],"names":["React","useCallback","useEffect","useDispatch","useSelector","Avatar","Card","END","Head","useRouter","axios","LOAD_USER_POSTS_REQUEST","LOAD_MY_INFO_REQUEST","LOAD_USER_REQUEST","PostCard","wrapper","AppLayout","User","dispatch","router","id","query","state","post","mainPosts","hasMorePosts","loadUserPostsLoading","user","userInfo","onScroll","window","scrollY","document","documentElement","clientHeight","scrollHeight","type","lastId","length","data","addEventListener","removeEventListener","nickname","Posts","Followings","Followers","map","c"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Avatar, Card } from 'antd';\r\nimport { END } from 'redux-saga';\r\nimport Head from 'next/head';\r\nimport { useRouter } from 'next/router';\r\n\r\nimport axios from 'axios';\r\nimport { LOAD_USER_POSTS_REQUEST } from '../../reducers/post';\r\nimport { LOAD_MY_INFO_REQUEST, LOAD_USER_REQUEST } from '../../reducers/user';\r\nimport PostCard from '../../components/PostCard';\r\nimport wrapper from '../../store/configureStore';\r\nimport AppLayout from '../../components/AppLayout';\r\n\r\nconst User = () => {\r\n    const dispatch = useDispatch();\r\n    const router = useRouter();\r\n    const { id } = router.query;\r\n    const { mainPosts, hasMorePosts, loadUserPostsLoading } = useSelector((state) => state.post);\r\n    const { userInfo } = useSelector((state) => state.user);\r\n\r\n    useEffect(()=> {\r\n            // context.store.dispat/\r\n    })\r\n\r\n    useEffect(() => {\r\n        const onScroll = () => {\r\n            if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\r\n                if (hasMorePosts && !loadUserPostsLoading) {\r\n                    dispatch({\r\n                        type: LOAD_USER_POSTS_REQUEST,\r\n                        lastId: mainPosts[mainPosts.length - 1] && mainPosts[mainPosts.length - 1].id,\r\n                        data: id,\r\n                    });\r\n                }\r\n            }\r\n        };\r\n        window.addEventListener('scroll', onScroll);\r\n        return () => {\r\n            window.removeEventListener('scroll', onScroll);\r\n        };\r\n    }, [mainPosts.length, hasMorePosts, id]);\r\n\r\n    return (\r\n        <AppLayout>\r\n            <Head>\r\n                <title>\r\n                    {userInfo.nickname}\r\n          님의 글\r\n        </title>\r\n                {/* <meta name=\"description\" content={`${userInfo.nickname}님의 게시글`} />\r\n                <meta property=\"og:title\" content={`${userInfo.nickname}님의 게시글`} />\r\n                <meta property=\"og:description\" content={`${userInfo.nickname}님의 게시글`} />\r\n                <meta property=\"og:image\" content=\"https://nodebird.com/favicon.ico\" />\r\n                <meta property=\"og:url\" content={`https://nodebird.com/user/${id}`} /> */}\r\n            </Head>\r\n            {userInfo\r\n                ? (\r\n                    <Card\r\n                        actions={[\r\n                            <div key=\"twit\">\r\n                                짹짹\r\n                <br />\r\n                                {userInfo.Posts}\r\n                            </div>,\r\n                            <div key=\"following\">\r\n                                팔로잉\r\n                <br />\r\n                                {userInfo.Followings}\r\n                            </div>,\r\n                            <div key=\"follower\">\r\n                                팔로워\r\n                <br />\r\n                                {userInfo.Followers}\r\n                            </div>,\r\n                        ]}\r\n                    >\r\n                        <Card.Meta\r\n                            avatar={<Avatar>{userInfo.nickname[0]}</Avatar>}\r\n                            title={userInfo.nickname}\r\n                        />\r\n                    </Card>\r\n                )\r\n                : null}\r\n            {mainPosts.map((c) => (\r\n                <PostCard key={c.id} post={c} />\r\n            ))}\r\n        </AppLayout>\r\n    );\r\n};\r\n\r\n// export const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n//     const cookie = context.req ? context.req.headers.cookie : '';\r\n//     axios.defaults.headers.Cookie = '';\r\n//     if (context.req && cookie) {\r\n//         axios.defaults.headers.Cookie = cookie;\r\n//     }\r\n//     context.store.dispatch({\r\n//         type: LOAD_USER_POSTS_REQUEST,\r\n//         data: context.params.id,\r\n//     });\r\n//     context.store.dispatch({\r\n//         type: LOAD_MY_INFO_REQUEST,\r\n//     });\r\n//     context.store.dispatch({\r\n//         type: LOAD_USER_REQUEST,\r\n//         data: context.params.id,\r\n//     });\r\n//     context.store.dispatch(END);\r\n//     await context.store.sagaTask.toPromise();\r\n//     console.log('getState', context.store.getState().post.mainPosts);\r\n//     return { props: {} };\r\n// });\r\n\r\nexport default User;"]},"metadata":{},"sourceType":"module"}