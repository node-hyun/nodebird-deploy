{"ast":null,"code":"import { all, call, delay, fork, put, takeLatest } from 'redux-saga/effects';\nimport { LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE, FOLLOW_FAILURE, FOLLOW_REQUEST, FOLLOW_SUCCESS, UNFOLLOW_FAILURE, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE, LOAD_USER_FAILURE, LOAD_USER_REQUEST, LOAD_USER_SUCCESS, LOAD_FOLLOWERS_REQUEST, LOAD_FOLLOWERS_SUCCESS, LOAD_FOLLOWERS_FAILURE, LOAD_FOLLOWINGS_REQUEST, LOAD_FOLLOWINGS_SUCCESS, LOAD_FOLLOWINGS_FAILURE } from '../reducers/user';\nimport axios from \"axios\";\n\nfunction loadFollowersAPI(data) {\n  console.log(\"data from loadFollowersAPI: \", data); // return axios.get(`/user/followers?limit=${data.limit || 3}`, data);\n\n  return axios.get('/user/followers', data);\n}\n\nfunction* loadFollowers(action) {\n  try {\n    const result = yield call(loadFollowersAPI, action.data);\n    console.log(\"result from saga for loadFollowersAPI:\", result);\n    yield put({\n      type: LOAD_FOLLOWERS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_FOLLOWERS_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadFollowingsAPI(data) {\n  console.log(\"data from loadFollowingsAPI: \", data);\n  return axios.get(`/user/followings`, data);\n}\n\nfunction* loadFollowings(action) {\n  try {\n    const result = yield call(loadFollowingsAPI, action.data);\n    console.log(\"result from saga for loadFollowersAPI:\", result);\n    yield put({\n      type: LOAD_FOLLOWINGS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_FOLLOWINGS_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction signUpAPI(data) {\n  // console.log(\"saga signUpAPI 실행 확인 회원 가입 정보는 => \", data);\n  return axios.post('/user', data);\n}\n\nfunction* signUp(action) {\n  try {\n    // yield delay(1000);\n    const result = yield call(signUpAPI, action.data);\n    console.log(\"회원 가입 응답 result : \", result);\n    yield put({\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction followAPI(data) {\n  // return axios.post('/api/follow');\n  return axios.patch(`/user/${data}/follow`);\n}\n\nfunction* follow(action) {\n  try {\n    // yield delay(1000);\n    const result = yield call(followAPI, action.data);\n    console.log(\"result for followAPI from backend : \", result);\n    yield put({\n      type: FOLLOW_SUCCESS,\n      // data: action.data,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction unfollowAPI(data) {\n  // return axios.post('/api/unfollow');\n  return axios.delete(`/user/${data}/follow`);\n}\n\nfunction* unfollow(action) {\n  try {\n    // yield delay(1000);\n    const result = yield call(unfollowAPI, action.data);\n    console.log(\"result for unfollowAPI from backend : \", result);\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      // data: action.data,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction logInAPI(data) {\n  console.log(\"로그인 데이터 to 서버 from saga: \", data); // return axios.post('/api/login', data);\n\n  return axios.post('/user/login', data);\n}\n\nfunction* logIn(action) {\n  try {\n    // yield delay(2000);\n    const result = yield call(logInAPI, action.data);\n    console.log(\"result.data(from server) : \", result.data);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      // data: action.data,\n      data: result.data\n    });\n  } catch (err) {\n    console.log(\"로그인 에러 확인 from saga : \", err);\n    console.error(err);\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction logOutAPI(data) {\n  // return axios.post('/api/login', data);\n  return axios.post('/user/logout', data);\n}\n\nfunction* logOut(action) {\n  try {\n    console.log('saga logout'); // yield delay(2000);\n\n    const result = yield call(logOutAPI);\n    yield put({\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadUserAPI() {\n  return axios.get('/user');\n}\n\nfunction* loadUser(action) {\n  try {\n    const result = yield call(loadUserAPI, action.data);\n    yield put({\n      type: LOAD_USER_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_USER_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchLogOut() {\n  console.log(\"saga watch 실행 check\");\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchLogIn() {\n  console.log(\"saga watch 실행 check\");\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchUnfollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\n}\n\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\nfunction* watchLoadUser() {\n  yield takeLatest(LOAD_USER_REQUEST, loadUser);\n}\n\nfunction* watchLoadFollowers() {\n  yield takeLatest(LOAD_FOLLOWERS_REQUEST, loadFollowers);\n}\n\nfunction* watchLoadFollowings() {\n  yield takeLatest(LOAD_FOLLOWINGS_REQUEST, loadFollowings);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogIn), fork(watchLogOut), fork(watchFollow), fork(watchUnfollow), fork(watchSignUp), fork(watchLoadUser), fork(watchLoadFollowers), fork(watchLoadFollowings)]);\n}","map":{"version":3,"sources":["C:/nodebird/front/sagas/user.js"],"names":["all","call","delay","fork","put","takeLatest","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","FOLLOW_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","UNFOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","LOAD_USER_FAILURE","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_FOLLOWERS_REQUEST","LOAD_FOLLOWERS_SUCCESS","LOAD_FOLLOWERS_FAILURE","LOAD_FOLLOWINGS_REQUEST","LOAD_FOLLOWINGS_SUCCESS","LOAD_FOLLOWINGS_FAILURE","axios","loadFollowersAPI","data","console","log","get","loadFollowers","action","result","type","err","error","response","loadFollowingsAPI","loadFollowings","signUpAPI","post","signUp","followAPI","patch","follow","unfollowAPI","delete","unfollow","logInAPI","logIn","logOutAPI","logOut","loadUserAPI","loadUser","watchLogOut","watchLogIn","watchUnfollow","watchFollow","watchSignUp","watchLoadUser","watchLoadFollowers","watchLoadFollowings","userSaga"],"mappings":"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","sourcesContent":["import { all, call, delay, fork, put, takeLatest } from 'redux-saga/effects';\r\nimport {\r\n    LOG_IN_REQUEST,\r\n    LOG_IN_SUCCESS,\r\n    LOG_IN_FAILURE,\r\n    LOG_OUT_REQUEST,\r\n    LOG_OUT_SUCCESS,\r\n    LOG_OUT_FAILURE,\r\n    FOLLOW_FAILURE,\r\n    FOLLOW_REQUEST,\r\n    FOLLOW_SUCCESS,\r\n    UNFOLLOW_FAILURE,\r\n    UNFOLLOW_REQUEST,\r\n    UNFOLLOW_SUCCESS,\r\n    SIGN_UP_REQUEST,\r\n    SIGN_UP_SUCCESS,\r\n    SIGN_UP_FAILURE,\r\n    LOAD_USER_FAILURE,\r\n    LOAD_USER_REQUEST,\r\n    LOAD_USER_SUCCESS,\r\n\r\n    LOAD_FOLLOWERS_REQUEST, \r\n    LOAD_FOLLOWERS_SUCCESS, \r\n    LOAD_FOLLOWERS_FAILURE,\r\n\r\n    LOAD_FOLLOWINGS_REQUEST, \r\n    LOAD_FOLLOWINGS_SUCCESS,\r\n    LOAD_FOLLOWINGS_FAILURE,\r\n\r\n} from '../reducers/user';\r\nimport axios from \"axios\";\r\n\r\nfunction loadFollowersAPI(data) {\r\n    console.log(\"data from loadFollowersAPI: \", data);\r\n    // return axios.get(`/user/followers?limit=${data.limit || 3}`, data);\r\n    return axios.get('/user/followers', data);\r\n}\r\n\r\nfunction* loadFollowers(action) {\r\n    try {\r\n        const result = yield call(loadFollowersAPI, action.data);\r\n        console.log(\"result from saga for loadFollowersAPI:\", result);\r\n        yield put({\r\n            type: LOAD_FOLLOWERS_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: LOAD_FOLLOWERS_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction loadFollowingsAPI(data) {\r\n    console.log(\"data from loadFollowingsAPI: \", data);\r\n    return axios.get(`/user/followings`, data);\r\n}\r\n\r\nfunction* loadFollowings(action) {\r\n    try {\r\n        const result = yield call(loadFollowingsAPI, action.data);\r\n        console.log(\"result from saga for loadFollowersAPI:\", result);\r\n\r\n        yield put({\r\n            type: LOAD_FOLLOWINGS_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: LOAD_FOLLOWINGS_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction signUpAPI(data) {\r\n    // console.log(\"saga signUpAPI 실행 확인 회원 가입 정보는 => \", data);\r\n    return axios.post('/user', data);\r\n}\r\n\r\nfunction* signUp(action) {\r\n    try {\r\n        // yield delay(1000);\r\n        const result = yield call(signUpAPI, action.data);\r\n        console.log(\"회원 가입 응답 result : \", result);\r\n        yield put({\r\n            type: SIGN_UP_SUCCESS,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: SIGN_UP_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction followAPI(data) {\r\n    // return axios.post('/api/follow');\r\n    return axios.patch(`/user/${data}/follow`);\r\n}\r\nfunction* follow(action) {\r\n    try {\r\n        // yield delay(1000);\r\n        const result = yield call(followAPI, action.data);\r\n        console.log(\"result for followAPI from backend : \", result);\r\n\r\n        yield put({\r\n            type: FOLLOW_SUCCESS,\r\n            // data: action.data,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: FOLLOW_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction unfollowAPI(data) {\r\n    // return axios.post('/api/unfollow');\r\n    return axios.delete(`/user/${data}/follow`);\r\n    \r\n}\r\nfunction* unfollow(action) {\r\n    try {\r\n        // yield delay(1000);\r\n        const result = yield call(unfollowAPI, action.data);\r\n        console.log(\"result for unfollowAPI from backend : \", result);\r\n        yield put({\r\n            type: UNFOLLOW_SUCCESS,\r\n            // data: action.data,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: UNFOLLOW_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction logInAPI(data) {\r\n    console.log(\"로그인 데이터 to 서버 from saga: \", data);\r\n    // return axios.post('/api/login', data);\r\n    return axios.post('/user/login', data);\r\n}\r\n\r\nfunction* logIn(action) {\r\n    try {\r\n        // yield delay(2000);\r\n        const result = yield call(logInAPI, action.data);\r\n        console.log(\"result.data(from server) : \", result.data);\r\n\r\n        yield put({\r\n            type: LOG_IN_SUCCESS,\r\n            // data: action.data,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.log(\"로그인 에러 확인 from saga : \",err);\r\n        console.error(err);\r\n        yield put({\r\n            type: LOG_IN_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction logOutAPI(data) {\r\n    // return axios.post('/api/login', data);\r\n    return axios.post('/user/logout', data);\r\n}\r\n\r\nfunction* logOut(action) {\r\n    try {\r\n        console.log('saga logout');\r\n        // yield delay(2000);\r\n        const result = yield call(logOutAPI);\r\n        yield put({\r\n            type: LOG_OUT_SUCCESS,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: LOG_OUT_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction loadUserAPI() {\r\n    return axios.get('/user');\r\n}\r\nfunction* loadUser(action) {\r\n    try {\r\n        const result = yield call(loadUserAPI, action.data);\r\n        yield put({\r\n            type: LOAD_USER_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: LOAD_USER_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchLogOut() {\r\n    console.log(\"saga watch 실행 check\");\r\n    yield takeLatest(LOG_OUT_REQUEST, logOut);\r\n}\r\nfunction* watchLogIn() {\r\n    console.log(\"saga watch 실행 check\");\r\n    yield takeLatest(LOG_IN_REQUEST, logIn);\r\n}\r\n\r\nfunction* watchUnfollow() {\r\n    yield takeLatest(UNFOLLOW_REQUEST, unfollow);\r\n}\r\nfunction* watchFollow() {\r\n    yield takeLatest(FOLLOW_REQUEST, follow);\r\n}\r\n\r\nfunction* watchSignUp() {\r\n    yield takeLatest(SIGN_UP_REQUEST, signUp);\r\n}\r\n\r\nfunction* watchLoadUser() {\r\n    yield takeLatest(LOAD_USER_REQUEST, loadUser);\r\n}\r\n\r\nfunction* watchLoadFollowers() {\r\n    yield takeLatest(LOAD_FOLLOWERS_REQUEST, loadFollowers);\r\n}\r\n\r\nfunction* watchLoadFollowings() {\r\n    yield takeLatest(LOAD_FOLLOWINGS_REQUEST, loadFollowings);\r\n}\r\n\r\nexport default function* userSaga() {\r\n    yield all([\r\n        fork(watchLogIn),\r\n        fork(watchLogOut),\r\n        fork(watchFollow),\r\n        fork(watchUnfollow),\r\n        fork(watchSignUp),\r\n        fork(watchLoadUser),\r\n        fork(watchLoadFollowers),\r\n        fork(watchLoadFollowings),\r\n    ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}