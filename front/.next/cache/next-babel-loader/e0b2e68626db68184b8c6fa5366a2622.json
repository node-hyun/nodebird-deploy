{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { SafetyCertificateTwoTone } from '@ant-design/icons';\nimport produce from 'immer';\nexport const initialState = {\n  me: null,\n  logInLoading: false,\n  // 로그인 시도중\n  logInDone: false,\n  logInError: null,\n  logOutLoading: false,\n  // 로그아웃 시도중\n  logOutDone: false,\n  logOutError: null,\n  followLoading: false,\n  // 팔로우 시도중\n  followDone: false,\n  followError: null,\n  unfollowLoading: false,\n  // 언팔로우 시도중\n  unfollowDone: false,\n  unfollowError: null,\n  signUpLoading: false,\n  // 회원가입 시도중\n  signUpDone: false,\n  signUpError: null,\n  loadUserLoading: false,\n  // 유저 정보 가져오기 시도중\n  loadUserDone: false,\n  loadUserError: null\n};\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME';\nexport const REMOVE_POST_OF_ME = 'REMOVE_POST_OF_ME';\nexport const FOLLOW_REQUEST = 'FOLLOW_REQUEST';\nexport const FOLLOW_SUCCESS = 'FOLLOW_SUCCESS';\nexport const FOLLOW_FAILURE = 'FOLLOW_FAILURE';\nexport const UNFOLLOW_REQUEST = 'UNFOLLOW_REQUEST';\nexport const UNFOLLOW_SUCCESS = 'UNFOLLOW_SUCCESS';\nexport const UNFOLLOW_FAILURE = 'UNFOLLOW_FAILURE';\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\nexport const LOAD_USER_REQUEST = 'LOAD_USER_REQUEST';\nexport const LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS';\nexport const LOAD_USER_FAILURE = 'LOAD_USER_FAILURE';\n\nconst dummyUser = data => _objectSpread(_objectSpread({}, data), {}, {\n  // saga에서 넘어온 데이터\n  nickname: '제로초',\n  id: 1,\n  Posts: [{\n    id: 1\n  }],\n  Followings: [{\n    id: 1,\n    nickname: '제로초'\n  }, {\n    id: 2,\n    nickname: '케인'\n  }, {\n    id: 3,\n    nickname: '네이마르'\n  }],\n  Followers: [{\n    id: 4,\n    nickname: 'zerocho'\n  }, {\n    id: 5,\n    nickname: 'linux'\n  }, {\n    id: 6,\n    nickname: '이재용'\n  }]\n});\n\nexport default ((state = initialState, action) => {\n  return produce(state, draft => {\n    switch (action.type) {\n      case LOG_IN_REQUEST:\n        // return {\n        //     ...state,\n        //     logInLoading: true,\n        //     logInError: null,\n        //     logInDone: false\n        // };\n        draft.logInLoading = true;\n        draft.loginDone = false;\n        draft.lognError = null;\n        break;\n\n      case LOG_IN_SUCCESS:\n        draft.logInLoading = false;\n        draft.logIndone = true; // draft.me = dummyUser(action.data);\n\n        draft.me = action.data;\n        break;\n\n      case LOG_IN_FAILURE:\n        // return {\n        //     ...state,\n        //     logInLoading: false,\n        //     logInError: action.data\n        // };\n        draft.logInLoading = false;\n        draft.logInDone = false;\n        draft.logInError = action.error;\n        break;\n\n      case LOG_OUT_REQUEST:\n        // return {\n        //     ...state,\n        //     logOutLoading: true,\n        //     logouterror: null,\n        //     logOutDone: false\n        // };\n        draft.logOutLoading = true;\n        draft.logOutDone = false;\n        draft.logOutError = null;\n        break;\n\n      case LOG_OUT_SUCCESS:\n        // return {\n        //     ...state,\n        //     logOutLoading: false,\n        //     logOutDone: true,\n        //     me: null,\n        // };\n        draft.logOutLoading = false;\n        draft.logOutDone = true;\n        draft.me = null;\n        break;\n\n      case LOG_OUT_FAILURE:\n        // return {\n        //     ...state,\n        //     logOutLoading: false,\n        //     logouterror: action.error,\n        // };\n        draft.logOutDone = false;\n        draft.logOutLoading = false;\n        draft.logOutError = action.error;\n        break;\n\n      case ADD_POST_TO_ME:\n        draft.me.Posts.unshift(_objectSpread({\n          id: action.data\n        }, state.me.Posts));\n        break;\n\n      case REMOVE_POST_OF_ME:\n        draft.me.Posts.filter(v => v.id !== action.data);\n        break;\n\n      case FOLLOW_REQUEST:\n        draft.followLoading = true;\n        draft.followError = null;\n        draft.followDone = false;\n        break;\n\n      case FOLLOW_SUCCESS:\n        draft.followLoading = false;\n        draft.me.Followings.push({\n          id: action.data\n        });\n        draft.followDone = true;\n        break;\n\n      case FOLLOW_FAILURE:\n        draft.followLoading = false;\n        draft.followError = action.error;\n        break;\n\n      case UNFOLLOW_REQUEST:\n        draft.unfollowLoading = true;\n        draft.unfollowError = null;\n        draft.unfollowDone = false;\n        break;\n\n      case UNFOLLOW_SUCCESS:\n        draft.unfollowLoading = false;\n        draft.me.Followings = draft.me.Followings.filter(v => v.id !== action.data);\n        draft.unfollowDone = true;\n        break;\n\n      case UNFOLLOW_FAILURE:\n        draft.unfollowLoading = false;\n        draft.unfollowError = action.error;\n        break;\n\n      case SIGN_UP_REQUEST:\n        draft.signUpLoading = true;\n        draft.signUpError = null;\n        draft.signUpDone = false;\n        break;\n\n      case SIGN_UP_SUCCESS:\n        draft.signUpLoading = false;\n        draft.signUpDone = true;\n        break;\n\n      case SIGN_UP_FAILURE:\n        draft.signUpLoading = false;\n        draft.signUpError = action.error;\n        break;\n\n      case LOAD_USER_REQUEST:\n        draft.loadUserLoading = true;\n        draft.loadUserError = null;\n        draft.loadUserDone = false;\n        break;\n\n      case LOAD_USER_SUCCESS:\n        draft.loadUserLoading = false;\n        draft.me = action.data;\n        draft.loadUserDone = true;\n        break;\n\n      case LOAD_USER_FAILURE:\n        draft.loadUserLoading = false;\n        draft.loadUserError = action.error;\n        break;\n\n      default:\n        // return state;\n        break;\n    }\n  });\n}); // export default reducer;","map":{"version":3,"sources":["C:/prepare/front/reducers/user.js"],"names":["SafetyCertificateTwoTone","produce","initialState","me","logInLoading","logInDone","logInError","logOutLoading","logOutDone","logOutError","followLoading","followDone","followError","unfollowLoading","unfollowDone","unfollowError","signUpLoading","signUpDone","signUpError","loadUserLoading","loadUserDone","loadUserError","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","ADD_POST_TO_ME","REMOVE_POST_OF_ME","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","dummyUser","data","nickname","id","Posts","Followings","Followers","state","action","draft","type","loginDone","lognError","logIndone","error","unshift","filter","v","push"],"mappings":"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","sourcesContent":["import { SafetyCertificateTwoTone } from '@ant-design/icons';\r\nimport produce from 'immer';\r\n\r\nexport const initialState = {\r\n    me: null,\r\n    logInLoading: false, // 로그인 시도중\r\n    logInDone: false,\r\n    logInError: null,\r\n\r\n    logOutLoading: false, // 로그아웃 시도중\r\n    logOutDone: false,\r\n    logOutError: null,\r\n\r\n    followLoading: false, // 팔로우 시도중\r\n    followDone: false,\r\n    followError: null,\r\n\r\n    unfollowLoading: false, // 언팔로우 시도중\r\n    unfollowDone: false,\r\n    unfollowError: null,\r\n\r\n    signUpLoading: false, // 회원가입 시도중\r\n    signUpDone: false,\r\n    signUpError: null,\r\n\r\n    loadUserLoading: false, // 유저 정보 가져오기 시도중\r\n    loadUserDone: false,\r\n    loadUserError: null, \r\n\r\n};\r\n\r\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\r\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\r\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\r\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\r\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\r\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\r\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME';\r\nexport const REMOVE_POST_OF_ME = 'REMOVE_POST_OF_ME';\r\n\r\nexport const FOLLOW_REQUEST = 'FOLLOW_REQUEST';\r\nexport const FOLLOW_SUCCESS = 'FOLLOW_SUCCESS';\r\nexport const FOLLOW_FAILURE = 'FOLLOW_FAILURE';\r\n\r\nexport const UNFOLLOW_REQUEST = 'UNFOLLOW_REQUEST';\r\nexport const UNFOLLOW_SUCCESS = 'UNFOLLOW_SUCCESS';\r\nexport const UNFOLLOW_FAILURE = 'UNFOLLOW_FAILURE';\r\n\r\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\r\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\r\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\r\n\r\nexport const LOAD_USER_REQUEST = 'LOAD_USER_REQUEST';\r\nexport const LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS';\r\nexport const LOAD_USER_FAILURE = 'LOAD_USER_FAILURE';\r\n\r\nconst dummyUser = (data) => ({\r\n    ...data, // saga에서 넘어온 데이터\r\n    nickname: '제로초',\r\n    id: 1,\r\n    Posts: [{ id: 1 }],\r\n    Followings: [{ id: 1, nickname: '제로초' }, { id: 2, nickname: '케인' }, { id: 3, nickname: '네이마르' }],\r\n    Followers: [{ id: 4, nickname: 'zerocho' }, { id: 5, nickname: 'linux' }, { id: 6, nickname: '이재용' }],\r\n});\r\n\r\n\r\nexport default (state = initialState, action) => {\r\n    return produce(state, (draft) => {\r\n        switch (action.type) {\r\n            case LOG_IN_REQUEST:\r\n                // return {\r\n                //     ...state,\r\n                //     logInLoading: true,\r\n                //     logInError: null,\r\n                //     logInDone: false\r\n                // };\r\n                draft.logInLoading = true;\r\n                draft.loginDone = false;\r\n                draft.lognError = null;\r\n                break;\r\n            case LOG_IN_SUCCESS:\r\n                draft.logInLoading = false;\r\n                draft.logIndone = true;\r\n                // draft.me = dummyUser(action.data);\r\n                draft.me = action.data;\r\n                break;\r\n            case LOG_IN_FAILURE:\r\n                // return {\r\n                //     ...state,\r\n                //     logInLoading: false,\r\n                //     logInError: action.data\r\n                // };\r\n                draft.logInLoading = false;\r\n                draft.logInDone = false;\r\n                draft.logInError = action.error;\r\n                break;\r\n            case LOG_OUT_REQUEST:\r\n                // return {\r\n                //     ...state,\r\n                //     logOutLoading: true,\r\n                //     logouterror: null,\r\n                //     logOutDone: false\r\n                // };\r\n                draft.logOutLoading = true;\r\n                draft.logOutDone = false;\r\n                draft.logOutError = null;\r\n                break;\r\n            case LOG_OUT_SUCCESS:\r\n                // return {\r\n                //     ...state,\r\n                //     logOutLoading: false,\r\n                //     logOutDone: true,\r\n                //     me: null,\r\n                // };\r\n                draft.logOutLoading = false;\r\n                draft.logOutDone = true;\r\n                draft.me = null;\r\n                break;\r\n            case LOG_OUT_FAILURE:\r\n                // return {\r\n                //     ...state,\r\n                //     logOutLoading: false,\r\n                //     logouterror: action.error,\r\n                // };\r\n                draft.logOutDone = false;\r\n                draft.logOutLoading = false;\r\n                draft.logOutError = action.error;\r\n                break;\r\n            case ADD_POST_TO_ME:\r\n                draft.me.Posts.unshift({ id: action.data, ...state.me.Posts })\r\n                break;\r\n            case REMOVE_POST_OF_ME:\r\n                draft.me.Posts.filter((v) => v.id !== action.data);\r\n                break;\r\n\r\n            case FOLLOW_REQUEST:\r\n                draft.followLoading = true;\r\n                draft.followError = null;\r\n                draft.followDone = false;\r\n                break;\r\n            case FOLLOW_SUCCESS:\r\n                draft.followLoading = false;\r\n                draft.me.Followings.push({ id: action.data });\r\n                draft.followDone = true;\r\n                break;\r\n            case FOLLOW_FAILURE:\r\n                draft.followLoading = false;\r\n                draft.followError = action.error;\r\n                break;\r\n\r\n            case UNFOLLOW_REQUEST:\r\n                draft.unfollowLoading = true;\r\n                draft.unfollowError = null;\r\n                draft.unfollowDone = false;\r\n                break;\r\n            case UNFOLLOW_SUCCESS:\r\n                draft.unfollowLoading = false;\r\n                draft.me.Followings = draft.me.Followings.filter((v) => v.id !== action.data);\r\n                draft.unfollowDone = true;\r\n                break;\r\n            case UNFOLLOW_FAILURE:\r\n                draft.unfollowLoading = false;\r\n                draft.unfollowError = action.error;\r\n                break;\r\n\r\n            case SIGN_UP_REQUEST:\r\n                draft.signUpLoading = true;\r\n                draft.signUpError = null;\r\n                draft.signUpDone = false;\r\n                break;\r\n                case SIGN_UP_SUCCESS:\r\n                    draft.signUpLoading = false;\r\n                    draft.signUpDone = true;\r\n                break;\r\n            case SIGN_UP_FAILURE:\r\n                draft.signUpLoading = false;\r\n                draft.signUpError = action.error;\r\n                break;\r\n            case LOAD_USER_REQUEST:\r\n                draft.loadUserLoading = true;\r\n                draft.loadUserError = null;\r\n                draft.loadUserDone = false;\r\n                break;\r\n            case LOAD_USER_SUCCESS:\r\n                draft.loadUserLoading = false;\r\n                draft.me = action.data;\r\n                draft.loadUserDone = true;\r\n                break;\r\n            case LOAD_USER_FAILURE:\r\n                draft.loadUserLoading = false;\r\n                draft.loadUserError = action.error;\r\n                break;\r\n            default:\r\n                // return state;\r\n                break;\r\n        }\r\n    });\r\n}\r\n\r\n// export default reducer;\r\n"]},"metadata":{},"sourceType":"module"}