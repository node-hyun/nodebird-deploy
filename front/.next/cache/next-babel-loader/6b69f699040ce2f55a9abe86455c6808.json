{"ast":null,"code":"import React, { useCallback, useEffect, useState } from \"react\";\nimport { Avatar, Card, Button, notification } from \"antd\"; // import { useDispatch } from \"react-redux\";\n// import { logoutAction } from \"../reducers/user\";\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { LOG_OUT_REQUEST } from '../reducers/user';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst dummy = {\n  nickname: \"제로초\",\n  Post: [],\n  Followings: [],\n  Followers: [],\n  isLoggedIn: false\n};\n\nconst UserProfile = ({\n  setIsLoggedIn\n}) => {\n  const dispatch = useDispatch();\n  const {\n    me,\n    logOutLoading,\n    logInLoading,\n    logInDone,\n    logOutDone,\n    logOutUser\n  } = useSelector(state => state.user);\n  useEffect(() => {\n    notification.open({\n      message: '알림',\n      description: \"환영합니다 \" + me.nickname + \"님\"\n    });\n  }, [me && me.id && logInDone]);\n  const onLogOut = useCallback(() => {\n    dispatch({\n      type: LOG_OUT_REQUEST\n    });\n    notification.open({\n      message: '알림',\n      description: \"안녕히 가세요 \" + logOutUser + \"님\"\n    });\n  }, [logOutDone]);\n  return /*#__PURE__*/_jsxs(Card, {\n    actions: [/*#__PURE__*/_jsxs(\"div\", {\n      children: [\"\\uC9F9\\uC9F9\", /*#__PURE__*/_jsx(\"br\", {}), me.Posts.length]\n    }, \"twit\"), /*#__PURE__*/_jsxs(\"div\", {\n      children: [\"\\uD314\\uB85C\\uC789\", /*#__PURE__*/_jsx(\"br\", {}), me.Followings.length]\n    }, \"following\"), /*#__PURE__*/_jsxs(\"div\", {\n      children: [\"\\uD314\\uB85C\\uC6CC\", /*#__PURE__*/_jsx(\"br\", {}), me.Followers.length]\n    }, \"follower\")],\n    children: [/*#__PURE__*/_jsx(Card.Meta, {\n      avatar: /*#__PURE__*/_jsx(Avatar, {\n        children: me.nickname[0]\n      }),\n      title: me.nickname\n    }), /*#__PURE__*/_jsx(Button, {\n      onClick: onLogOut,\n      loading: logOutLoading,\n      children: \"\\uB85C\\uADF8\\uC544\\uC6C3\"\n    })]\n  });\n};\n\nexport default UserProfile;","map":{"version":3,"sources":["C:/nodebird/front/components/UserProfile.js"],"names":["React","useCallback","useEffect","useState","Avatar","Card","Button","notification","useSelector","useDispatch","LOG_OUT_REQUEST","dummy","nickname","Post","Followings","Followers","isLoggedIn","UserProfile","setIsLoggedIn","dispatch","me","logOutLoading","logInLoading","logInDone","logOutDone","logOutUser","state","user","open","message","description","id","onLogOut","type","Posts","length"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,EAAwCC,QAAxC,QAAwD,OAAxD;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,MAAvB,EAA+BC,YAA/B,QAAmD,MAAnD,C,CAGA;AACA;;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,eAAT,QAAgC,kBAAhC;;;AAGA,MAAMC,KAAK,GAAG;AACVC,EAAAA,QAAQ,EAAE,KADA;AAEVC,EAAAA,IAAI,EAAE,EAFI;AAGVC,EAAAA,UAAU,EAAE,EAHF;AAIVC,EAAAA,SAAS,EAAE,EAJD;AAKVC,EAAAA,UAAU,EAAE;AALF,CAAd;;AASA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAuB;AACvC,QAAMC,QAAQ,GAAGV,WAAW,EAA5B;AACA,QAAM;AAAEW,IAAAA,EAAF;AAAMC,IAAAA,aAAN;AAAqBC,IAAAA,YAArB;AAAmCC,IAAAA,SAAnC;AAA8CC,IAAAA,UAA9C;AAA0DC,IAAAA;AAA1D,MAAyEjB,WAAW,CAAEkB,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAA1F;AAEAzB,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,YAAY,CAACqB,IAAb,CAAkB;AACdC,MAAAA,OAAO,EAAE,IADK;AAEdC,MAAAA,WAAW,EAAE,WAAWV,EAAE,CAACR,QAAd,GAAyB;AAFxB,KAAlB;AAIH,GALQ,EAKN,CAACQ,EAAE,IAAIA,EAAE,CAACW,EAAT,IAAeR,SAAhB,CALM,CAAT;AAOA,QAAMS,QAAQ,GAAG/B,WAAW,CAAC,MAAM;AAC/BkB,IAAAA,QAAQ,CAAC;AACLc,MAAAA,IAAI,EAAEvB;AADD,KAAD,CAAR;AAIAH,IAAAA,YAAY,CAACqB,IAAb,CAAkB;AACdC,MAAAA,OAAO,EAAE,IADK;AAEdC,MAAAA,WAAW,EAAE,aAAaL,UAAb,GAA0B;AAFzB,KAAlB;AAKH,GAV2B,EAUzB,CAACD,UAAD,CAVyB,CAA5B;AAYA,sBACI,MAAC,IAAD;AACI,IAAA,OAAO,EAAE,cACL;AAAA,8CAEI,cAFJ,EAGKJ,EAAE,CAACc,KAAH,CAASC,MAHd;AAAA,OAAS,MAAT,CADK,eAML;AAAA,oDAEI,cAFJ,EAGKf,EAAE,CAACN,UAAH,CAAcqB,MAHnB;AAAA,OAAS,WAAT,CANK,eAWL;AAAA,oDAEI,cAFJ,EAGKf,EAAE,CAACL,SAAH,CAAaoB,MAHlB;AAAA,OAAS,UAAT,CAXK,CADb;AAAA,4BAmBI,KAAC,IAAD,CAAM,IAAN;AACI,MAAA,MAAM,eAAE,KAAC,MAAD;AAAA,kBAASf,EAAE,CAACR,QAAH,CAAY,CAAZ;AAAT,QADZ;AAEI,MAAA,KAAK,EAAEQ,EAAE,CAACR;AAFd,MAnBJ,eAuBI,KAAC,MAAD;AAAQ,MAAA,OAAO,EAAEoB,QAAjB;AAA2B,MAAA,OAAO,EAAEX,aAApC;AAAA;AAAA,MAvBJ;AAAA,IADJ;AA2BH,CAlDD;;AAqDA,eAAeJ,WAAf","sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { Avatar, Card, Button, notification } from \"antd\";\r\n\r\n\r\n// import { useDispatch } from \"react-redux\";\r\n// import { logoutAction } from \"../reducers/user\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { LOG_OUT_REQUEST } from '../reducers/user';\r\n\r\n\r\nconst dummy = {\r\n    nickname: \"제로초\",\r\n    Post: [],\r\n    Followings: [],\r\n    Followers: [],\r\n    isLoggedIn: false,\r\n};\r\n\r\n\r\nconst UserProfile = ({ setIsLoggedIn }) => {\r\n    const dispatch = useDispatch();\r\n    const { me, logOutLoading, logInLoading, logInDone, logOutDone, logOutUser } = useSelector((state) => state.user);\r\n\r\n    useEffect(() => {\r\n        notification.open({\r\n            message: '알림',\r\n            description: \"환영합니다 \" + me.nickname + \"님\"\r\n        })\r\n    }, [me && me.id && logInDone]);\r\n\r\n    const onLogOut = useCallback(() => {\r\n        dispatch({\r\n            type: LOG_OUT_REQUEST,\r\n        });\r\n\r\n        notification.open({\r\n            message: '알림',\r\n            description: \"안녕히 가세요 \" + logOutUser + \"님\"\r\n        })\r\n\r\n    }, [logOutDone]);\r\n\r\n    return (\r\n        <Card\r\n            actions={[\r\n                <div key=\"twit\">\r\n                    짹짹\r\n                    <br />\r\n                    {me.Posts.length}\r\n                </div>,\r\n                <div key=\"following\">\r\n                    팔로잉\r\n                    <br />\r\n                    {me.Followings.length}\r\n                </div>,\r\n                <div key=\"follower\">\r\n                    팔로워\r\n                    <br />\r\n                    {me.Followers.length}\r\n                </div>,\r\n            ]}\r\n        >\r\n            <Card.Meta\r\n                avatar={<Avatar>{me.nickname[0]}</Avatar>}\r\n                title={me.nickname}\r\n            />\r\n            <Button onClick={onLogOut} loading={logOutLoading}>로그아웃</Button>\r\n        </Card>\r\n    );\r\n};\r\n\r\n\r\nexport default UserProfile;"]},"metadata":{},"sourceType":"module"}