{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { SafetyCertificateTwoTone } from '@ant-design/icons';\nimport produce from 'immer';\nexport const initialState = {\n  me: null,\n  logInLoading: false,\n  // 로그인 시도중\n  logInDone: false,\n  logInError: null,\n  logOutLoading: false,\n  // 로그아웃 시도중\n  logOutDone: false,\n  logOutError: null,\n  followLoading: false,\n  // 팔로우 시도중\n  followDone: false,\n  followError: null,\n  unfollowLoading: false,\n  // 언팔로우 시도중\n  unfollowDone: false,\n  unfollowError: null\n}; // initialState.mainPosts = initialState.mainPosts.concat(\n//     Array(20).fill().map(() => ({\n//         id: shortId.generate(),\n//         User: {\n//             id: shortId.generate(),\n//             nickname: faker.name.findName(),\n//         },\n//         content: faker.lorem.paragraph(),\n//         Images: [{\n//             src: faker.image.image(),\n//         }],\n//         Comments: [{\n//             User: {\n//                 id: shortId.generate(),\n//                 nickname: faker.name.findName(),\n//             },\n//             content: faker.lorem.sentence(),\n//         }],\n//     })),\n// )\n// 게시글 생성(using faker) 함수 \n\nexport const generateDummyPost = number => Array(number).fill().map(() => ({\n  id: shortId.generate(),\n  User: {\n    id: shortId.generate(),\n    nickname: faker.name.findName()\n  },\n  content: faker.lorem.paragraph(),\n  Images: [{\n    src: faker.image.image()\n  }],\n  Commeents: [{\n    User: {\n      id: shortId.generate(),\n      nickname: faker.name.findName()\n    },\n    content: faker.lorem.sentence()\n  }]\n})); // 최초 게시글 10개 설정\n\ninitialState.mainPosts = initialState.mainPosts.concat(generateDummyPost(10));\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME';\nexport const REMOVE_POST_OF_ME = 'REMOVE_POST_OF_ME';\nexport const FOLLOW_REQUEST = 'FOLLOW_REQUEST';\nexport const FOLLOW_SUCCESS = 'FOLLOW_SUCCESS';\nexport const FOLLOW_FAILURE = 'FOLLOW_FAILURE';\nexport const UNFOLLOW_REQUEST = 'UNFOLLOW_REQUEST';\nexport const UNFOLLOW_SUCCESS = 'UNFOLLOW_SUCCESS';\nexport const UNFOLLOW_FAILURE = 'UNFOLLOW_FAILURE';\n\nconst dummyUser = data => _objectSpread(_objectSpread({}, data), {}, {\n  // saga에서 넘어온 데이터\n  nickname: '제로초',\n  id: 1,\n  Posts: [{\n    id: 1\n  }],\n  Followings: [{\n    id: 1,\n    nickname: '제로초'\n  }, {\n    id: 2,\n    nickname: '케인'\n  }, {\n    id: 3,\n    nickname: '네이마르'\n  }],\n  Followers: [{\n    id: 4,\n    nickname: 'zerocho'\n  }, {\n    id: 5,\n    nickname: 'linux'\n  }, {\n    id: 6,\n    nickname: '이재용'\n  }]\n});\n\nexport default ((state = initialState, action) => {\n  return produce(state, draft => {\n    switch (action.type) {\n      case LOG_IN_REQUEST:\n        // return {\n        //     ...state,\n        //     logInLoading: true,\n        //     logInError: null,\n        //     logInDone: false\n        // };\n        draft.logInLoading = true;\n        draft.loginDone = false;\n        draft.lognError = null;\n        break;\n\n      case LOG_IN_SUCCESS:\n        // return {\n        //     ...state,\n        //     logInLoading: false,\n        //     logInDone: true,\n        //     me: dummyUser(action.data),\n        // };\n        draft.logInLoading = false;\n        draft.logindone = true;\n        draft.me = dummyUser(action.data);\n        break;\n\n      case LOG_IN_FAILURE:\n        // return {\n        //     ...state,\n        //     logInLoading: false,\n        //     logInError: action.data\n        // };\n        draft.logInLoading = false;\n        draft.loginDone = false;\n        draft.loginError = null;\n        break;\n\n      case LOG_OUT_REQUEST:\n        // return {\n        //     ...state,\n        //     logOutLoading: true,\n        //     logouterror: null,\n        //     logOutDone: false\n        // };\n        draft.logOutLoading = true;\n        draft.logOutDone = false;\n        draft.logOutError = null;\n        break;\n\n      case LOG_OUT_SUCCESS:\n        // return {\n        //     ...state,\n        //     logOutLoading: false,\n        //     logOutDone: true,\n        //     me: null,\n        // };\n        draft.logOutLoading = false;\n        draft.logOutDone = true;\n        draft.me = null;\n        break;\n\n      case LOG_OUT_FAILURE:\n        // return {\n        //     ...state,\n        //     logOutLoading: false,\n        //     logouterror: action.error,\n        // };\n        draft.logOutDone = false;\n        draft.logOutLoading = false;\n        draft.logOutError = action.error;\n        break;\n\n      case ADD_POST_TO_ME:\n        // return {\n        //     ...state,\n        //     me: {\n        //         ...state.me,\n        //         Posts: [{ id: action.data }, ...state.me.Posts],\n        //     },\n        // };\n        draft.me.Posts.unshift(_objectSpread({\n          id: action.data\n        }, state.me.Posts));\n        break;\n\n      case REMOVE_POST_OF_ME:\n        // return {\n        //     ...state,\n        //     me: {\n        //         ...state.me,\n        //         Posts: state.me.Posts.filter((v) => v.id !== action.data),\n        //     },\n        // };\n        draft.me.Posts.filter(v => v.id !== action.data);\n        break;\n\n      case FOLLOW_REQUEST:\n        draft.followLoading = true;\n        draft.followError = null;\n        draft.followDone = false;\n        break;\n\n      case FOLLOW_SUCCESS:\n        draft.followLoading = false;\n        draft.me.Followings.push({\n          id: action.data\n        });\n        draft.followDone = true;\n        break;\n\n      case FOLLOW_FAILURE:\n        draft.followLoading = false;\n        draft.followError = action.error;\n        break;\n\n      case UNFOLLOW_REQUEST:\n        draft.unfollowLoading = true;\n        draft.unfollowError = null;\n        draft.unfollowDone = false;\n        break;\n\n      case UNFOLLOW_SUCCESS:\n        draft.unfollowLoading = false;\n        draft.me.Followings = draft.me.Followings.filter(v => v.id !== action.data);\n        draft.unfollowDone = true;\n        break;\n\n      case UNFOLLOW_FAILURE:\n        draft.unfollowLoading = false;\n        draft.unfollowError = action.error;\n        break;\n\n      default:\n        // return state;\n        break;\n    }\n  });\n}); // export default reducer;","map":{"version":3,"sources":["C:/prepare/front/reducers/user.js"],"names":["SafetyCertificateTwoTone","produce","initialState","me","logInLoading","logInDone","logInError","logOutLoading","logOutDone","logOutError","followLoading","followDone","followError","unfollowLoading","unfollowDone","unfollowError","generateDummyPost","number","Array","fill","map","id","shortId","generate","User","nickname","faker","name","findName","content","lorem","paragraph","Images","src","image","Commeents","sentence","mainPosts","concat","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","ADD_POST_TO_ME","REMOVE_POST_OF_ME","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","dummyUser","data","Posts","Followings","Followers","state","action","draft","type","loginDone","lognError","logindone","loginError","error","unshift","filter","v","push"],"mappings":";;;;;;AAAA,SAASA,wBAAT,QAAyC,mBAAzC;AACA,OAAOC,OAAP,MAAoB,OAApB;AAEA,OAAO,MAAMC,YAAY,GAAG;AACxBC,EAAAA,EAAE,EAAE,IADoB;AAExBC,EAAAA,YAAY,EAAE,KAFU;AAEH;AACrBC,EAAAA,SAAS,EAAE,KAHa;AAIxBC,EAAAA,UAAU,EAAE,IAJY;AAMxBC,EAAAA,aAAa,EAAE,KANS;AAMF;AACtBC,EAAAA,UAAU,EAAE,KAPY;AAQxBC,EAAAA,WAAW,EAAE,IARW;AAUxBC,EAAAA,aAAa,EAAE,KAVS;AAUF;AACtBC,EAAAA,UAAU,EAAE,KAXY;AAYxBC,EAAAA,WAAW,EAAE,IAZW;AAcxBC,EAAAA,eAAe,EAAE,KAdO;AAcA;AACxBC,EAAAA,YAAY,EAAE,KAfU;AAgBxBC,EAAAA,aAAa,EAAE;AAhBS,CAArB,C,CAoBP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,OAAO,MAAMC,iBAAiB,GAAIC,MAAD,IAAYC,KAAK,CAACD,MAAD,CAAL,CAAcE,IAAd,GAAqBC,GAArB,CAAyB,OAAO;AACzEC,EAAAA,EAAE,EAAEC,OAAO,CAACC,QAAR,EADqE;AAEzEC,EAAAA,IAAI,EAAE;AACFH,IAAAA,EAAE,EAAEC,OAAO,CAACC,QAAR,EADF;AAEFE,IAAAA,QAAQ,EAAEC,KAAK,CAACC,IAAN,CAAWC,QAAX;AAFR,GAFmE;AAMzEC,EAAAA,OAAO,EAAEH,KAAK,CAACI,KAAN,CAAYC,SAAZ,EANgE;AAOzEC,EAAAA,MAAM,EAAE,CAAC;AACLC,IAAAA,GAAG,EAAEP,KAAK,CAACQ,KAAN,CAAYA,KAAZ;AADA,GAAD,CAPiE;AAUzEC,EAAAA,SAAS,EAAE,CAAC;AACRX,IAAAA,IAAI,EAAE;AACFH,MAAAA,EAAE,EAAEC,OAAO,CAACC,QAAR,EADF;AAEFE,MAAAA,QAAQ,EAAEC,KAAK,CAACC,IAAN,CAAWC,QAAX;AAFR,KADE;AAKRC,IAAAA,OAAO,EAAEH,KAAK,CAACI,KAAN,CAAYM,QAAZ;AALD,GAAD;AAV8D,CAAP,CAAzB,CAAtC,C,CAmBP;;AACAlC,YAAY,CAACmC,SAAb,GAAyBnC,YAAY,CAACmC,SAAb,CAAuBC,MAAvB,CACrBtB,iBAAiB,CAAC,EAAD,CADI,CAAzB;AAMA,OAAO,MAAMuB,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AAEP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AAEP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;;AAEP,MAAMC,SAAS,GAAIC,IAAD,oCACXA,IADW;AACL;AACT7B,EAAAA,QAAQ,EAAE,KAFI;AAGdJ,EAAAA,EAAE,EAAE,CAHU;AAIdkC,EAAAA,KAAK,EAAE,CAAC;AAAElC,IAAAA,EAAE,EAAE;AAAN,GAAD,CAJO;AAKdmC,EAAAA,UAAU,EAAE,CAAC;AAAEnC,IAAAA,EAAE,EAAE,CAAN;AAASI,IAAAA,QAAQ,EAAE;AAAnB,GAAD,EAA6B;AAAEJ,IAAAA,EAAE,EAAE,CAAN;AAASI,IAAAA,QAAQ,EAAE;AAAnB,GAA7B,EAAwD;AAAEJ,IAAAA,EAAE,EAAE,CAAN;AAASI,IAAAA,QAAQ,EAAE;AAAnB,GAAxD,CALE;AAMdgC,EAAAA,SAAS,EAAE,CAAC;AAAEpC,IAAAA,EAAE,EAAE,CAAN;AAASI,IAAAA,QAAQ,EAAE;AAAnB,GAAD,EAAiC;AAAEJ,IAAAA,EAAE,EAAE,CAAN;AAASI,IAAAA,QAAQ,EAAE;AAAnB,GAAjC,EAA+D;AAAEJ,IAAAA,EAAE,EAAE,CAAN;AAASI,IAAAA,QAAQ,EAAE;AAAnB,GAA/D;AANG,EAAlB;;AAUA,gBAAe,CAACiC,KAAK,GAAGxD,YAAT,EAAuByD,MAAvB,KAAkC;AAC7C,SAAO1D,OAAO,CAACyD,KAAD,EAASE,KAAD,IAAW;AAC7B,YAAQD,MAAM,CAACE,IAAf;AACI,WAAKtB,cAAL;AACI;AACA;AACA;AACA;AACA;AACA;AACAqB,QAAAA,KAAK,CAACxD,YAAN,GAAqB,IAArB;AACAwD,QAAAA,KAAK,CAACE,SAAN,GAAkB,KAAlB;AACAF,QAAAA,KAAK,CAACG,SAAN,GAAkB,IAAlB;AACA;;AACJ,WAAKvB,cAAL;AACI;AACA;AACA;AACA;AACA;AACA;AACAoB,QAAAA,KAAK,CAACxD,YAAN,GAAqB,KAArB;AACAwD,QAAAA,KAAK,CAACI,SAAN,GAAkB,IAAlB;AACAJ,QAAAA,KAAK,CAACzD,EAAN,GAAWkD,SAAS,CAACM,MAAM,CAACL,IAAR,CAApB;AACA;;AACJ,WAAKb,cAAL;AACI;AACA;AACA;AACA;AACA;AACAmB,QAAAA,KAAK,CAACxD,YAAN,GAAqB,KAArB;AACAwD,QAAAA,KAAK,CAACE,SAAN,GAAkB,KAAlB;AACAF,QAAAA,KAAK,CAACK,UAAN,GAAmB,IAAnB;AACA;;AACJ,WAAKvB,eAAL;AACI;AACA;AACA;AACA;AACA;AACA;AACAkB,QAAAA,KAAK,CAACrD,aAAN,GAAsB,IAAtB;AACAqD,QAAAA,KAAK,CAACpD,UAAN,GAAmB,KAAnB;AACAoD,QAAAA,KAAK,CAACnD,WAAN,GAAoB,IAApB;AACA;;AACJ,WAAKkC,eAAL;AACI;AACA;AACA;AACA;AACA;AACA;AACAiB,QAAAA,KAAK,CAACrD,aAAN,GAAsB,KAAtB;AACAqD,QAAAA,KAAK,CAACpD,UAAN,GAAmB,IAAnB;AACAoD,QAAAA,KAAK,CAACzD,EAAN,GAAW,IAAX;AACA;;AACJ,WAAKyC,eAAL;AACI;AACA;AACA;AACA;AACA;AACAgB,QAAAA,KAAK,CAACpD,UAAN,GAAmB,KAAnB;AACAoD,QAAAA,KAAK,CAACrD,aAAN,GAAsB,KAAtB;AACAqD,QAAAA,KAAK,CAACnD,WAAN,GAAoBkD,MAAM,CAACO,KAA3B;AACA;;AACJ,WAAKrB,cAAL;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AACAe,QAAAA,KAAK,CAACzD,EAAN,CAASoD,KAAT,CAAeY,OAAf;AAAyB9C,UAAAA,EAAE,EAAEsC,MAAM,CAACL;AAApC,WAA6CI,KAAK,CAACvD,EAAN,CAASoD,KAAtD;AACA;;AACJ,WAAKT,iBAAL;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AACAc,QAAAA,KAAK,CAACzD,EAAN,CAASoD,KAAT,CAAea,MAAf,CAAuBC,CAAD,IAAOA,CAAC,CAAChD,EAAF,KAASsC,MAAM,CAACL,IAA7C;AACA;;AAEJ,WAAKP,cAAL;AACIa,QAAAA,KAAK,CAAClD,aAAN,GAAsB,IAAtB;AACAkD,QAAAA,KAAK,CAAChD,WAAN,GAAoB,IAApB;AACAgD,QAAAA,KAAK,CAACjD,UAAN,GAAmB,KAAnB;AACA;;AACJ,WAAKqC,cAAL;AACIY,QAAAA,KAAK,CAAClD,aAAN,GAAsB,KAAtB;AACAkD,QAAAA,KAAK,CAACzD,EAAN,CAASqD,UAAT,CAAoBc,IAApB,CAAyB;AAAEjD,UAAAA,EAAE,EAAEsC,MAAM,CAACL;AAAb,SAAzB;AACAM,QAAAA,KAAK,CAACjD,UAAN,GAAmB,IAAnB;AACA;;AACJ,WAAKsC,cAAL;AACIW,QAAAA,KAAK,CAAClD,aAAN,GAAsB,KAAtB;AACAkD,QAAAA,KAAK,CAAChD,WAAN,GAAoB+C,MAAM,CAACO,KAA3B;AACA;;AAEJ,WAAKhB,gBAAL;AACIU,QAAAA,KAAK,CAAC/C,eAAN,GAAwB,IAAxB;AACA+C,QAAAA,KAAK,CAAC7C,aAAN,GAAsB,IAAtB;AACA6C,QAAAA,KAAK,CAAC9C,YAAN,GAAqB,KAArB;AACA;;AACJ,WAAKqC,gBAAL;AACIS,QAAAA,KAAK,CAAC/C,eAAN,GAAwB,KAAxB;AACA+C,QAAAA,KAAK,CAACzD,EAAN,CAASqD,UAAT,GAAsBI,KAAK,CAACzD,EAAN,CAASqD,UAAT,CAAoBY,MAApB,CAA4BC,CAAD,IAAOA,CAAC,CAAChD,EAAF,KAASsC,MAAM,CAACL,IAAlD,CAAtB;AACAM,QAAAA,KAAK,CAAC9C,YAAN,GAAqB,IAArB;AACA;;AACJ,WAAKsC,gBAAL;AACIQ,QAAAA,KAAK,CAAC/C,eAAN,GAAwB,KAAxB;AACA+C,QAAAA,KAAK,CAAC7C,aAAN,GAAsB4C,MAAM,CAACO,KAA7B;AACA;;AAEJ;AACI;AACA;AAtHR;AAwHH,GAzHa,CAAd;AA0HH,CA3HD,E,CA6HA","sourcesContent":["import { SafetyCertificateTwoTone } from '@ant-design/icons';\r\nimport produce from 'immer';\r\n\r\nexport const initialState = {\r\n    me: null,\r\n    logInLoading: false, // 로그인 시도중\r\n    logInDone: false,\r\n    logInError: null,\r\n\r\n    logOutLoading: false, // 로그아웃 시도중\r\n    logOutDone: false,\r\n    logOutError: null,\r\n\r\n    followLoading: false, // 팔로우 시도중\r\n    followDone: false,\r\n    followError: null,\r\n\r\n    unfollowLoading: false, // 언팔로우 시도중\r\n    unfollowDone: false,\r\n    unfollowError: null,\r\n\r\n};\r\n\r\n// initialState.mainPosts = initialState.mainPosts.concat(\r\n//     Array(20).fill().map(() => ({\r\n//         id: shortId.generate(),\r\n//         User: {\r\n//             id: shortId.generate(),\r\n//             nickname: faker.name.findName(),\r\n//         },\r\n//         content: faker.lorem.paragraph(),\r\n//         Images: [{\r\n//             src: faker.image.image(),\r\n//         }],\r\n//         Comments: [{\r\n//             User: {\r\n//                 id: shortId.generate(),\r\n//                 nickname: faker.name.findName(),\r\n//             },\r\n//             content: faker.lorem.sentence(),\r\n//         }],\r\n//     })),\r\n// )\r\n\r\n// 게시글 생성(using faker) 함수 \r\nexport const generateDummyPost = (number) => Array(number).fill().map(() => ({\r\n    id: shortId.generate(),\r\n    User: {\r\n        id: shortId.generate(),\r\n        nickname: faker.name.findName(),\r\n    },\r\n    content: faker.lorem.paragraph(),\r\n    Images: [{\r\n        src: faker.image.image(),\r\n    }],\r\n    Commeents: [{\r\n        User: {\r\n            id: shortId.generate(),\r\n            nickname: faker.name.findName(),\r\n        },\r\n        content: faker.lorem.sentence(),\r\n    }],\r\n}));\r\n\r\n// 최초 게시글 10개 설정\r\ninitialState.mainPosts = initialState.mainPosts.concat(\r\n    generateDummyPost(10)\r\n)\r\n\r\n\r\n\r\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\r\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\r\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\r\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\r\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\r\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\r\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME';\r\nexport const REMOVE_POST_OF_ME = 'REMOVE_POST_OF_ME';\r\n\r\nexport const FOLLOW_REQUEST = 'FOLLOW_REQUEST';\r\nexport const FOLLOW_SUCCESS = 'FOLLOW_SUCCESS';\r\nexport const FOLLOW_FAILURE = 'FOLLOW_FAILURE';\r\n\r\nexport const UNFOLLOW_REQUEST = 'UNFOLLOW_REQUEST';\r\nexport const UNFOLLOW_SUCCESS = 'UNFOLLOW_SUCCESS';\r\nexport const UNFOLLOW_FAILURE = 'UNFOLLOW_FAILURE';\r\n\r\nconst dummyUser = (data) => ({\r\n    ...data, // saga에서 넘어온 데이터\r\n    nickname: '제로초',\r\n    id: 1,\r\n    Posts: [{ id: 1 }],\r\n    Followings: [{ id: 1, nickname: '제로초' }, { id: 2, nickname: '케인' }, { id: 3, nickname: '네이마르' }],\r\n    Followers: [{ id: 4, nickname: 'zerocho' }, { id: 5, nickname: 'linux' }, { id: 6, nickname: '이재용' }],\r\n});\r\n\r\n\r\nexport default (state = initialState, action) => {\r\n    return produce(state, (draft) => {\r\n        switch (action.type) {\r\n            case LOG_IN_REQUEST:\r\n                // return {\r\n                //     ...state,\r\n                //     logInLoading: true,\r\n                //     logInError: null,\r\n                //     logInDone: false\r\n                // };\r\n                draft.logInLoading = true;\r\n                draft.loginDone = false;\r\n                draft.lognError = null;\r\n                break;\r\n            case LOG_IN_SUCCESS:\r\n                // return {\r\n                //     ...state,\r\n                //     logInLoading: false,\r\n                //     logInDone: true,\r\n                //     me: dummyUser(action.data),\r\n                // };\r\n                draft.logInLoading = false;\r\n                draft.logindone = true;\r\n                draft.me = dummyUser(action.data);\r\n                break;\r\n            case LOG_IN_FAILURE:\r\n                // return {\r\n                //     ...state,\r\n                //     logInLoading: false,\r\n                //     logInError: action.data\r\n                // };\r\n                draft.logInLoading = false;\r\n                draft.loginDone = false;\r\n                draft.loginError = null;\r\n                break;\r\n            case LOG_OUT_REQUEST:\r\n                // return {\r\n                //     ...state,\r\n                //     logOutLoading: true,\r\n                //     logouterror: null,\r\n                //     logOutDone: false\r\n                // };\r\n                draft.logOutLoading = true;\r\n                draft.logOutDone = false;\r\n                draft.logOutError = null;\r\n                break;\r\n            case LOG_OUT_SUCCESS:\r\n                // return {\r\n                //     ...state,\r\n                //     logOutLoading: false,\r\n                //     logOutDone: true,\r\n                //     me: null,\r\n                // };\r\n                draft.logOutLoading = false;\r\n                draft.logOutDone = true;\r\n                draft.me = null;\r\n                break;\r\n            case LOG_OUT_FAILURE:\r\n                // return {\r\n                //     ...state,\r\n                //     logOutLoading: false,\r\n                //     logouterror: action.error,\r\n                // };\r\n                draft.logOutDone = false;\r\n                draft.logOutLoading = false;\r\n                draft.logOutError = action.error;\r\n                break;\r\n            case ADD_POST_TO_ME:\r\n                // return {\r\n                //     ...state,\r\n                //     me: {\r\n                //         ...state.me,\r\n                //         Posts: [{ id: action.data }, ...state.me.Posts],\r\n                //     },\r\n                // };\r\n                draft.me.Posts.unshift({ id: action.data, ...state.me.Posts })\r\n                break;\r\n            case REMOVE_POST_OF_ME:\r\n                // return {\r\n                //     ...state,\r\n                //     me: {\r\n                //         ...state.me,\r\n                //         Posts: state.me.Posts.filter((v) => v.id !== action.data),\r\n                //     },\r\n                // };\r\n                draft.me.Posts.filter((v) => v.id !== action.data);\r\n                break;\r\n\r\n            case FOLLOW_REQUEST:\r\n                draft.followLoading = true;\r\n                draft.followError = null;\r\n                draft.followDone = false;\r\n                break;\r\n            case FOLLOW_SUCCESS:\r\n                draft.followLoading = false;\r\n                draft.me.Followings.push({ id: action.data });\r\n                draft.followDone = true;\r\n                break;\r\n            case FOLLOW_FAILURE:\r\n                draft.followLoading = false;\r\n                draft.followError = action.error;\r\n                break;\r\n\r\n            case UNFOLLOW_REQUEST:\r\n                draft.unfollowLoading = true;\r\n                draft.unfollowError = null;\r\n                draft.unfollowDone = false;\r\n                break;\r\n            case UNFOLLOW_SUCCESS:\r\n                draft.unfollowLoading = false;\r\n                draft.me.Followings = draft.me.Followings.filter((v) => v.id !== action.data);\r\n                draft.unfollowDone = true;\r\n                break;\r\n            case UNFOLLOW_FAILURE:\r\n                draft.unfollowLoading = false;\r\n                draft.unfollowError = action.error;\r\n                break;\r\n\r\n            default:\r\n                // return state;\r\n                break;\r\n        }\r\n    });\r\n}\r\n\r\n// export default reducer;\r\n"]},"metadata":{},"sourceType":"module"}