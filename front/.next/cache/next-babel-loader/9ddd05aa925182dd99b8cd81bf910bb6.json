{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\prepare\\\\front\\\\components\\\\PostForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useRef } from 'react';\nimport useInput from '../hooks/useInput';\nimport { TweetForm, TweetButton, TweetTextArea } from \"./style/PostFormStyle.js\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button } from \"antd\";\nimport { ADD_POST_REQUEST, UPLOAD_IMAGES_REQUEST } from '../reducers/post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PostForm() {\n  _s();\n\n  var dispatch = useDispatch();\n\n  var _useInput = useInput(\"\"),\n      _useInput2 = _slicedToArray(_useInput, 3),\n      text = _useInput2[0],\n      onChangeText = _useInput2[1],\n      setText = _useInput2[2];\n\n  var imageInput = useRef(); // const { addPostLoading, addPostDone } = useSelector((state) => state.post);\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      addPostLoading = _useSelector.addPostLoading,\n      addPostDone = _useSelector.addPostDone,\n      imagePaths = _useSelector.imagePaths;\n\n  useEffect(function () {\n    if (addPostDone) {\n      setText('');\n    }\n  }, [addPostDone]);\n  var onSubmit = useCallback(function (e) {\n    e.preventDefault();\n    console.log(\"입력 text : \" + text); // dispatch(addPost);\n    // setText(\"\");\n\n    dispatch({\n      type: ADD_POST_REQUEST,\n      data: {\n        text: text\n      }\n    });\n  }, [text]);\n  var onClickImageUpload = useCallback(function () {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  return /*#__PURE__*/_jsxDEV(TweetForm, {\n    onSubmit: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(TweetTextArea, {\n      rows: 4,\n      value: text,\n      onChange: onChangeText,\n      maxLength: 140,\n      placeholder: \"\\uC5B4\\uB5A4 \\uC2E0\\uAE30\\uD55C \\uC77C\\uC774 \\uC788\\uC5C8\\uB098\\uC694?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      multiple: true,\n      hidden: true,\n      ref: imageInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: onClickImageUpload,\n      children: \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      style: {\n        \"float\": 'right'\n      },\n      htmlType: \"submit\",\n      loading: addPostLoading,\n      children: \"Tweet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PostForm, \"vlc1BR9nqQxlDR0CvXE8qVDQTew=\", false, function () {\n  return [useDispatch, useInput, useSelector];\n});\n\n_c = PostForm;\nexport default PostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"sources":["C:/prepare/front/components/PostForm.js"],"names":["React","useCallback","useEffect","useRef","useInput","TweetForm","TweetButton","TweetTextArea","useDispatch","useSelector","Button","ADD_POST_REQUEST","UPLOAD_IMAGES_REQUEST","PostForm","dispatch","text","onChangeText","setText","imageInput","state","post","addPostLoading","addPostDone","imagePaths","onSubmit","e","preventDefault","console","log","type","data","onClickImageUpload","current","click"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,EAAwCC,MAAxC,QAAsD,OAAtD;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAASC,SAAT,EAAoBC,WAApB,EAAiCC,aAAjC,QAAsD,0BAAtD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,MAAT,QAAuB,MAAvB;AACA,SAASC,gBAAT,EAA2BC,qBAA3B,QAAwD,kBAAxD;;;AAGA,SAASC,QAAT,GAAoB;AAAA;;AAChB,MAAMC,QAAQ,GAAGN,WAAW,EAA5B;;AADgB,kBAEsBJ,QAAQ,CAAC,EAAD,CAF9B;AAAA;AAAA,MAETW,IAFS;AAAA,MAEHC,YAFG;AAAA,MAEWC,OAFX;;AAGhB,MAAMC,UAAU,GAAGf,MAAM,EAAzB,CAHgB,CAIhB;;AAJgB,qBAKoCM,WAAW,CAAC,UAACU,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CAL/C;AAAA,MAKRC,cALQ,gBAKRA,cALQ;AAAA,MAKQC,WALR,gBAKQA,WALR;AAAA,MAKqBC,UALrB,gBAKqBA,UALrB;;AAOhBrB,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAIoB,WAAJ,EAAiB;AACbL,MAAAA,OAAO,CAAC,EAAD,CAAP;AACH;AACJ,GAJQ,EAIN,CAACK,WAAD,CAJM,CAAT;AAMA,MAAME,QAAQ,GAAGvB,WAAW,CAAC,UAACwB,CAAD,EAAO;AAChCA,IAAAA,CAAC,CAACC,cAAF;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAeb,IAA3B,EAFgC,CAIhC;AACA;;AACAD,IAAAA,QAAQ,CAAC;AACLe,MAAAA,IAAI,EAAElB,gBADD;AAELmB,MAAAA,IAAI,EAAE;AACFf,QAAAA,IAAI,EAAJA;AADE;AAFD,KAAD,CAAR;AAOH,GAb2B,EAazB,CAACA,IAAD,CAbyB,CAA5B;AAeA,MAAMgB,kBAAkB,GAAG9B,WAAW,CAAC,YAAM;AACzCiB,IAAAA,UAAU,CAACc,OAAX,CAAmBC,KAAnB;AACH,GAFqC,EAEnC,CAACf,UAAU,CAACc,OAAZ,CAFmC,CAAtC;AAIA,sBACI,QAAC,SAAD;AAAW,IAAA,QAAQ,EAAER,QAArB;AAAA,4BACI,QAAC,aAAD;AACI,MAAA,IAAI,EAAE,CADV;AAEI,MAAA,KAAK,EAAET,IAFX;AAGI,MAAA,QAAQ,EAAEC,YAHd;AAII,MAAA,SAAS,EAAE,GAJf;AAKI,MAAA,WAAW,EAAC;AALhB;AAAA;AAAA;AAAA;AAAA,YADJ,eAQI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,MAA3B;AAA4B,MAAA,MAAM,MAAlC;AAAmC,MAAA,GAAG,EAAEE;AAAxC;AAAA;AAAA;AAAA;AAAA,YARJ,eASI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEa,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ,eAUI,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,KAAK,EAAE;AAAE,iBAAO;AAAT,OAA7B;AAAiD,MAAA,QAAQ,EAAC,QAA1D;AAAmE,MAAA,OAAO,EAAEV,cAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH;;GA9CQR,Q;UACYL,W,EACqBJ,Q,EAGcK,W;;;KAL/CI,Q;AAiDT,eAAeA,QAAf","sourcesContent":["import React, { useCallback, useEffect, useRef } from 'react'\r\nimport useInput from '../hooks/useInput';\r\nimport { TweetForm, TweetButton, TweetTextArea } from \"./style/PostFormStyle.js\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Button } from \"antd\";\r\nimport { ADD_POST_REQUEST, UPLOAD_IMAGES_REQUEST } from '../reducers/post';\r\n\r\n\r\nfunction PostForm() {\r\n    const dispatch = useDispatch();\r\n    const [text, onChangeText, setText] = useInput(\"\");\r\n    const imageInput = useRef();\r\n    // const { addPostLoading, addPostDone } = useSelector((state) => state.post);\r\n    const { addPostLoading, addPostDone, imagePaths } = useSelector((state) => state.post);\r\n\r\n    useEffect(() => {\r\n        if (addPostDone) {\r\n            setText('');\r\n        }\r\n    }, [addPostDone]);\r\n\r\n    const onSubmit = useCallback((e) => {\r\n        e.preventDefault();\r\n        console.log(\"입력 text : \" + text);\r\n\r\n        // dispatch(addPost);\r\n        // setText(\"\");\r\n        dispatch({\r\n            type: ADD_POST_REQUEST,\r\n            data: {\r\n                text,\r\n            },\r\n        });\r\n\r\n    }, [text]);\r\n\r\n    const onClickImageUpload = useCallback(() => {\r\n        imageInput.current.click();\r\n    }, [imageInput.current]);\r\n\r\n    return (\r\n        <TweetForm onSubmit={onSubmit}>\r\n            <TweetTextArea\r\n                rows={4}\r\n                value={text}\r\n                onChange={onChangeText}\r\n                maxLength={140}\r\n                placeholder=\"어떤 신기한 일이 있었나요?\"\r\n            />\r\n            <input type=\"file\" multiple hidden ref={imageInput}/>\r\n            <Button onClick={onClickImageUpload}>이미지 업로드</Button>\r\n            <Button type=\"submit\" style={{ float: 'right' }} htmlType=\"submit\" loading={addPostLoading}>Tweet</Button>\r\n        </TweetForm>\r\n    )\r\n}\r\n\r\n\r\nexport default PostForm\r\n"]},"metadata":{},"sourceType":"module"}