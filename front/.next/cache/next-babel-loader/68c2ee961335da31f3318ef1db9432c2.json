{"ast":null,"code":"import { Input, Button, notification } from \"antd\";\nimport Link from \"next/link\";\nimport { LoginFormWrapper, LoginButtonWrapper } from \"./style/LoginFormStyle.js\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { LOG_IN_REQUEST } from '../reducers/user';\nimport useInput from '../hooks/useInput'; // import React, { useState, useCallback } from \"react\";\n\nimport React, { useState, useCallback, useMemo, useEffect } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n  const [email, onChangeEmail] = useInput('');\n  const {\n    0: password,\n    1: setPassword\n  } = useState(\"\");\n  const {\n    me,\n    logInLoading,\n    logInDone,\n    logOutLoading,\n    logOutDone,\n    logOutUser,\n    logInError\n  } = useSelector(state => state.user); // console.log(\"logOutDone : \", logOutDone);\n  // console.log(\"logInDone : \", logInDone);\n\n  useEffect(() => {\n    if (logInError) {\n      alert(logInError);\n    }\n  }, [logInError]);\n  const onChangeId = useCallback(e => {\n    setId(e.target.value);\n  }, []);\n  const onChangePassword = useCallback(e => {\n    setPassword(e.target.value);\n  }, []);\n  const onSubmitForm = useCallback(e => {\n    e.preventDefault();\n    dispatch({\n      type: LOG_IN_REQUEST,\n      data: {\n        email,\n        password\n      }\n    });\n    notification.open({\n      message: '알림',\n      description: `안녕히 가세요 ${logOutUser} 님 !!`\n    });\n  }, [email, password, logInDone]);\n  return /*#__PURE__*/_jsxs(LoginFormWrapper, {\n    onSubmit: onSubmitForm,\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      children: [/*#__PURE__*/_jsx(\"label\", {\n        htmlFor: \"user-id\",\n        children: \"\\uC774\\uBA54\\uC77C\"\n      }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(Input, {\n        name: \"user-id\",\n        value: email,\n        onChange: onChangeEmail,\n        required: true\n      })]\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      children: [/*#__PURE__*/_jsx(\"label\", {\n        htmlFor: \"user-password\",\n        children: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n      }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(Input, {\n        name: \"user-password\",\n        value: password,\n        onChange: onChangePassword,\n        required: true\n      })]\n    }), /*#__PURE__*/_jsxs(LoginButtonWrapper, {\n      children: [/*#__PURE__*/_jsx(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        loading: logInLoading,\n        children: \"\\uB85C\\uADF8\\uC778\"\n      }), /*#__PURE__*/_jsx(Link, {\n        href: \"/signup\",\n        children: /*#__PURE__*/_jsx(\"a\", {\n          children: /*#__PURE__*/_jsx(Button, {\n            children: \"\\uD68C\\uC6D0 \\uAC00\\uC785\"\n          })\n        })\n      })]\n    })]\n  });\n};\n\nexport default LoginForm;","map":{"version":3,"sources":["C:/nodebird/front/components/LoginForm.js"],"names":["Input","Button","notification","Link","LoginFormWrapper","LoginButtonWrapper","useDispatch","useSelector","LOG_IN_REQUEST","useInput","React","useState","useCallback","useMemo","useEffect","LoginForm","dispatch","email","onChangeEmail","password","setPassword","me","logInLoading","logInDone","logOutLoading","logOutDone","logOutUser","logInError","state","user","alert","onChangeId","e","setId","target","value","onChangePassword","onSubmitForm","preventDefault","type","data","open","message","description"],"mappings":"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","sourcesContent":["import { Input, Button, notification } from \"antd\";\r\nimport Link from \"next/link\";\r\nimport { LoginFormWrapper, LoginButtonWrapper } from \"./style/LoginFormStyle.js\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { LOG_IN_REQUEST } from '../reducers/user';\r\nimport useInput from '../hooks/useInput';\r\n\r\n// import React, { useState, useCallback } from \"react\";\r\nimport React, { useState, useCallback, useMemo, useEffect } from \"react\";\r\n\r\n\r\nconst LoginForm = () => {\r\n    const dispatch = useDispatch();\r\n    const [email, onChangeEmail] = useInput('');\r\n\r\n    const [password, setPassword] = useState(\"\");\r\n    const { me, logInLoading, logInDone, logOutLoading, logOutDone, logOutUser, logInError } = useSelector((state) => state.user);\r\n\r\n    // console.log(\"logOutDone : \", logOutDone);\r\n    // console.log(\"logInDone : \", logInDone);\r\n\r\n    useEffect(() => {\r\n        if (logInError) {\r\n            alert(logInError);\r\n        }\r\n    }, [logInError]);\r\n\r\n    const onChangeId = useCallback((e) => {\r\n        setId(e.target.value);\r\n    }, []);\r\n\r\n    const onChangePassword = useCallback((e) => {\r\n        setPassword(e.target.value);\r\n    }, []);\r\n\r\n    const onSubmitForm = useCallback((e) => {\r\n        e.preventDefault()\r\n\r\n        dispatch({\r\n            type: LOG_IN_REQUEST,\r\n            data: { email, password },\r\n        });\r\n\r\n        notification.open({\r\n            message: '알림',\r\n            description: `안녕히 가세요 ${logOutUser} 님 !!`\r\n        })\r\n\r\n    }, [email, password, logInDone]);\r\n\r\n    return (\r\n        <LoginFormWrapper onSubmit={onSubmitForm}>\r\n            <div>\r\n                <label htmlFor=\"user-id\">이메일</label>\r\n                <br />\r\n                <Input\r\n                    name=\"user-id\"\r\n                    value={email}\r\n                    onChange={onChangeEmail}\r\n                    required\r\n                />\r\n            </div>\r\n            <div>\r\n                <label htmlFor=\"user-password\">비밀번호</label>\r\n                <br />\r\n                <Input\r\n                    name=\"user-password\"\r\n                    value={password}\r\n                    onChange={onChangePassword}\r\n                    required\r\n                />\r\n            </div>\r\n            <LoginButtonWrapper>\r\n                <Button type=\"primary\" htmlType=\"submit\" loading={logInLoading}>\r\n                    로그인\r\n                </Button>\r\n                <Link href=\"/signup\">\r\n                    <a>\r\n                        <Button>회원 가입</Button>\r\n                    </a>\r\n                </Link>\r\n            </LoginButtonWrapper>\r\n        </LoginFormWrapper>\r\n    );\r\n};\r\n\r\n\r\nexport default LoginForm;\r\n\r\n"]},"metadata":{},"sourceType":"module"}