{"ast":null,"code":"import { all, call, delay, fork, put, takeLatest } from 'redux-saga/effects';\nimport { LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE, FOLLOW_FAILURE, FOLLOW_REQUEST, FOLLOW_SUCCESS, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS, UNFOLLOW_FAILURE, REMOVE_FOLLOWER_REQUEST, REMOVE_FOLLOWER_SUCCESS, REMOVE_FOLLOWER_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE, LOAD_MY_INFO_FAILURE, LOAD_MY_INFO_REQUEST, LOAD_MY_INFO_SUCCESS, LOAD_FOLLOWERS_REQUEST, LOAD_FOLLOWERS_SUCCESS, LOAD_FOLLOWERS_FAILURE, LOAD_FOLLOWINGS_REQUEST, LOAD_FOLLOWINGS_SUCCESS, LOAD_FOLLOWINGS_FAILURE } from '../reducers/user';\nimport axios from \"axios\";\n\nfunction removeFollowerAPI(data) {\n  return axios.delete(`/user/follower/${data}`);\n}\n\nfunction* removeFollower(action) {\n  try {\n    const result = yield call(removeFollowerAPI, action.data);\n    console.log(\"result (리무부 팔로워) :  result\");\n    yield put({\n      type: REMOVE_FOLLOWER_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: REMOVE_FOLLOWER_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadFollowersAPI(data) {\n  console.log(\"data from loadFollowersAPI: \", data); // return axios.get(`/user/followers?limit=${data.limit || 3}`, data);\n\n  return axios.get('/user/followers', data);\n}\n\nfunction* loadFollowers(action) {\n  try {\n    const result = yield call(loadFollowersAPI, action.data);\n    console.log(\"result from saga for loadFollowersAPI:\", result);\n    yield put({\n      type: LOAD_FOLLOWERS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_FOLLOWERS_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadFollowingsAPI(data) {\n  console.log(\"data from loadFollowingsAPI: \", data);\n  return axios.get(`/user/followings`, data);\n}\n\nfunction* loadFollowings(action) {\n  try {\n    const result = yield call(loadFollowingsAPI, action.data);\n    console.log(\"result from saga for loadFollowersAPI:\", result);\n    yield put({\n      type: LOAD_FOLLOWINGS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_FOLLOWINGS_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction signUpAPI(data) {\n  // console.log(\"saga signUpAPI 실행 확인 회원 가입 정보는 => \", data);\n  return axios.post('/user', data);\n}\n\nfunction* signUp(action) {\n  try {\n    // yield delay(1000);\n    const result = yield call(signUpAPI, action.data);\n    console.log(\"회원 가입 응답 result : \", result);\n    yield put({\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction followAPI(data) {\n  // return axios.post('/api/follow');\n  return axios.patch(`/user/${data}/follow`);\n}\n\nfunction* follow(action) {\n  try {\n    // yield delay(1000);\n    const result = yield call(followAPI, action.data);\n    console.log(\"result for followAPI from backend : \", result);\n    yield put({\n      type: FOLLOW_SUCCESS,\n      // data: action.data,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction unfollowAPI(data) {\n  // return axios.post('/api/unfollow');\n  return axios.delete(`/user/${data}/follow`);\n}\n\nfunction* unfollow(action) {\n  try {\n    // yield delay(1000);\n    const result = yield call(unfollowAPI, action.data);\n    console.log(\"result for unfollowAPI from backend : \", result);\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      // data: action.data,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction logInAPI(data) {\n  console.log(\"로그인 데이터 to 서버 from saga: \", data); // return axios.post('/api/login', data);\n\n  return axios.post('/user/login', data);\n}\n\nfunction* logIn(action) {\n  try {\n    // yield delay(2000);\n    const result = yield call(logInAPI, action.data);\n    console.log(\"result.data(from server) : \", result.data);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      // data: action.data,\n      data: result.data\n    });\n  } catch (err) {\n    console.log(\"로그인 에러 확인 from saga : \", err);\n    console.error(err);\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction logOutAPI(data) {\n  // return axios.post('/api/login', data);\n  return axios.post('/user/logout', data);\n}\n\nfunction* logOut(action) {\n  try {\n    console.log('saga logout'); // yield delay(2000);\n\n    const result = yield call(logOutAPI);\n    yield put({\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data\n    });\n  }\n} // function loadUserAPI() {\n//     return axios.get('/user');\n// }\n// function* loadUser(action) {\n//     try {\n//         const result = yield call(loadUserAPI, action.data);\n//         yield put({\n//             type: LOAD_MY_INFO_SUCCESS,\n//             data: result.data,\n//         });\n//     } catch (err) {\n//         console.error(err);\n//         yield put({\n//             type: LOAD_MY_INFO_FAILURE,\n//             error: err.response.data,\n//         });\n//     }\n// }\n\n\nfunction loadMyInfoAPI() {\n  return axios.get('/user');\n}\n\nfunction* loadMyInfo() {\n  try {\n    const result = yield call(loadMyInfoAPI);\n    yield put({\n      type: LOAD_MY_INFO_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_MY_INFO_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchLogOut() {\n  console.log(\"saga watch 실행 check\");\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchLogIn() {\n  console.log(\"saga watch 실행 check\");\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchUnfollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\n}\n\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\nfunction* watchLoadUser() {\n  yield takeLatest(LOAD_MY_INFO_REQUEST, loadUser);\n}\n\nfunction* watchLoadFollowers() {\n  yield takeLatest(LOAD_FOLLOWERS_REQUEST, loadFollowers);\n}\n\nfunction* watchLoadFollowings() {\n  yield takeLatest(LOAD_FOLLOWINGS_REQUEST, loadFollowings);\n}\n\nfunction* watchRemoveFollower() {\n  yield takeLatest(REMOVE_FOLLOWER_REQUEST, removeFollower);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogIn), fork(watchLogOut), fork(watchFollow), fork(watchUnfollow), fork(watchRemoveFollower), fork(watchSignUp), fork(watchLoadUser), fork(watchLoadFollowers), fork(watchLoadFollowings)]);\n}","map":{"version":3,"sources":["C:/nodebird/front/sagas/user.js"],"names":["all","call","delay","fork","put","takeLatest","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","FOLLOW_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","REMOVE_FOLLOWER_REQUEST","REMOVE_FOLLOWER_SUCCESS","REMOVE_FOLLOWER_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","LOAD_MY_INFO_FAILURE","LOAD_MY_INFO_REQUEST","LOAD_MY_INFO_SUCCESS","LOAD_FOLLOWERS_REQUEST","LOAD_FOLLOWERS_SUCCESS","LOAD_FOLLOWERS_FAILURE","LOAD_FOLLOWINGS_REQUEST","LOAD_FOLLOWINGS_SUCCESS","LOAD_FOLLOWINGS_FAILURE","axios","removeFollowerAPI","data","delete","removeFollower","action","result","console","log","type","err","error","response","loadFollowersAPI","get","loadFollowers","loadFollowingsAPI","loadFollowings","signUpAPI","post","signUp","followAPI","patch","follow","unfollowAPI","unfollow","logInAPI","logIn","logOutAPI","logOut","loadMyInfoAPI","loadMyInfo","watchLogOut","watchLogIn","watchUnfollow","watchFollow","watchSignUp","watchLoadUser","loadUser","watchLoadFollowers","watchLoadFollowings","watchRemoveFollower","userSaga"],"mappings":"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","sourcesContent":["import { all, call, delay, fork, put, takeLatest } from 'redux-saga/effects';\r\nimport {\r\n    LOG_IN_REQUEST,\r\n    LOG_IN_SUCCESS,\r\n    LOG_IN_FAILURE,\r\n    LOG_OUT_REQUEST,\r\n    LOG_OUT_SUCCESS,\r\n    LOG_OUT_FAILURE,\r\n    FOLLOW_FAILURE,\r\n    FOLLOW_REQUEST,\r\n    FOLLOW_SUCCESS,\r\n    UNFOLLOW_REQUEST,\r\n    UNFOLLOW_SUCCESS,\r\n    UNFOLLOW_FAILURE,\r\n    REMOVE_FOLLOWER_REQUEST,\r\n    REMOVE_FOLLOWER_SUCCESS,\r\n    REMOVE_FOLLOWER_FAILURE,\r\n    SIGN_UP_REQUEST,\r\n    SIGN_UP_SUCCESS,\r\n    SIGN_UP_FAILURE,\r\n    LOAD_MY_INFO_FAILURE,\r\n    LOAD_MY_INFO_REQUEST,\r\n    LOAD_MY_INFO_SUCCESS,\r\n    LOAD_FOLLOWERS_REQUEST,\r\n    LOAD_FOLLOWERS_SUCCESS,\r\n    LOAD_FOLLOWERS_FAILURE,\r\n    LOAD_FOLLOWINGS_REQUEST,\r\n    LOAD_FOLLOWINGS_SUCCESS,\r\n    LOAD_FOLLOWINGS_FAILURE,\r\n} from '../reducers/user';\r\nimport axios from \"axios\";\r\n\r\nfunction removeFollowerAPI(data) {\r\n    return axios.delete(`/user/follower/${data}`);\r\n}\r\n\r\nfunction* removeFollower(action) {\r\n    try {\r\n        const result = yield call(removeFollowerAPI, action.data);\r\n        console.log(\"result (리무부 팔로워) :  result\");\r\n        yield put({\r\n            type: REMOVE_FOLLOWER_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: REMOVE_FOLLOWER_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction loadFollowersAPI(data) {\r\n    console.log(\"data from loadFollowersAPI: \", data);\r\n    // return axios.get(`/user/followers?limit=${data.limit || 3}`, data);\r\n    return axios.get('/user/followers', data);\r\n}\r\n\r\nfunction* loadFollowers(action) {\r\n    try {\r\n        const result = yield call(loadFollowersAPI, action.data);\r\n        console.log(\"result from saga for loadFollowersAPI:\", result);\r\n        yield put({\r\n            type: LOAD_FOLLOWERS_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: LOAD_FOLLOWERS_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction loadFollowingsAPI(data) {\r\n    console.log(\"data from loadFollowingsAPI: \", data);\r\n    return axios.get(`/user/followings`, data);\r\n}\r\n\r\nfunction* loadFollowings(action) {\r\n    try {\r\n        const result = yield call(loadFollowingsAPI, action.data);\r\n        console.log(\"result from saga for loadFollowersAPI:\", result);\r\n\r\n        yield put({\r\n            type: LOAD_FOLLOWINGS_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: LOAD_FOLLOWINGS_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction signUpAPI(data) {\r\n    // console.log(\"saga signUpAPI 실행 확인 회원 가입 정보는 => \", data);\r\n    return axios.post('/user', data);\r\n}\r\n\r\nfunction* signUp(action) {\r\n    try {\r\n        // yield delay(1000);\r\n        const result = yield call(signUpAPI, action.data);\r\n        console.log(\"회원 가입 응답 result : \", result);\r\n        yield put({\r\n            type: SIGN_UP_SUCCESS,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: SIGN_UP_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction followAPI(data) {\r\n    // return axios.post('/api/follow');\r\n    return axios.patch(`/user/${data}/follow`);\r\n}\r\nfunction* follow(action) {\r\n    try {\r\n        // yield delay(1000);\r\n        const result = yield call(followAPI, action.data);\r\n        console.log(\"result for followAPI from backend : \", result);\r\n\r\n        yield put({\r\n            type: FOLLOW_SUCCESS,\r\n            // data: action.data,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: FOLLOW_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction unfollowAPI(data) {\r\n    // return axios.post('/api/unfollow');\r\n    return axios.delete(`/user/${data}/follow`);\r\n\r\n}\r\nfunction* unfollow(action) {\r\n    try {\r\n        // yield delay(1000);\r\n        const result = yield call(unfollowAPI, action.data);\r\n        console.log(\"result for unfollowAPI from backend : \", result);\r\n        yield put({\r\n            type: UNFOLLOW_SUCCESS,\r\n            // data: action.data,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: UNFOLLOW_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction logInAPI(data) {\r\n    console.log(\"로그인 데이터 to 서버 from saga: \", data);\r\n    // return axios.post('/api/login', data);\r\n    return axios.post('/user/login', data);\r\n}\r\n\r\nfunction* logIn(action) {\r\n    try {\r\n        // yield delay(2000);\r\n        const result = yield call(logInAPI, action.data);\r\n        console.log(\"result.data(from server) : \", result.data);\r\n\r\n        yield put({\r\n            type: LOG_IN_SUCCESS,\r\n            // data: action.data,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.log(\"로그인 에러 확인 from saga : \",err);\r\n        console.error(err);\r\n        yield put({\r\n            type: LOG_IN_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction logOutAPI(data) {\r\n    // return axios.post('/api/login', data);\r\n    return axios.post('/user/logout', data);\r\n}\r\n\r\nfunction* logOut(action) {\r\n    try {\r\n        console.log('saga logout');\r\n        // yield delay(2000);\r\n        const result = yield call(logOutAPI);\r\n        yield put({\r\n            type: LOG_OUT_SUCCESS,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: LOG_OUT_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\n// function loadUserAPI() {\r\n//     return axios.get('/user');\r\n// }\r\n// function* loadUser(action) {\r\n//     try {\r\n//         const result = yield call(loadUserAPI, action.data);\r\n//         yield put({\r\n//             type: LOAD_MY_INFO_SUCCESS,\r\n//             data: result.data,\r\n//         });\r\n//     } catch (err) {\r\n//         console.error(err);\r\n//         yield put({\r\n//             type: LOAD_MY_INFO_FAILURE,\r\n//             error: err.response.data,\r\n//         });\r\n//     }\r\n// }\r\n\r\nfunction loadMyInfoAPI() {\r\n    return axios.get('/user');\r\n}\r\n\r\nfunction* loadMyInfo() {\r\n    try {\r\n        const result = yield call(loadMyInfoAPI);\r\n        yield put({\r\n            type: LOAD_MY_INFO_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: LOAD_MY_INFO_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchLogOut() {\r\n    console.log(\"saga watch 실행 check\");\r\n    yield takeLatest(LOG_OUT_REQUEST, logOut);\r\n}\r\nfunction* watchLogIn() {\r\n    console.log(\"saga watch 실행 check\");\r\n    yield takeLatest(LOG_IN_REQUEST, logIn);\r\n}\r\n\r\nfunction* watchUnfollow() {\r\n    yield takeLatest(UNFOLLOW_REQUEST, unfollow);\r\n}\r\nfunction* watchFollow() {\r\n    yield takeLatest(FOLLOW_REQUEST, follow);\r\n}\r\n\r\nfunction* watchSignUp() {\r\n    yield takeLatest(SIGN_UP_REQUEST, signUp);\r\n}\r\n\r\nfunction* watchLoadUser() {\r\n    yield takeLatest(LOAD_MY_INFO_REQUEST, loadUser);\r\n}\r\n\r\nfunction* watchLoadFollowers() {\r\n    yield takeLatest(LOAD_FOLLOWERS_REQUEST, loadFollowers);\r\n}\r\n\r\nfunction* watchLoadFollowings() {\r\n    yield takeLatest(LOAD_FOLLOWINGS_REQUEST, loadFollowings);\r\n}\r\n\r\nfunction* watchRemoveFollower() {\r\n    yield takeLatest(REMOVE_FOLLOWER_REQUEST, removeFollower);\r\n}\r\n\r\nexport default function* userSaga() {\r\n    yield all([\r\n        fork(watchLogIn),\r\n        fork(watchLogOut),\r\n        fork(watchFollow),\r\n        fork(watchUnfollow),\r\n        fork(watchRemoveFollower),\r\n        fork(watchSignUp),\r\n        fork(watchLoadUser),\r\n        fork(watchLoadFollowers),\r\n        fork(watchLoadFollowings),\r\n    ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}