{"ast":null,"code":"var _jsxFileName = \"C:\\\\nodebird\\\\front\\\\components\\\\SearchForm.js\";\nimport React, { useCallback, useEffect } from 'react';\nimport { Input } from \"antd\";\nimport useInput from '../hooks/useInput';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { SEARCH_POSTS_REQUEST } from '../reducers/post';\nimport Router from 'next/router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SearchForm() {\n  const dispatch = useDispatch();\n  const [searchWord, onChangeSearchWord] = useInput('');\n  const {\n    me\n  } = useSelector(state => state.user);\n  const {\n    searchPostsLoading,\n    searchPostsDone\n  } = useSelector(state => state.post);\n  const onSearch = useCallback(() => {\n    console.log(\"검색 버튼 클릭 \"); // alert(\"검색어 : \" + searchWord);\n    // return dispatch({\n    //     type: SEARCH_POSTS_REQUEST,\n    //     data: searchWord\n    // });\n\n    Router.push(`/search/post/${searchInput}`);\n  }, [searchWord]);\n  useEffect(() => {\n    if (me && me.id) {\n      Router.replace('/');\n    }\n  }, [me && me.id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Input.Search, {\n      enterButton: true,\n      style: {\n        verticalAlign: 'middle'\n      },\n      onChange: onChangeSearchWord,\n      onSearch: onSearch,\n      loading: searchPostsLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n\nexport default SearchForm;","map":{"version":3,"sources":["C:/nodebird/front/components/SearchForm.js"],"names":["React","useCallback","useEffect","Input","useInput","useDispatch","useSelector","SEARCH_POSTS_REQUEST","Router","SearchForm","dispatch","searchWord","onChangeSearchWord","me","state","user","searchPostsLoading","searchPostsDone","post","onSearch","console","log","push","searchInput","id","replace","verticalAlign"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,QAA8C,OAA9C;AACA,SAASC,KAAT,QAAsB,MAAtB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,oBAAT,QAAqC,kBAArC;AACA,OAAOC,MAAP,MAAmB,aAAnB;;;AAGA,SAASC,UAAT,GAAsB;AAClB,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAM,CAACM,UAAD,EAAaC,kBAAb,IAAmCR,QAAQ,CAAC,EAAD,CAAjD;AACA,QAAM;AAAES,IAAAA;AAAF,MAASP,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAA1B;AACA,QAAM;AAAEC,IAAAA,kBAAF;AAAsBC,IAAAA;AAAtB,MAA0CX,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACI,IAAlB,CAA3D;AAEA,QAAMC,QAAQ,GAAGlB,WAAW,CAAC,MAAM;AAC/BmB,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAD+B,CAE/B;AAEA;AACA;AACA;AACA;;AAEAb,IAAAA,MAAM,CAACc,IAAP,CAAa,gBAAeC,WAAY,EAAxC;AAGH,GAZ2B,EAYzB,CAACZ,UAAD,CAZyB,CAA5B;AAcAT,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIW,EAAE,IAAIA,EAAE,CAACW,EAAb,EAAiB;AACbhB,MAAAA,MAAM,CAACiB,OAAP,CAAe,GAAf;AACH;AACJ,GAJQ,EAIN,CAACZ,EAAE,IAAIA,EAAE,CAACW,EAAV,CAJM,CAAT;AAMA,sBACI;AAAA,2BACI,QAAC,KAAD,CAAO,MAAP;AACI,MAAA,WAAW,MADf;AACgB,MAAA,KAAK,EAAE;AAAEE,QAAAA,aAAa,EAAE;AAAjB,OADvB;AAEI,MAAA,QAAQ,EAAEd,kBAFd;AAGI,MAAA,QAAQ,EAAEO,QAHd;AAII,MAAA,OAAO,EAAEH;AAJb;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH;;AAED,eAAeP,UAAf","sourcesContent":["import React, { useCallback, useEffect } from 'react';\r\nimport { Input } from \"antd\";\r\nimport useInput from '../hooks/useInput';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { SEARCH_POSTS_REQUEST } from '../reducers/post';\r\nimport Router from 'next/router';\r\n\r\n\r\nfunction SearchForm() {\r\n    const dispatch = useDispatch();\r\n    const [searchWord, onChangeSearchWord] = useInput('');\r\n    const { me } = useSelector((state) => state.user);\r\n    const { searchPostsLoading, searchPostsDone } = useSelector((state) => state.post);\r\n\r\n    const onSearch = useCallback(() => {\r\n        console.log(\"검색 버튼 클릭 \");\r\n        // alert(\"검색어 : \" + searchWord);\r\n\r\n        // return dispatch({\r\n        //     type: SEARCH_POSTS_REQUEST,\r\n        //     data: searchWord\r\n        // });\r\n\r\n        Router.push(`/search/post/${searchInput}`);\r\n\r\n\r\n    }, [searchWord]);\r\n\r\n    useEffect(() => {\r\n        if (me && me.id) {\r\n            Router.replace('/');\r\n        }\r\n    }, [me && me.id]);\r\n\r\n    return (\r\n        <div>\r\n            <Input.Search\r\n                enterButton style={{ verticalAlign: 'middle' }}\r\n                onChange={onChangeSearchWord}\r\n                onSearch={onSearch}\r\n                loading={searchPostsLoading}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchForm\r\n"]},"metadata":{},"sourceType":"module"}