{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { SafetyCertificateTwoTone } from '@ant-design/icons';\nimport produce from 'immer';\nexport var initialState = {\n  me: null,\n  logInLoading: false,\n  // 로그인 시도중\n  logInDone: false,\n  logInError: null,\n  logOutLoading: false,\n  // 로그아웃 시도중\n  logOutDone: false,\n  logOutError: null\n};\nexport var LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport var LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport var LOG_IN_FAILURE = 'LOG_IN_FAILURE';\nexport var LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport var LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport var LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\nexport var ADD_POST_TO_ME = 'ADD_POST_TO_ME';\nexport var REMOVE_POST_OF_ME = 'REMOVE_POST_OF_ME';\n\nvar dummyUser = function dummyUser(data) {\n  return _objectSpread(_objectSpread({}, data), {}, {\n    // saga에서 넘어온 데이터\n    nickname: '제로초',\n    id: 1,\n    Posts: [{\n      id: 1\n    }],\n    Followings: [{\n      nickname: '부기초'\n    }, {\n      nickname: 'Chanho Lee'\n    }, {\n      nickname: 'neue zeal'\n    }],\n    Followers: [{\n      nickname: '부기초'\n    }, {\n      nickname: 'Chanho Lee'\n    }, {\n      nickname: 'neue zeal'\n    }]\n  });\n};\n\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case LOG_IN_REQUEST:\n        // return {\n        //     ...state,\n        //     logInLoading: true,\n        //     logInError: null,\n        //     logInDone: false\n        // };\n        draft.loaginLoading = true;\n        draft.loginDone = false;\n        draft.lognError = null;\n        break;\n\n      case LOG_IN_SUCCESS:\n        // return {\n        //     ...state,\n        //     logInLoading: false,\n        //     logInDone: true,\n        //     me: dummyUser(action.data),\n        // };\n        draft.logInLoading = false;\n        draft.logindone = true;\n        draft.logneError = null;\n        break;\n\n      case LOG_IN_FAILURE:\n        // return {\n        //     ...state,\n        //     logInLoading: false,\n        //     logInError: action.data\n        // };\n        draft.loginLoading = false;\n        draft.loginDone = false;\n        draft.loginError = null;\n        break;\n\n      case LOG_OUT_REQUEST:\n        // return {\n        //     ...state,\n        //     logOutLoading: true,\n        //     logouterror: null,\n        //     logOutDone: false\n        // };\n        draft.logOutLoading = true;\n        draft.logOutDone = false;\n        draft.logOutError = null;\n        break;\n\n      case LOG_OUT_SUCCESS:\n        // return {\n        //     ...state,\n        //     logOutLoading: false,\n        //     logOutDone: true,\n        //     me: null,\n        // };\n        draft.logOutLoading = false;\n        draft.logOutDone = true;\n        draft.me = null;\n        break;\n\n      case LOG_OUT_FAILURE:\n        // return {\n        //     ...state,\n        //     logOutLoading: false,\n        //     logouterror: action.error,\n        // };\n        draft.logOutDone = false;\n        draft.logOutLoading = false;\n        draft.logOutError = action.error;\n        break;\n\n      case ADD_POST_TO_ME:\n        // return {\n        //     ...state,\n        //     me: {\n        //         ...state.me,\n        //         Posts: [{ id: action.data }, ...state.me.Posts],\n        //     },\n        // };\n        draft.me.Posts.unshift(_objectSpread({\n          id: action.data\n        }, state.me.Posts));\n        break;\n\n      case REMOVE_POST_OF_ME:\n        // return {\n        //     ...state,\n        //     me: {\n        //         ...state.me,\n        //         Posts: state.me.Posts.filter((v) => v.id !== action.data),\n        //     },\n        // };\n        draft.me.Posts.filter(function (v) {\n          return v.id !== action.data;\n        });\n        break;\n\n      default:\n        // return state;\n        break;\n    }\n  });\n}); // export default reducer;","map":{"version":3,"sources":["C:/prepare/front/reducers/user.js"],"names":["SafetyCertificateTwoTone","produce","initialState","me","logInLoading","logInDone","logInError","logOutLoading","logOutDone","logOutError","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","ADD_POST_TO_ME","REMOVE_POST_OF_ME","dummyUser","data","nickname","id","Posts","Followings","Followers","state","action","draft","type","loaginLoading","loginDone","lognError","logindone","logneError","loginLoading","loginError","error","unshift","filter","v"],"mappings":"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","sourcesContent":["import { SafetyCertificateTwoTone } from '@ant-design/icons';\r\nimport produce from 'immer';\r\n\r\nexport const initialState = {\r\n    me: null,\r\n    logInLoading: false, // 로그인 시도중\r\n    logInDone: false,\r\n    logInError: null,\r\n\r\n    logOutLoading: false, // 로그아웃 시도중\r\n    logOutDone: false,\r\n    logOutError: null,\r\n};\r\n\r\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\r\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\r\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\r\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\r\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\r\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\r\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME';\r\nexport const REMOVE_POST_OF_ME = 'REMOVE_POST_OF_ME';\r\n\r\n\r\nconst dummyUser = (data) => ({\r\n    ...data, // saga에서 넘어온 데이터\r\n    nickname: '제로초',\r\n    id: 1,\r\n    Posts: [{ id: 1 }],\r\n    Followings: [{ nickname: '부기초' }, { nickname: 'Chanho Lee' }, { nickname: 'neue zeal' }],\r\n    Followers: [{ nickname: '부기초' }, { nickname: 'Chanho Lee' }, { nickname: 'neue zeal' }],\r\n});\r\n\r\n\r\nexport default (state = initialState, action) => {\r\n    return produce(state, (draft) => {\r\n        switch (action.type) {\r\n            case LOG_IN_REQUEST:\r\n                // return {\r\n                //     ...state,\r\n                //     logInLoading: true,\r\n                //     logInError: null,\r\n                //     logInDone: false\r\n                // };\r\n                draft.loaginLoading = true;\r\n                draft.loginDone = false;\r\n                draft.lognError = null;\r\n                break;\r\n            case LOG_IN_SUCCESS:\r\n                // return {\r\n                //     ...state,\r\n                //     logInLoading: false,\r\n                //     logInDone: true,\r\n                //     me: dummyUser(action.data),\r\n                // };\r\n                draft.logInLoading = false;\r\n                draft.logindone = true;\r\n                draft.logneError = null;\r\n                break;\r\n            case LOG_IN_FAILURE:\r\n                // return {\r\n                //     ...state,\r\n                //     logInLoading: false,\r\n                //     logInError: action.data\r\n                // };\r\n                draft.loginLoading = false;\r\n                draft.loginDone = false;\r\n                draft.loginError = null;\r\n                break;\r\n            case LOG_OUT_REQUEST:\r\n                // return {\r\n                //     ...state,\r\n                //     logOutLoading: true,\r\n                //     logouterror: null,\r\n                //     logOutDone: false\r\n                // };\r\n                draft.logOutLoading = true;\r\n                draft.logOutDone = false;\r\n                draft.logOutError = null;\r\n                break;\r\n            case LOG_OUT_SUCCESS:\r\n                // return {\r\n                //     ...state,\r\n                //     logOutLoading: false,\r\n                //     logOutDone: true,\r\n                //     me: null,\r\n                // };\r\n                draft.logOutLoading = false;\r\n                draft.logOutDone = true;\r\n                draft.me = null;\r\n                break;\r\n            case LOG_OUT_FAILURE:\r\n                // return {\r\n                //     ...state,\r\n                //     logOutLoading: false,\r\n                //     logouterror: action.error,\r\n                // };\r\n                draft.logOutDone = false;\r\n                draft.logOutLoading = false;\r\n                draft.logOutError= action.error;\r\n                break;\r\n            case ADD_POST_TO_ME:\r\n                // return {\r\n                //     ...state,\r\n                //     me: {\r\n                //         ...state.me,\r\n                //         Posts: [{ id: action.data }, ...state.me.Posts],\r\n                //     },\r\n                // };\r\n                draft.me.Posts.unshift({ id: action.data, ...state.me.Posts })\r\n                break;\r\n            case REMOVE_POST_OF_ME:\r\n                // return {\r\n                //     ...state,\r\n                //     me: {\r\n                //         ...state.me,\r\n                //         Posts: state.me.Posts.filter((v) => v.id !== action.data),\r\n                //     },\r\n                // };\r\n                draft.me.Posts.filter((v) => v.id !== action.data);\r\n                break;\r\n            default:\r\n                // return state;\r\n                break;\r\n        }\r\n    });\r\n}\r\n\r\n// export default reducer;\r\n"]},"metadata":{},"sourceType":"module"}