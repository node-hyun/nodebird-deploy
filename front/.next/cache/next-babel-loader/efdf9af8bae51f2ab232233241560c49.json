{"ast":null,"code":"import { all, call, delay, fork, put, takeLatest } from 'redux-saga/effects';\nimport { LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE, FOLLOW_FAILURE, FOLLOW_REQUEST, FOLLOW_SUCCESS, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS, UNFOLLOW_FAILURE, REMOVE_FOLLOWER_REQUEST, REMOVE_FOLLOWER_SUCCESS, REMOVE_FOLLOWER_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE, LOAD_MY_INFO_FAILURE, LOAD_MY_INFO_REQUEST, LOAD_MY_INFO_SUCCESS, LOAD_FOLLOWERS_REQUEST, LOAD_FOLLOWERS_SUCCESS, LOAD_FOLLOWERS_FAILURE, LOAD_FOLLOWINGS_REQUEST, LOAD_FOLLOWINGS_SUCCESS, LOAD_FOLLOWINGS_FAILURE, LOAD_USER_REQUEST, LOAD_USER_SUCCESS, LOAD_USER_FAILURE } from '../reducers/user';\nimport axios from \"axios\";\n\nfunction loadUserAPI(data) {\n  console.log(\"data from loadUserAPI : \", data);\n  return axios.get(`/user/${data}`);\n}\n\nfunction* loadUser(action) {\n  console.log(\"action.data from action: \", action.data);\n\n  try {\n    const result = yield call(loadUserAPI, action.data);\n    yield put({\n      type: LOAD_USER_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_USER_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction removeFollowerAPI(data) {\n  return axios.delete(`/user/follower/${data}`);\n}\n\nfunction* removeFollower(action) {\n  try {\n    const result = yield call(removeFollowerAPI, action.data);\n    console.log(\"result (리무부 팔로워) :  result\");\n    yield put({\n      type: REMOVE_FOLLOWER_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: REMOVE_FOLLOWER_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadFollowersAPI(data) {\n  console.log(\"data from loadFollowersAPI: \", data); // return axios.get(`/user/followers?limit=${data.limit || 3}`, data);\n\n  return axios.get('/user/followers', data);\n}\n\nfunction* loadFollowers(action) {\n  try {\n    const result = yield call(loadFollowersAPI, action.data);\n    console.log(\"result from saga for loadFollowersAPI:\", result);\n    yield put({\n      type: LOAD_FOLLOWERS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_FOLLOWERS_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadFollowingsAPI(data) {\n  console.log(\"data from loadFollowingsAPI: \", data);\n  return axios.get(`/user/followings`, data);\n}\n\nfunction* loadFollowings(action) {\n  try {\n    const result = yield call(loadFollowingsAPI, action.data);\n    console.log(\"result from saga for loadFollowersAPI:\", result);\n    yield put({\n      type: LOAD_FOLLOWINGS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_FOLLOWINGS_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction signUpAPI(data) {\n  // console.log(\"saga signUpAPI 실행 확인 회원 가입 정보는 => \", data);\n  return axios.post('/user', data);\n}\n\nfunction* signUp(action) {\n  try {\n    // yield delay(1000);\n    const result = yield call(signUpAPI, action.data);\n    console.log(\"회원 가입 응답 result : \", result);\n    yield put({\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction followAPI(data) {\n  // return axios.post('/api/follow');\n  return axios.patch(`/user/${data}/follow`);\n}\n\nfunction* follow(action) {\n  try {\n    // yield delay(1000);\n    const result = yield call(followAPI, action.data);\n    console.log(\"result for followAPI from backend : \", result);\n    yield put({\n      type: FOLLOW_SUCCESS,\n      // data: action.data,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction unfollowAPI(data) {\n  // return axios.post('/api/unfollow');\n  return axios.delete(`/user/${data}/follow`);\n}\n\nfunction* unfollow(action) {\n  try {\n    // yield delay(1000);\n    const result = yield call(unfollowAPI, action.data);\n    console.log(\"result for unfollowAPI from backend : \", result);\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      // data: action.data,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction logInAPI(data) {\n  console.log(\"로그인 데이터 to 서버 from saga: \", data); // return axios.post('/api/login', data);\n\n  return axios.post('/user/login', data);\n}\n\nfunction* logIn(action) {\n  try {\n    // yield delay(2000);\n    const result = yield call(logInAPI, action.data);\n    console.log(\"result.data(from server) : \", result.data);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      // data: action.data,\n      data: result.data\n    });\n  } catch (err) {\n    console.log(\"로그인 에러 확인 from saga : \", err);\n    console.error(err);\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction logOutAPI(data) {\n  // return axios.post('/api/login', data);\n  return axios.post('/user/logout', data);\n}\n\nfunction* logOut(action) {\n  try {\n    console.log('saga logout'); // yield delay(2000);\n\n    const result = yield call(logOutAPI);\n    yield put({\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data\n    });\n  }\n} // function loadUserAPI() {\n//     return axios.get('/user');\n// }\n// function* loadUser(action) {\n//     try {\n//         const result = yield call(loadUserAPI, action.data);\n//         yield put({\n//             type: LOAD_MY_INFO_SUCCESS,\n//             data: result.data,\n//         });\n//     } catch (err) {\n//         console.error(err);\n//         yield put({\n//             type: LOAD_MY_INFO_FAILURE,\n//             error: err.response.data,\n//         });\n//     }\n// }\n\n\nfunction loadMyInfoAPI() {\n  return axios.get('/user');\n}\n\nfunction* loadMyInfo() {\n  try {\n    const result = yield call(loadMyInfoAPI);\n    yield put({\n      type: LOAD_MY_INFO_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_MY_INFO_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchLogOut() {\n  console.log(\"saga watch 실행 check\");\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchLogIn() {\n  console.log(\"saga watch 실행 check\");\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchUnfollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\n}\n\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n} // function* watchLoadUser() {\n//     yield takeLatest(LOAD_MY_INFO_REQUEST, loadUser);\n// }\n\n\nfunction* watchLoadMyInfo() {\n  yield takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo);\n}\n\nfunction* watchLoadFollowers() {\n  yield takeLatest(LOAD_FOLLOWERS_REQUEST, loadFollowers);\n}\n\nfunction* watchLoadFollowings() {\n  yield takeLatest(LOAD_FOLLOWINGS_REQUEST, loadFollowings);\n}\n\nfunction* watchRemoveFollower() {\n  yield takeLatest(REMOVE_FOLLOWER_REQUEST, removeFollower);\n}\n\nfunction* watchLoadUser() {\n  yield takeLatest(LOAD_USER_REQUEST, loadUser);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogIn), fork(watchLogOut), fork(watchFollow), fork(watchUnfollow), fork(watchRemoveFollower), fork(watchSignUp), fork(watchLoadUser), fork(watchLoadMyInfo), fork(watchLoadFollowers), fork(watchLoadFollowings)]);\n}","map":{"version":3,"sources":["C:/nodebird/front/sagas/user.js"],"names":["all","call","delay","fork","put","takeLatest","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","FOLLOW_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","REMOVE_FOLLOWER_REQUEST","REMOVE_FOLLOWER_SUCCESS","REMOVE_FOLLOWER_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","LOAD_MY_INFO_FAILURE","LOAD_MY_INFO_REQUEST","LOAD_MY_INFO_SUCCESS","LOAD_FOLLOWERS_REQUEST","LOAD_FOLLOWERS_SUCCESS","LOAD_FOLLOWERS_FAILURE","LOAD_FOLLOWINGS_REQUEST","LOAD_FOLLOWINGS_SUCCESS","LOAD_FOLLOWINGS_FAILURE","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","axios","loadUserAPI","data","console","log","get","loadUser","action","result","type","err","error","response","removeFollowerAPI","delete","removeFollower","loadFollowersAPI","loadFollowers","loadFollowingsAPI","loadFollowings","signUpAPI","post","signUp","followAPI","patch","follow","unfollowAPI","unfollow","logInAPI","logIn","logOutAPI","logOut","loadMyInfoAPI","loadMyInfo","watchLogOut","watchLogIn","watchUnfollow","watchFollow","watchSignUp","watchLoadMyInfo","watchLoadFollowers","watchLoadFollowings","watchRemoveFollower","watchLoadUser","userSaga"],"mappings":"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","sourcesContent":["import { all, call, delay, fork, put, takeLatest } from 'redux-saga/effects';\r\nimport {\r\n    LOG_IN_REQUEST,\r\n    LOG_IN_SUCCESS,\r\n    LOG_IN_FAILURE,\r\n    LOG_OUT_REQUEST,\r\n    LOG_OUT_SUCCESS,\r\n    LOG_OUT_FAILURE,\r\n    FOLLOW_FAILURE,\r\n    FOLLOW_REQUEST,\r\n    FOLLOW_SUCCESS,\r\n    UNFOLLOW_REQUEST,\r\n    UNFOLLOW_SUCCESS,\r\n    UNFOLLOW_FAILURE,\r\n    REMOVE_FOLLOWER_REQUEST,\r\n    REMOVE_FOLLOWER_SUCCESS,\r\n    REMOVE_FOLLOWER_FAILURE,\r\n    SIGN_UP_REQUEST,\r\n    SIGN_UP_SUCCESS,\r\n    SIGN_UP_FAILURE,\r\n    LOAD_MY_INFO_FAILURE,\r\n    LOAD_MY_INFO_REQUEST,\r\n    LOAD_MY_INFO_SUCCESS,\r\n    LOAD_FOLLOWERS_REQUEST,\r\n    LOAD_FOLLOWERS_SUCCESS,\r\n    LOAD_FOLLOWERS_FAILURE,\r\n    LOAD_FOLLOWINGS_REQUEST,\r\n    LOAD_FOLLOWINGS_SUCCESS,\r\n    LOAD_FOLLOWINGS_FAILURE,\r\n\r\n    LOAD_USER_REQUEST,\r\n    LOAD_USER_SUCCESS,\r\n    LOAD_USER_FAILURE,\r\n\r\n} from '../reducers/user';\r\nimport axios from \"axios\";\r\n\r\nfunction loadUserAPI(data) {\r\n    console.log(\"data from loadUserAPI : \", data);\r\n    return axios.get(`/user/${data}`);\r\n}\r\n\r\nfunction* loadUser(action) {\r\n    console.log(\"action.data from action: \", action.data);\r\n    try {\r\n        const result = yield call(loadUserAPI, action.data);\r\n        yield put({\r\n            type: LOAD_USER_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: LOAD_USER_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction removeFollowerAPI(data) {\r\n    return axios.delete(`/user/follower/${data}`);\r\n}\r\n\r\nfunction* removeFollower(action) {\r\n    try {\r\n        const result = yield call(removeFollowerAPI, action.data);\r\n        console.log(\"result (리무부 팔로워) :  result\");\r\n        yield put({\r\n            type: REMOVE_FOLLOWER_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: REMOVE_FOLLOWER_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction loadFollowersAPI(data) {\r\n    console.log(\"data from loadFollowersAPI: \", data);\r\n    // return axios.get(`/user/followers?limit=${data.limit || 3}`, data);\r\n    return axios.get('/user/followers', data);\r\n}\r\n\r\nfunction* loadFollowers(action) {\r\n    try {\r\n        const result = yield call(loadFollowersAPI, action.data);\r\n        console.log(\"result from saga for loadFollowersAPI:\", result);\r\n        yield put({\r\n            type: LOAD_FOLLOWERS_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: LOAD_FOLLOWERS_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction loadFollowingsAPI(data) {\r\n    console.log(\"data from loadFollowingsAPI: \", data);\r\n    return axios.get(`/user/followings`, data);\r\n}\r\n\r\nfunction* loadFollowings(action) {\r\n    try {\r\n        const result = yield call(loadFollowingsAPI, action.data);\r\n        console.log(\"result from saga for loadFollowersAPI:\", result);\r\n\r\n        yield put({\r\n            type: LOAD_FOLLOWINGS_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: LOAD_FOLLOWINGS_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction signUpAPI(data) {\r\n    // console.log(\"saga signUpAPI 실행 확인 회원 가입 정보는 => \", data);\r\n    return axios.post('/user', data);\r\n}\r\n\r\nfunction* signUp(action) {\r\n    try {\r\n        // yield delay(1000);\r\n        const result = yield call(signUpAPI, action.data);\r\n        console.log(\"회원 가입 응답 result : \", result);\r\n        yield put({\r\n            type: SIGN_UP_SUCCESS,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: SIGN_UP_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction followAPI(data) {\r\n    // return axios.post('/api/follow');\r\n    return axios.patch(`/user/${data}/follow`);\r\n}\r\nfunction* follow(action) {\r\n    try {\r\n        // yield delay(1000);\r\n        const result = yield call(followAPI, action.data);\r\n        console.log(\"result for followAPI from backend : \", result);\r\n\r\n        yield put({\r\n            type: FOLLOW_SUCCESS,\r\n            // data: action.data,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: FOLLOW_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction unfollowAPI(data) {\r\n    // return axios.post('/api/unfollow');\r\n    return axios.delete(`/user/${data}/follow`);\r\n\r\n}\r\nfunction* unfollow(action) {\r\n    try {\r\n        // yield delay(1000);\r\n        const result = yield call(unfollowAPI, action.data);\r\n        console.log(\"result for unfollowAPI from backend : \", result);\r\n        yield put({\r\n            type: UNFOLLOW_SUCCESS,\r\n            // data: action.data,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: UNFOLLOW_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction logInAPI(data) {\r\n    console.log(\"로그인 데이터 to 서버 from saga: \", data);\r\n    // return axios.post('/api/login', data);\r\n    return axios.post('/user/login', data);\r\n}\r\n\r\nfunction* logIn(action) {\r\n    try {\r\n        // yield delay(2000);\r\n        const result = yield call(logInAPI, action.data);\r\n        console.log(\"result.data(from server) : \", result.data);\r\n\r\n        yield put({\r\n            type: LOG_IN_SUCCESS,\r\n            // data: action.data,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.log(\"로그인 에러 확인 from saga : \",err);\r\n        console.error(err);\r\n        yield put({\r\n            type: LOG_IN_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction logOutAPI(data) {\r\n    // return axios.post('/api/login', data);\r\n    return axios.post('/user/logout', data);\r\n}\r\n\r\nfunction* logOut(action) {\r\n    try {\r\n        console.log('saga logout');\r\n        // yield delay(2000);\r\n        const result = yield call(logOutAPI);\r\n        yield put({\r\n            type: LOG_OUT_SUCCESS,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: LOG_OUT_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\n// function loadUserAPI() {\r\n//     return axios.get('/user');\r\n// }\r\n// function* loadUser(action) {\r\n//     try {\r\n//         const result = yield call(loadUserAPI, action.data);\r\n//         yield put({\r\n//             type: LOAD_MY_INFO_SUCCESS,\r\n//             data: result.data,\r\n//         });\r\n//     } catch (err) {\r\n//         console.error(err);\r\n//         yield put({\r\n//             type: LOAD_MY_INFO_FAILURE,\r\n//             error: err.response.data,\r\n//         });\r\n//     }\r\n// }\r\n\r\nfunction loadMyInfoAPI() {\r\n    return axios.get('/user');\r\n}\r\n\r\nfunction* loadMyInfo() {\r\n    try {\r\n        const result = yield call(loadMyInfoAPI);\r\n        yield put({\r\n            type: LOAD_MY_INFO_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: LOAD_MY_INFO_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchLogOut() {\r\n    console.log(\"saga watch 실행 check\");\r\n    yield takeLatest(LOG_OUT_REQUEST, logOut);\r\n}\r\nfunction* watchLogIn() {\r\n    console.log(\"saga watch 실행 check\");\r\n    yield takeLatest(LOG_IN_REQUEST, logIn);\r\n}\r\n\r\nfunction* watchUnfollow() {\r\n    yield takeLatest(UNFOLLOW_REQUEST, unfollow);\r\n}\r\nfunction* watchFollow() {\r\n    yield takeLatest(FOLLOW_REQUEST, follow);\r\n}\r\n\r\nfunction* watchSignUp() {\r\n    yield takeLatest(SIGN_UP_REQUEST, signUp);\r\n}\r\n\r\n// function* watchLoadUser() {\r\n//     yield takeLatest(LOAD_MY_INFO_REQUEST, loadUser);\r\n// }\r\nfunction* watchLoadMyInfo() {\r\n    yield takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo);\r\n}\r\n\r\nfunction* watchLoadFollowers() {\r\n    yield takeLatest(LOAD_FOLLOWERS_REQUEST, loadFollowers);\r\n}\r\n\r\nfunction* watchLoadFollowings() {\r\n    yield takeLatest(LOAD_FOLLOWINGS_REQUEST, loadFollowings);\r\n}\r\n\r\nfunction* watchRemoveFollower() {\r\n    yield takeLatest(REMOVE_FOLLOWER_REQUEST, removeFollower);\r\n}\r\n\r\nfunction* watchLoadUser() {\r\n    yield takeLatest(LOAD_USER_REQUEST, loadUser);\r\n}\r\n\r\nexport default function* userSaga() {\r\n    yield all([\r\n        fork(watchLogIn),\r\n        fork(watchLogOut),\r\n        fork(watchFollow),\r\n        fork(watchUnfollow),\r\n        fork(watchRemoveFollower),\r\n        fork(watchSignUp),\r\n        fork(watchLoadUser),\r\n        fork(watchLoadMyInfo),\r\n        fork(watchLoadFollowers),\r\n        fork(watchLoadFollowings),\r\n    ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}