{"ast":null,"code":"var _jsxFileName = \"C:\\\\nodebird\\\\front\\\\pages\\\\search\\\\post\\\\[search_word].js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useCallback } from \"react\";\nimport AppLayout from \"../../../components/AppLayout\";\nimport Head from \"next/head\";\nimport PostForm from \"../../../components/PostForm\";\nimport PostCard from \"../../../components/PostCard\";\nimport { SEARCH_POSTS_REQUEST } from '../../../reducers/post';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Button } from \"antd\";\nimport { useRouter } from 'next/router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar SearchPost = function SearchPost() {\n  _s();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector2.mainPosts,\n      searchPostsDone = _useSelector2.searchPostsDone,\n      searchPostsLoading = _useSelector2.searchPostsLoading,\n      hasMorePosts = _useSelector2.hasMorePosts;\n\n  var router = useRouter();\n  var dispatch = useDispatch();\n  var search_word = router.query.search_word;\n  console.log(\"search_word : \" + search_word);\n  console.log(\"search_word : \" + searchPostsDone); // useEffect(() => {\n  //     dispatch({\n  //         type: SEARCH_POSTS_REQUEST,\n  //         data: {\n  //             search_word,\n  //             // lastId\n  //         }\n  //     });\n  // }, [search_word]);\n\n  useEffect(function () {\n    function onScroll() {\n      if (window.scrollY + document.documentElement.clientHeight >= document.documentElement.scrollHeight - 300) {\n        if (hasMorePosts && !searchPostsLoading) {\n          var _mainPosts;\n\n          console.log(\"화면이 바닥에 도달 + 포스팅 추가!!\");\n          var lastId = (_mainPosts = mainPosts[mainPosts.length - 1]) === null || _mainPosts === void 0 ? void 0 : _mainPosts.id;\n          dispatch({\n            type: SEARCH_POSTS_REQUEST,\n            data: {\n              search_word: search_word,\n              lastId: lastId // 그냥 lastId만 써도 된다.\n\n            }\n          });\n        }\n      }\n    }\n\n    window.addEventListener('scroll', onScroll);\n    return function () {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [mainPosts, hasMorePosts, searchPostsLoading]);\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"search world : \", search_word]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, _this), mainPosts.map(function (c) {\n      return /*#__PURE__*/_jsxDEV(PostCard, {\n        post: c\n      }, c.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, _this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(SearchPost, \"UAuseCAzVgu0apF7Ykr/9M9EDvg=\", false, function () {\n  return [useSelector, useSelector, useRouter, useDispatch];\n});\n\n_c = SearchPost;\nexport var __N_SSP = true;\nexport default SearchPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchPost\");","map":{"version":3,"sources":["C:/nodebird/front/pages/search/post/[search_word].js"],"names":["React","useEffect","useCallback","AppLayout","Head","PostForm","PostCard","SEARCH_POSTS_REQUEST","useSelector","useDispatch","Button","useRouter","SearchPost","state","user","me","post","mainPosts","searchPostsDone","searchPostsLoading","hasMorePosts","router","dispatch","search_word","query","console","log","onScroll","window","scrollY","document","documentElement","clientHeight","scrollHeight","lastId","length","id","type","data","addEventListener","removeEventListener","map","c"],"mappings":"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","sourcesContent":["import React, { useEffect, useCallback } from \"react\";\r\nimport AppLayout from \"../../../components/AppLayout\";\r\nimport Head from \"next/head\";\r\nimport PostForm from \"../../../components/PostForm\";\r\nimport PostCard from \"../../../components/PostCard\";\r\nimport { SEARCH_POSTS_REQUEST } from '../../../reducers/post';\r\nimport { LOAD_USER_REQUEST } from '../../../reducers/user';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport wrapper from '../../../store/configureStore';\r\nimport { END } from 'redux-saga';\r\nimport axios from 'axios';\r\nimport { Button } from \"antd\";\r\nimport { useRouter } from 'next/router';\r\n\r\n\r\nconst SearchPost = () => {\r\n    const { me } = useSelector((state) => state.user);\r\n    const { mainPosts, searchPostsDone, searchPostsLoading, hasMorePosts } = useSelector((state) => state.post);\r\n    const router = useRouter();\r\n    const dispatch = useDispatch();\r\n    const { search_word } = router.query;\r\n    console.log(\"search_word : \" + search_word);\r\n    console.log(\"search_word : \" + searchPostsDone);\r\n\r\n    // useEffect(() => {\r\n    //     dispatch({\r\n    //         type: SEARCH_POSTS_REQUEST,\r\n    //         data: {\r\n    //             search_word,\r\n    //             // lastId\r\n    //         }\r\n    //     });\r\n    // }, [search_word]);\r\n\r\n    useEffect(() => {\r\n        function onScroll() {\r\n            if (window.scrollY + document.documentElement.clientHeight >= document.documentElement.scrollHeight - 300) {\r\n\r\n                if (hasMorePosts && !searchPostsLoading) {\r\n                    console.log(\"화면이 바닥에 도달 + 포스팅 추가!!\");\r\n                    const lastId = mainPosts[mainPosts.length - 1]?.id;\r\n                    dispatch({\r\n                        type: SEARCH_POSTS_REQUEST,\r\n                        data: {\r\n                            search_word: search_word,\r\n                            lastId: lastId // 그냥 lastId만 써도 된다.\r\n                        }\r\n                    })\r\n                }\r\n            }\r\n        }\r\n        window.addEventListener('scroll', onScroll);\r\n        return () => {\r\n            window.removeEventListener('scroll', onScroll);\r\n        }\r\n    }, [mainPosts, hasMorePosts, searchPostsLoading]);\r\n\r\n    return (\r\n        <AppLayout>\r\n            <Head>\r\n                <title>Home</title>\r\n            </Head>\r\n            <h4>search world : {search_word}</h4>\r\n            {mainPosts.map((c) => {\r\n                return (\r\n                    <PostCard key={c.id} post={c} />\r\n                );\r\n            })}\r\n        </AppLayout>\r\n    );\r\n};\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n\r\n    console.log(context.req.headers);\r\n    const cookie = context.req ? context.req.headers.cookie : '';\r\n    axios.defaults.headers.Cookie = '';\r\n    if (context.req && cookie) {\r\n        axios.defaults.headers.Cookie = cookie;\r\n    }\r\n\r\n    console.log(\"context.params.search_word : \", context.params.search_word);\r\n\r\n    context.store.dispatch({\r\n        type: LOAD_USER_REQUEST,\r\n    });\r\n\r\n    context.store.dispatch({\r\n        type: SEARCH_POSTS_REQUEST,\r\n        data: {\r\n            search_word: context.params.search_word,\r\n        }\r\n    });\r\n\r\n    context.store.dispatch(END);\r\n    await context.store.sagaTask.toPromise();\r\n});\r\n\r\nexport default SearchPost;\r\n\r\n"]},"metadata":{},"sourceType":"module"}