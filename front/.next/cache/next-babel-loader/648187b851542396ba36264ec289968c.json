{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport React, { useMemo, useCallback, useEffect } from \"react\";\nimport { Form, Input, notification } from \"antd\";\nimport styled from \"styled-components\";\nimport { CHANGE_NICKNAME_REQUEST } from '../reducers/user';\nimport { useSelector, useDispatch } from 'react-redux';\nimport useInput from '../hooks/useInput';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SearchFormWrapper = /*#__PURE__*/styled.form.withConfig({\n  displayName: \"NicknameEditForm__SearchFormWrapper\",\n  componentId: \"sc-1pnyy01-0\"\n})([\"margin:10px;\"]);\n\nvar NicknameEditForm = function NicknameEditForm() {\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me,\n      changeNicknameDone = _useSelector.changeNicknameDone;\n\n  var _useInput = useInput((me === null || me === void 0 ? void 0 : me.nickname) || ''),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      nickname = _useInput2[0],\n      onChangeNickname = _useInput2[1];\n\n  var dispatch = useDispatch();\n  var onSubmit = useCallback(function () {\n    dispatch({\n      type: CHANGE_NICKNAME_REQUEST,\n      data: nickname\n    });\n    var onSubmit = useCallback(function () {\n      dispatch({\n        type: CHANGE_NICKNAME_REQUEST,\n        data: nickname\n      });\n      notification.open({\n        message: '알림',\n        description: \"닉네임 변경 성공 !!\"\n      });\n    }, [nickname, changeNicknameDone]);\n  }, [nickname, changeNicknameDone]);\n  return /*#__PURE__*/_jsxs(SearchFormWrapper, {\n    children: [/*#__PURE__*/_jsx(Input.Search, {\n      value: nickname,\n      onChange: onChangeNickname,\n      addonBefore: \"\\uB2C9\\uB124\\uC784\",\n      enterButton: \"\\uC218\\uC815\",\n      onSearch: onSubmit\n    }), \" \"]\n  });\n};\n\nexport default NicknameEditForm;","map":{"version":3,"sources":["C:/nodebird-deploy/front/components/NicknameEditForm.js"],"names":["React","useMemo","useCallback","useEffect","Form","Input","notification","styled","CHANGE_NICKNAME_REQUEST","useSelector","useDispatch","useInput","SearchFormWrapper","form","NicknameEditForm","state","user","me","changeNicknameDone","nickname","onChangeNickname","dispatch","onSubmit","type","data","open","message","description"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,OAAhB,EAAyBC,WAAzB,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,YAAtB,QAA0C,MAA1C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,uBAAT,QAAwC,kBAAxC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,QAAP,MAAqB,mBAArB;;;AAEA,IAAMC,iBAAiB,gBAAGL,MAAM,CAACM,IAAV;AAAA;AAAA;AAAA,oBAAvB;;AAIA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAAA,qBACQL,WAAW,CAAC,UAACM,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CADnB;AAAA,MACnBC,EADmB,gBACnBA,EADmB;AAAA,MACfC,kBADe,gBACfA,kBADe;;AAAA,kBAEUP,QAAQ,CAAC,CAAAM,EAAE,SAAF,IAAAA,EAAE,WAAF,YAAAA,EAAE,CAAEE,QAAJ,KAAgB,EAAjB,CAFlB;AAAA;AAAA,MAEpBA,QAFoB;AAAA,MAEVC,gBAFU;;AAG3B,MAAMC,QAAQ,GAAGX,WAAW,EAA5B;AAEA,MAAMY,QAAQ,GAAGpB,WAAW,CAAC,YAAM;AAC/BmB,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEf,uBADD;AAELgB,MAAAA,IAAI,EAAEL;AAFD,KAAD,CAAR;AAKA,QAAMG,QAAQ,GAAGpB,WAAW,CAAC,YAAM;AAC/BmB,MAAAA,QAAQ,CAAC;AACLE,QAAAA,IAAI,EAAEf,uBADD;AAELgB,QAAAA,IAAI,EAAEL;AAFD,OAAD,CAAR;AAKAb,MAAAA,YAAY,CAACmB,IAAb,CAAkB;AACdC,QAAAA,OAAO,EAAE,IADK;AAEdC,QAAAA,WAAW,EAAE;AAFC,OAAlB;AAKH,KAX2B,EAWzB,CAACR,QAAD,EAAWD,kBAAX,CAXyB,CAA5B;AAaH,GAnB2B,EAmBzB,CAACC,QAAD,EAAWD,kBAAX,CAnByB,CAA5B;AAqBA,sBACI,MAAC,iBAAD;AAAA,4BACI,KAAC,KAAD,CAAO,MAAP;AACI,MAAA,KAAK,EAAEC,QADX;AAEI,MAAA,QAAQ,EAAEC,gBAFd;AAGI,MAAA,WAAW,EAAC,oBAHhB;AAII,MAAA,WAAW,EAAC,cAJhB;AAKI,MAAA,QAAQ,EAAEE;AALd,MADJ;AAAA,IADJ;AAUH,CApCD;;AAsCA,eAAeR,gBAAf","sourcesContent":["import React, { useMemo, useCallback, useEffect } from \"react\";\r\nimport { Form, Input, notification } from \"antd\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { CHANGE_NICKNAME_REQUEST } from '../reducers/user';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport useInput from '../hooks/useInput';\r\n\r\nconst SearchFormWrapper = styled.form`\r\n   margin: 10px;\r\n`;\r\n\r\nconst NicknameEditForm = () => {\r\n    const { me, changeNicknameDone } = useSelector((state) => state.user);\r\n    const [nickname, onChangeNickname] = useInput(me?.nickname || '');\r\n    const dispatch = useDispatch();\r\n\r\n    const onSubmit = useCallback(() => {\r\n        dispatch({\r\n            type: CHANGE_NICKNAME_REQUEST,\r\n            data: nickname,\r\n        });\r\n\r\n        const onSubmit = useCallback(() => {\r\n            dispatch({\r\n                type: CHANGE_NICKNAME_REQUEST,\r\n                data: nickname,\r\n            });\r\n\r\n            notification.open({\r\n                message: '알림',\r\n                description: \"닉네임 변경 성공 !!\"\r\n            })\r\n\r\n        }, [nickname, changeNicknameDone]);\r\n\r\n    }, [nickname, changeNicknameDone]);\r\n\r\n    return (\r\n        <SearchFormWrapper>\r\n            <Input.Search\r\n                value={nickname}\r\n                onChange={onChangeNickname}\r\n                addonBefore=\"닉네임\"\r\n                enterButton=\"수정\"\r\n                onSearch={onSubmit}\r\n            /> </SearchFormWrapper>\r\n    );\r\n};\r\n\r\nexport default NicknameEditForm;\r\n"]},"metadata":{},"sourceType":"module"}