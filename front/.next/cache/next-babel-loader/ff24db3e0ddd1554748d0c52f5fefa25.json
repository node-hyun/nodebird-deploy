{"ast":null,"code":"var _jsxFileName = \"C:\\\\nodebird-deploy\\\\front\\\\components\\\\UserProfile.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { Avatar, Card, Button, notification } from \"antd\";\nimport { UserProfileWrapper } from './style/UserProfileStyle'; // import { useDispatch } from \"react-redux\";\n// import { logoutAction } from \"../reducers/user\";\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { LOG_OUT_REQUEST } from '../reducers/user';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar dummy = {\n  nickname: \"제로초\",\n  Post: [],\n  Followings: [],\n  Followers: [],\n  isLoggedIn: false\n};\n\nvar UserProfile = function UserProfile(_ref) {\n  _s();\n\n  var setIsLoggedIn = _ref.setIsLoggedIn;\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me,\n      logOutLoading = _useSelector.logOutLoading,\n      logInLoading = _useSelector.logInLoading,\n      logInDone = _useSelector.logInDone,\n      logOutDone = _useSelector.logOutDone,\n      logOutUser = _useSelector.logOutUser;\n\n  useEffect(function () {\n    notification.open({\n      message: '알림',\n      description: \"환영합니다 \" + me.nickname + \"님\"\n    });\n  }, [me && me.id && logInDone]);\n  var onLogOut = useCallback(function () {\n    dispatch({\n      type: LOG_OUT_REQUEST\n    });\n    notification.open({\n      message: '알림',\n      description: \"안녕히 가세요 \" + logOutUser + \"님\"\n    });\n  }, [logOutDone]);\n  return /*#__PURE__*/_jsxDEV(UserProfileWrapper, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      actions: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"\\uC9F9\\uC9F9\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, _this), me.Posts.length]\n      }, \"twit\", true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"\\uD314\\uB85C\\uC789\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, _this), me.Followings.length]\n      }, \"following\", true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"\\uD314\\uB85C\\uC6CC\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, _this), me.Followers.length]\n      }, \"follower\", true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, _this)],\n      children: [/*#__PURE__*/_jsxDEV(Card.Meta, {\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          children: me.nickname[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 29\n        }, _this),\n        title: me.nickname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onLogOut,\n        loading: logOutLoading,\n        children: \"\\uB85C\\uADF8\\uC544\\uC6C3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(UserProfile, \"X81GB2l7epmo/5t2xRgtd262QDA=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = UserProfile;\nexport default UserProfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserProfile\");","map":{"version":3,"sources":["C:/nodebird-deploy/front/components/UserProfile.js"],"names":["React","useCallback","useEffect","useState","Avatar","Card","Button","notification","UserProfileWrapper","useSelector","useDispatch","LOG_OUT_REQUEST","dummy","nickname","Post","Followings","Followers","isLoggedIn","UserProfile","setIsLoggedIn","dispatch","state","user","me","logOutLoading","logInLoading","logInDone","logOutDone","logOutUser","open","message","description","id","onLogOut","type","Posts","length"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { Avatar, Card, Button, notification } from \"antd\";\r\nimport { UserProfileWrapper } from './style/UserProfileStyle';\r\n\r\n// import { useDispatch } from \"react-redux\";\r\n// import { logoutAction } from \"../reducers/user\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { LOG_OUT_REQUEST } from '../reducers/user';\r\n\r\n\r\nconst dummy = {\r\n    nickname: \"제로초\",\r\n    Post: [],\r\n    Followings: [],\r\n    Followers: [],\r\n    isLoggedIn: false,\r\n};\r\n\r\n\r\nconst UserProfile = ({ setIsLoggedIn }) => {\r\n    const dispatch = useDispatch();\r\n    const { me, logOutLoading, logInLoading, logInDone, logOutDone, logOutUser } = useSelector((state) => state.user);\r\n\r\n    useEffect(() => {\r\n        notification.open({\r\n            message: '알림',\r\n            description: \"환영합니다 \" + me.nickname + \"님\"\r\n        })\r\n    }, [me && me.id && logInDone]);\r\n\r\n    const onLogOut = useCallback(() => {\r\n        dispatch({\r\n            type: LOG_OUT_REQUEST,\r\n        });\r\n\r\n        notification.open({\r\n            message: '알림',\r\n            description: \"안녕히 가세요 \" + logOutUser + \"님\"\r\n        })\r\n\r\n    }, [logOutDone]);\r\n\r\n    return (\r\n        <UserProfileWrapper>\r\n            <Card\r\n                actions={[\r\n                    <div key=\"twit\">\r\n                        짹짹\r\n                    <br />\r\n                        {me.Posts.length}\r\n                    </div>,\r\n                    <div key=\"following\">\r\n                        팔로잉\r\n                    <br />\r\n                        {me.Followings.length}\r\n                    </div>,\r\n                    <div key=\"follower\">\r\n                        팔로워\r\n                    <br />\r\n                        {me.Followers.length}\r\n                    </div>,\r\n                ]}\r\n            >\r\n                <Card.Meta\r\n                    avatar={<Avatar>{me.nickname[0]}</Avatar>}\r\n                    title={me.nickname}\r\n                />\r\n                <Button onClick={onLogOut} loading={logOutLoading}>로그아웃</Button>\r\n            </Card>\r\n        </UserProfileWrapper>\r\n    );\r\n};\r\n\r\n\r\nexport default UserProfile;"]},"metadata":{},"sourceType":"module"}