{"ast":null,"code":"var _jsxFileName = \"C:\\\\nodebird\\\\front\\\\pages\\\\search\\\\post\\\\[search_word].js\";\nimport React, { useEffect, useCallback } from \"react\";\nimport AppLayout from \"../../../components/AppLayout\";\nimport Head from \"next/head\";\nimport PostForm from \"../../../components/PostForm\";\nimport PostCard from \"../../../components/PostCard\";\nimport { SEARCH_POSTS_REQUEST } from '../../../reducers/post';\nimport { LOAD_USER_REQUEST } from '../../../reducers/user';\nimport { useSelector, useDispatch } from 'react-redux';\nimport wrapper from '../../../store/configureStore';\nimport { END } from 'redux-saga';\nimport axios from 'axios';\nimport { Button } from \"antd\";\nimport { useRouter } from 'next/router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchPost = () => {\n  const {\n    me\n  } = useSelector(state => state.user);\n  const {\n    mainPosts,\n    searchPostsDone\n  } = useSelector(state => state.post);\n  const router = useRouter();\n  const dispatch = useDispatch();\n  const {\n    search_word\n  } = router.query;\n  console.log(\"search_word : \", search_word);\n\n  if (searchPostsDone) {\n    console.log(\"실행 확인 ::\", sarchPostDone); // dispatch({\n    //     type: LOAD_USER_REQUEST,\n    // });\n    // dispatch({\n    //     type: SEARCH_POSTS_REQUEST,\n    //     data: search_word\n    // });\n  } // useEffect(() => {\n  //     dispatch({\n  //         type: LOAD_USER_REQUEST,\n  //     });\n  //     dispatch({\n  //         type: SEARCH_POSTS_REQUEST,\n  //         data: search_word\n  //     });\n  // }, [searchPostsDone, me && me.id]);\n\n\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), me && /*#__PURE__*/_jsxDEV(PostForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 20\n    }, this), \"search page \", search_world]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}; // export const getServerSideProps = wrapper.getServerSideProps(async (context) => {\n//     console.log(context.req.headers);\n//     const cookie = context.req ? context.req.headers.cookie : '';\n//     axios.defaults.headers.Cookie = '';\n//     if (context.req && cookie) {\n//         axios.defaults.headers.Cookie = cookie;\n//     }\n//     console.log(\"context.params.search_world : \", context.params.search_world);\n// context.store.dispatch({\n//     type: LOAD_USER_REQUEST,\n// });\n// context.store.dispatch({\n//     type: SEARCH_POSTS_REQUEST,\n//     data: context.params.search_world\n// });\n//     context.store.dispatch(END);\n//     await context.store.sagaTask.toPromise();\n// });\n\n\nexport default SearchPost;","map":{"version":3,"sources":["C:/nodebird/front/pages/search/post/[search_word].js"],"names":["React","useEffect","useCallback","AppLayout","Head","PostForm","PostCard","SEARCH_POSTS_REQUEST","LOAD_USER_REQUEST","useSelector","useDispatch","wrapper","END","axios","Button","useRouter","SearchPost","me","state","user","mainPosts","searchPostsDone","post","router","dispatch","search_word","query","console","log","sarchPostDone","search_world"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,WAA3B,QAA8C,OAA9C;AACA,OAAOC,SAAP,MAAsB,+BAAtB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,QAAP,MAAqB,8BAArB;AACA,OAAOC,QAAP,MAAqB,8BAArB;AACA,SAASC,oBAAT,QAAqC,wBAArC;AACA,SAASC,iBAAT,QAAkC,wBAAlC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,OAAP,MAAoB,+BAApB;AACA,SAASC,GAAT,QAAoB,YAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,MAAvB;AACA,SAASC,SAAT,QAA0B,aAA1B;;;AAGA,MAAMC,UAAU,GAAG,MAAM;AACrB,QAAM;AAAEC,IAAAA;AAAF,MAASR,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAA1B;AACA,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAAiCZ,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACI,IAAlB,CAAlD;AACA,QAAMC,MAAM,GAAGR,SAAS,EAAxB;AACA,QAAMS,QAAQ,GAAGd,WAAW,EAA5B;AACA,QAAM;AAAEe,IAAAA;AAAF,MAAkBF,MAAM,CAACG,KAA/B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BH,WAA9B;;AAEA,MAAIJ,eAAJ,EAAqB;AACjBM,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAyBC,aAAzB,EADiB,CAEjB;AACA;AACA;AACA;AACA;AACA;AACA;AACH,GAjBoB,CAmBrB;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AAEA,sBACI,QAAC,SAAD;AAAA,4BACI,QAAC,IAAD;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,EAIKZ,EAAE,iBAAI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YAJX,kBAKiBa,YALjB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CA5CD,C,CA8CA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;;;AAEA,eAAed,UAAf","sourcesContent":["import React, { useEffect, useCallback } from \"react\";\r\nimport AppLayout from \"../../../components/AppLayout\";\r\nimport Head from \"next/head\";\r\nimport PostForm from \"../../../components/PostForm\";\r\nimport PostCard from \"../../../components/PostCard\";\r\nimport { SEARCH_POSTS_REQUEST } from '../../../reducers/post';\r\nimport { LOAD_USER_REQUEST } from '../../../reducers/user';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport wrapper from '../../../store/configureStore';\r\nimport { END } from 'redux-saga';\r\nimport axios from 'axios';\r\nimport { Button } from \"antd\";\r\nimport { useRouter } from 'next/router';\r\n\r\n\r\nconst SearchPost = () => {\r\n    const { me } = useSelector((state) => state.user);\r\n    const { mainPosts, searchPostsDone } = useSelector((state) => state.post);\r\n    const router = useRouter();\r\n    const dispatch = useDispatch();\r\n    const { search_word } = router.query;\r\n    console.log(\"search_word : \", search_word);\r\n\r\n    if (searchPostsDone) {\r\n        console.log(\"실행 확인 ::\" , sarchPostDone);\r\n        // dispatch({\r\n        //     type: LOAD_USER_REQUEST,\r\n        // });\r\n        // dispatch({\r\n        //     type: SEARCH_POSTS_REQUEST,\r\n        //     data: search_word\r\n        // });\r\n    }\r\n\r\n    // useEffect(() => {\r\n    //     dispatch({\r\n    //         type: LOAD_USER_REQUEST,\r\n    //     });\r\n\r\n    //     dispatch({\r\n    //         type: SEARCH_POSTS_REQUEST,\r\n    //         data: search_word\r\n    //     });\r\n    // }, [searchPostsDone, me && me.id]);\r\n\r\n    return (\r\n        <AppLayout>\r\n            <Head>\r\n                <title>Home</title>\r\n            </Head>\r\n            {me && <PostForm />}\r\n            search page {search_world}\r\n            {/* {mainPosts.map((c) => {\r\n                return (\r\n                    <PostCard key={c.id} post={c} />\r\n                );\r\n            })} */}\r\n        </AppLayout>\r\n    );\r\n};\r\n\r\n// export const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n\r\n//     console.log(context.req.headers);\r\n//     const cookie = context.req ? context.req.headers.cookie : '';\r\n//     axios.defaults.headers.Cookie = '';\r\n//     if (context.req && cookie) {\r\n//         axios.defaults.headers.Cookie = cookie;\r\n//     }\r\n\r\n//     console.log(\"context.params.search_world : \", context.params.search_world);\r\n\r\n// context.store.dispatch({\r\n//     type: LOAD_USER_REQUEST,\r\n// });\r\n\r\n// context.store.dispatch({\r\n//     type: SEARCH_POSTS_REQUEST,\r\n//     data: context.params.search_world\r\n// });\r\n\r\n//     context.store.dispatch(END);\r\n//     await context.store.sagaTask.toPromise();\r\n// });\r\n\r\nexport default SearchPost;\r\n\r\n"]},"metadata":{},"sourceType":"module"}