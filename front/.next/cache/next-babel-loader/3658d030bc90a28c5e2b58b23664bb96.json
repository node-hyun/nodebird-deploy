{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// const dummyPost = {\n//     id: 2,\n//     content: 'hello world #posting_test',\n//     User: {\n//         id: 1,\n//         nickname: '제로초',\n//     },\n//     Images: [{ src: \"https://image.shutterstock.com/image-photo/odaiba-japan-10-january-2016-600w-687132658.jpg\" }],\n//     Comments: [],\n// };\nvar dummyPost = function dummyPost(data) {\n  return {\n    id: data.id,\n    content: data.content,\n    User: {\n      id: 1,\n      nickname: '제로초'\n    },\n    Images: [],\n    Comments: []\n  };\n};\n\nexport var initialState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      userId: 'terecal',\n      nickname: '펭하'\n    },\n    content: 'sample 게시글 #test',\n    Images: [{\n      src: 'https://image.shutterstock.com/image-vector/sample-red-square-grunge-stamp-260nw-338250266.jpg'\n    }, {\n      src: 'https://gimg.gilbut.co.kr/book/BN001958/rn_view_BN001958.jpg'\n    }, {\n      src: 'https://gimg.gilbut.co.kr/book/BN001998/rn_view_BN001998.jpg'\n    }],\n    Comments: [{\n      User: {\n        nickname: 'nero'\n      },\n      content: '첫번째 더미 댓글 fisrt '\n    }, {\n      User: {\n        nickname: 'hero'\n      },\n      content: '두번째 더미 댓글 second'\n    }]\n  }],\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null\n};\nexport var ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport var ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport var ADD_POST_FAILURE = 'ADD_POST_FAILURE';\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_POST_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addPostLoading: true,\n        addPostDone: false,\n        addPostError: null\n      });\n\n    case ADD_POST_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addPostLoading: false,\n        addPostDone: true,\n        mainPosts: [dummyPost(action.data)].concat(_toConsumableArray(state.mainPosts))\n      });\n\n    case ADD_POST_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addPostLoading: false,\n        addPostError: action.error\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/prepare/front/reducers/post.js"],"names":["dummyPost","data","id","content","User","nickname","Images","Comments","initialState","mainPosts","userId","src","addPostLoading","addPostDone","addPostError","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","reducer","state","action","type","error"],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAMA,SAAS,GAAG,SAAZA,SAAY,CAACC,IAAD;AAAA,SAAW;AACzBC,IAAAA,EAAE,EAAED,IAAI,CAACC,EADgB;AAEzBC,IAAAA,OAAO,EAAEF,IAAI,CAACE,OAFW;AAGzBC,IAAAA,IAAI,EAAE;AACFF,MAAAA,EAAE,EAAE,CADF;AAEFG,MAAAA,QAAQ,EAAE;AAFR,KAHmB;AAOzBC,IAAAA,MAAM,EAAE,EAPiB;AAQzBC,IAAAA,QAAQ,EAAE;AARe,GAAX;AAAA,CAAlB;;AAYA,OAAO,IAAMC,YAAY,GAAG;AACxBC,EAAAA,SAAS,EAAE,CACP;AACIP,IAAAA,EAAE,EAAE,CADR;AAEIE,IAAAA,IAAI,EAAE;AACFF,MAAAA,EAAE,EAAE,CADF;AAEFQ,MAAAA,MAAM,EAAE,SAFN;AAGFL,MAAAA,QAAQ,EAAE;AAHR,KAFV;AAOIF,IAAAA,OAAO,EAAE,kBAPb;AAQIG,IAAAA,MAAM,EAAE,CAAC;AACLK,MAAAA,GAAG,EAAE;AADA,KAAD,EAEL;AACCA,MAAAA,GAAG,EAAE;AADN,KAFK,EAIL;AACCA,MAAAA,GAAG,EAAE;AADN,KAJK,CARZ;AAeIJ,IAAAA,QAAQ,EAAE,CAAC;AACPH,MAAAA,IAAI,EAAE;AACFC,QAAAA,QAAQ,EAAE;AADR,OADC;AAIPF,MAAAA,OAAO,EAAE;AAJF,KAAD,EAKP;AACCC,MAAAA,IAAI,EAAE;AACFC,QAAAA,QAAQ,EAAE;AADR,OADP;AAICF,MAAAA,OAAO,EAAE;AAJV,KALO;AAfd,GADO,CADa;AA+BxBS,EAAAA,cAAc,EAAE,KA/BQ;AAgCxBC,EAAAA,WAAW,EAAE,KAhCW;AAiCxBC,EAAAA,YAAY,EAAE;AAjCU,CAArB;AAqCP,OAAO,IAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,IAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,IAAMC,gBAAgB,GAAG,kBAAzB;;AAGP,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBX,YAAyB;AAAA,MAAXY,MAAW;;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,gBAAL;AACI,6CACOI,KADP;AAEIP,QAAAA,cAAc,EAAE,IAFpB;AAGIC,QAAAA,WAAW,EAAE,KAHjB;AAIIC,QAAAA,YAAY,EAAE;AAJlB;;AAMJ,SAAKE,gBAAL;AACI,6CACOG,KADP;AAEIP,QAAAA,cAAc,EAAE,KAFpB;AAGIC,QAAAA,WAAW,EAAE,IAHjB;AAIIJ,QAAAA,SAAS,GAAGT,SAAS,CAACoB,MAAM,CAACnB,IAAR,CAAZ,4BAA8BkB,KAAK,CAACV,SAApC;AAJb;;AAMJ,SAAKQ,gBAAL;AACI,6CACOE,KADP;AAEIP,QAAAA,cAAc,EAAE,KAFpB;AAGIE,QAAAA,YAAY,EAAEM,MAAM,CAACE;AAHzB;;AAKJ;AACI,aAAOH,KAAP;AAtBR;AAwBH,CAzBD;;AA2BA,eAAeD,OAAf","sourcesContent":["// const dummyPost = {\r\n//     id: 2,\r\n//     content: 'hello world #posting_test',\r\n//     User: {\r\n//         id: 1,\r\n//         nickname: '제로초',\r\n//     },\r\n//     Images: [{ src: \"https://image.shutterstock.com/image-photo/odaiba-japan-10-january-2016-600w-687132658.jpg\" }],\r\n//     Comments: [],\r\n// };\r\n\r\nconst dummyPost = (data) => ({\r\n    id: data.id,\r\n    content: data.content,\r\n    User: {\r\n        id: 1,\r\n        nickname: '제로초',\r\n    },\r\n    Images: [],\r\n    Comments: [],\r\n});\r\n\r\n\r\nexport const initialState = {\r\n    mainPosts: [\r\n        {\r\n            id: 1,\r\n            User: {\r\n                id: 1, \r\n                userId: 'terecal',\r\n                nickname: '펭하',\r\n            },\r\n            content: 'sample 게시글 #test',\r\n            Images: [{\r\n                src: 'https://image.shutterstock.com/image-vector/sample-red-square-grunge-stamp-260nw-338250266.jpg',\r\n            }, {\r\n                src: 'https://gimg.gilbut.co.kr/book/BN001958/rn_view_BN001958.jpg',\r\n            }, {\r\n                src: 'https://gimg.gilbut.co.kr/book/BN001998/rn_view_BN001998.jpg',\r\n            }],\r\n            Comments: [{\r\n                User: {\r\n                    nickname: 'nero',\r\n                },\r\n                content: '첫번째 더미 댓글 fisrt ',\r\n            }, {\r\n                User: {\r\n                    nickname: 'hero',\r\n                },\r\n                content: '두번째 더미 댓글 second',\r\n            }]\r\n        }\r\n    ],\r\n\r\n    addPostLoading: false,\r\n    addPostDone: false,\r\n    addPostError: null,\r\n\r\n};\r\n\r\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\r\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\r\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\r\n\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST_REQUEST:\r\n            return {\r\n                ...state,\r\n                addPostLoading: true,\r\n                addPostDone: false,\r\n                addPostError: null,\r\n            };\r\n        case ADD_POST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                addPostLoading: false,\r\n                addPostDone: true,\r\n                mainPosts: [dummyPost(action.data), ...state.mainPosts],\r\n            };\r\n        case ADD_POST_FAILURE:\r\n            return {\r\n                ...state,\r\n                addPostLoading: false,\r\n                addPostError: action.error,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}