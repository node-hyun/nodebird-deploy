{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport produce from 'immer';\nimport shortId from 'shortid';\nimport faker from 'faker'; // const dummyPost = (data) => ({\n//     id: data.id,\n//     content: data.content,\n//     User: {\n//         id: 1,\n//         nickname: '제로초',\n//     },\n//     Images: [data.image],\n//     Comments: [],\n// });\n\nvar dummyComment = function dummyComment(data) {\n  return {\n    id: shortId.generate(),\n    content: data,\n    User: {\n      id: 1,\n      nickname: \"제로초\"\n    }\n  };\n};\n\nexport var initialState = {\n  mainPosts: [],\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  loadPostsLoading: false,\n  loadPostsDone: false,\n  loadPostsError: null,\n  uploadImagesLoading: false,\n  uploadImagesDone: false,\n  uploadImagesError: null,\n  imagePaths: [],\n  hasMorePosts: true\n}; // 게시글 생성(using faker) 함수 \n// export const generateDummyPost = (number) => Array(number).fill().map(() => ({\n//     id: shortId.generate(),\n//     User: {\n//         id: shortId.generate(),\n//         nickname: faker.name.findName(),\n//     },\n//     content: faker.lorem.paragraph(),\n//     Images: [{\n//         src: faker.image.image(),\n//     }],\n//     Commeents: [{\n//         User: {\n//             id: shortId.generate(),\n//             nickname: faker.name.findName(),\n//         },\n//         content: faker.lorem.sentence(),\n//     }],\n// }));\n// 최초 게시글 10개 설정\n// initialState.mainPosts = initialState.mainPosts.concat(\n//     generateDummyPost(10)\n// )\n\nexport var ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport var ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport var ADD_POST_FAILURE = 'ADD_POST_FAILURE'; // 댓글 추가\n\nexport var ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport var ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport var ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport var REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport var REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport var REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\nexport var LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\nexport var LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\nexport var LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\nexport var UPLOAD_IMAGES_REQUEST = 'UPLOAD_IMAGES_REQUEST';\nexport var UPLOAD_IMAGES_SUCCESS = 'UPLOAD_IMAGES_SUCCESS';\nexport var UPLOAD_IMAGES_FAILURE = 'UPLOAD_IMAGES_FAILURE';\nexport var REMOVE_IMAGE = 'REMOVE_IMAGE';\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addCommentError = null;\n        break;\n\n      case ADD_POST_SUCCESS:\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        draft.imagePaths = []; // draft.mainPosts.unshift(dummyPost(action.data));\n\n        draft.mainPosts.unshift(action.data);\n        break;\n\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = false;\n        draft.addPostError = action.error;\n        break;\n\n      case ADD_COMMENT_REQUEST:\n        draft.addCommentLoading = false;\n        draft.addCommentDone = false;\n        draft.addCommentError = null;\n        break;\n\n      case ADD_COMMENT_SUCCESS:\n        var post = draft.mainPosts.find(function (v) {\n          return v.id === action.data.postId;\n        });\n        post.Comments.unshift(dummyComment(action.data.content));\n        draft.addCommentLoading = false;\n        draft.addCommentDone = true;\n        break;\n\n      case ADD_COMMENT_FAILURE:\n        return _objectSpread(_objectSpread({}, state), {}, {\n          addCommentLoading: false,\n          addCommentError: action.error\n        });\n\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoading = true;\n        draft.removePostDone = false;\n        draft.removePostError = null;\n        break;\n\n      case REMOVE_POST_SUCCESS:\n        draft.mainPosts = draft.mainPosts.filter(function (v) {\n          return v.id !== action.data;\n        });\n        draft.removePostLoading = false;\n        draft.removePostDone = true;\n\n      case REMOVE_POST_FAILURE:\n        draft.removePostLoading = false;\n        draft.removePostError = action.error;\n        break;\n\n      case LOAD_POSTS_REQUEST:\n        draft.loadPostsLoading = true;\n        draft.loadPostsDone = false;\n        draft.loadPostsError = null;\n        break;\n\n      case LOAD_POSTS_SUCCESS:\n        draft.loadPostsLoading = false;\n        draft.loadPostsDone = true;\n        draft.mainPosts = action.data.concat(draft.mainPosts); // draft.hasMorePosts = draft.mainPosts.length < 50;\n\n        draft.hasMorePosts = action.data.length === 10;\n        break;\n\n      case LOAD_POSTS_FAILURE:\n        draft.loadPostsLoading = false;\n        draft.loadPostsError = action.error;\n        break;\n\n      case UPLOAD_IMAGES_REQUEST:\n        draft.uploadImagesLoading = true;\n        draft.uploadImagesDone = false;\n        draft.uploadImagesError = null;\n        break;\n\n      case UPLOAD_IMAGES_SUCCESS:\n        {\n          // draft.imagePaths = draft.action.data;\n          draft.imagePaths.unshift(action.data);\n          draft.uploadImagesLoading = false;\n          draft.uploadImagesDone = true;\n          break;\n        }\n\n      case UPLOAD_IMAGES_FAILURE:\n        draft.uploadImagesLoading = false;\n        draft.uploadImagesError = action.error;\n        break;\n\n      case REMOVE_IMAGE:\n        draft.imagePaths = draft.imagePaths.filter(function (v, i) {\n          return i !== action.data;\n        });\n        break;\n\n      default:\n        return state;\n    }\n  });\n}); // export default reducer;","map":{"version":3,"sources":["C:/prepare/front/reducers/post.js"],"names":["produce","shortId","faker","dummyComment","data","id","generate","content","User","nickname","initialState","mainPosts","addPostLoading","addPostDone","addPostError","addCommentLoading","addCommentDone","addCommentError","removePostLoading","removePostDone","removePostError","loadPostsLoading","loadPostsDone","loadPostsError","uploadImagesLoading","uploadImagesDone","uploadImagesError","imagePaths","hasMorePosts","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_SUCCESS","UPLOAD_IMAGES_FAILURE","REMOVE_IMAGE","state","action","draft","type","unshift","error","post","find","v","postId","Comments","filter","concat","length","i"],"mappings":"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","sourcesContent":["import produce from 'immer';\r\nimport shortId from 'shortid';\r\nimport faker from 'faker';\r\n\r\n// const dummyPost = (data) => ({\r\n//     id: data.id,\r\n//     content: data.content,\r\n//     User: {\r\n//         id: 1,\r\n//         nickname: '제로초',\r\n//     },\r\n//     Images: [data.image],\r\n//     Comments: [],\r\n// });\r\n\r\nconst dummyComment = (data) => ({\r\n    id: shortId.generate(),\r\n    content: data,\r\n    User: {\r\n        id: 1,\r\n        nickname: \"제로초\",\r\n    },\r\n});\r\n\r\n\r\nexport const initialState = {\r\n    mainPosts: [],\r\n    addPostLoading: false,\r\n    addPostDone: false,\r\n    addPostError: null,\r\n\r\n    addCommentLoading: false,\r\n    addCommentDone: false,\r\n    addCommentError: null,\r\n\r\n    removePostLoading: false,\r\n    removePostDone: false,\r\n    removePostError: null,\r\n\r\n    loadPostsLoading: false,\r\n    loadPostsDone: false,\r\n    loadPostsError: null,\r\n    \r\n    uploadImagesLoading: false,\r\n    uploadImagesDone: false,\r\n    uploadImagesError: null,\r\n    imagePaths: [],\r\n    \r\n    hasMorePosts: true,\r\n};\r\n\r\n// 게시글 생성(using faker) 함수 \r\n// export const generateDummyPost = (number) => Array(number).fill().map(() => ({\r\n//     id: shortId.generate(),\r\n//     User: {\r\n//         id: shortId.generate(),\r\n//         nickname: faker.name.findName(),\r\n//     },\r\n//     content: faker.lorem.paragraph(),\r\n//     Images: [{\r\n//         src: faker.image.image(),\r\n//     }],\r\n//     Commeents: [{\r\n//         User: {\r\n//             id: shortId.generate(),\r\n//             nickname: faker.name.findName(),\r\n//         },\r\n//         content: faker.lorem.sentence(),\r\n//     }],\r\n// }));\r\n\r\n// 최초 게시글 10개 설정\r\n// initialState.mainPosts = initialState.mainPosts.concat(\r\n//     generateDummyPost(10)\r\n// )\r\n\r\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\r\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\r\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\r\n// 댓글 추가\r\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\r\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\r\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\r\n\r\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\r\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\r\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\r\n\r\nexport const LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\r\nexport const LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\r\nexport const LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\r\n\r\nexport const UPLOAD_IMAGES_REQUEST = 'UPLOAD_IMAGES_REQUEST';\r\nexport const UPLOAD_IMAGES_SUCCESS = 'UPLOAD_IMAGES_SUCCESS';\r\nexport const UPLOAD_IMAGES_FAILURE = 'UPLOAD_IMAGES_FAILURE';\r\nexport const REMOVE_IMAGE = 'REMOVE_IMAGE';\r\n\r\n\r\nexport default (state = initialState, action) => {\r\n    return produce(state, (draft) => {\r\n        switch (action.type) {\r\n            case ADD_POST_REQUEST:\r\n                draft.addPostLoading = true;\r\n                draft.addPostDone = false;\r\n                draft.addCommentError = null;\r\n                break;\r\n            case ADD_POST_SUCCESS:\r\n                draft.addPostLoading = false;\r\n                draft.addPostDone = true;\r\n                draft.imagePaths = [];\r\n                // draft.mainPosts.unshift(dummyPost(action.data));\r\n                draft.mainPosts.unshift(action.data);\r\n                break;\r\n            case ADD_POST_FAILURE:\r\n                draft.addPostLoading = false;\r\n                draft.addPostError = action.error;\r\n                break;\r\n\r\n            case ADD_COMMENT_REQUEST:\r\n                draft.addCommentLoading = false;\r\n                draft.addCommentDone = false;\r\n                draft.addCommentError = null;\r\n                break;\r\n            case ADD_COMMENT_SUCCESS:\r\n                const post = draft.mainPosts.find((v) => v.id === action.data.postId);\r\n                post.Comments.unshift(dummyComment(action.data.content));\r\n                draft.addCommentLoading = false;\r\n                draft.addCommentDone = true;\r\n                break;\r\n\r\n            case ADD_COMMENT_FAILURE:\r\n                return {\r\n                    ...state,\r\n                    addCommentLoading: false,\r\n                    addCommentError: action.error,\r\n                };\r\n            case REMOVE_POST_REQUEST:\r\n                draft.removePostLoading = true;\r\n                draft.removePostDone = false;\r\n                draft.removePostError = null;\r\n                break;\r\n            case REMOVE_POST_SUCCESS:\r\n                draft.mainPosts = draft.mainPosts.filter((v) => v.id !== action.data);\r\n                draft.removePostLoading = false;\r\n                draft.removePostDone = true;\r\n\r\n            case REMOVE_POST_FAILURE:\r\n                draft.removePostLoading = false;\r\n                draft.removePostError = action.error;\r\n                break;\r\n\r\n            case LOAD_POSTS_REQUEST:\r\n                draft.loadPostsLoading = true;\r\n                draft.loadPostsDone = false;\r\n                draft.loadPostsError = null;\r\n                break;\r\n            case LOAD_POSTS_SUCCESS:\r\n                draft.loadPostsLoading = false;\r\n                draft.loadPostsDone = true;\r\n                draft.mainPosts = action.data.concat(draft.mainPosts);\r\n                // draft.hasMorePosts = draft.mainPosts.length < 50;\r\n                draft.hasMorePosts = action.data.length === 10;\r\n\r\n                break;\r\n            case LOAD_POSTS_FAILURE:\r\n                draft.loadPostsLoading = false;\r\n                draft.loadPostsError = action.error;\r\n                break;\r\n\r\n            case UPLOAD_IMAGES_REQUEST:\r\n                draft.uploadImagesLoading = true;\r\n                draft.uploadImagesDone = false;\r\n                draft.uploadImagesError = null;\r\n                break;\r\n            case UPLOAD_IMAGES_SUCCESS: {\r\n                // draft.imagePaths = draft.action.data;\r\n                draft.imagePaths.unshift(action.data)\r\n                draft.uploadImagesLoading = false;\r\n                draft.uploadImagesDone = true;\r\n                break;\r\n            }\r\n            case UPLOAD_IMAGES_FAILURE:\r\n                draft.uploadImagesLoading = false;\r\n                draft.uploadImagesError = action.error;\r\n                break;\r\n            case REMOVE_IMAGE:\r\n                draft.imagePaths = draft.imagePaths.filter((v, i) => i !== action.data);\r\n                break;\r\n            default:\r\n                return state;\r\n        }\r\n    });\r\n\r\n}\r\n\r\n// export default reducer;\r\n"]},"metadata":{},"sourceType":"module"}