{"ast":null,"code":"var _jsxFileName = \"C:\\\\nodebird\\\\front\\\\components\\\\CommentRow.js\";\n// import React from 'react'\nimport React, { useEffect, useCallback } from \"react\";\nimport { Avatar, Comment, notification } from 'antd';\nimport { CloseSquareOutlined } from '@ant-design/icons';\nimport { CommentRowRapper } from './style/CommentRowStyle';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { DELETE_COMMENT_REQUEST } from '../reducers/post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CommentRow({\n  comment,\n  PostId\n}) {\n  const dispatch = useDispatch();\n  console.log(comment);\n  const {\n    deleteCommentDone,\n    deleteCommentLoading\n  } = useSelector(state => state.post);\n  const deleteComment = useCallback(() => {\n    dispatch({\n      type: DELETE_COMMENT_REQUEST,\n      data: PostId\n    });\n    notification.open({\n      message: '알림',\n      description: \"댓글 삭제 성공 !!\"\n    });\n  }, [deleteCommentDone]);\n  return /*#__PURE__*/_jsxDEV(CommentRowRapper, {\n    children: [/*#__PURE__*/_jsxDEV(Comment, {\n      author: comment.User.nickname,\n      avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n        children: comment.User.nickname[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 25\n      }, this),\n      content: comment.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CloseSquareOutlined, {\n      loading: deleteCommentLoading,\n      onClick: deleteComment,\n      style: {\n        fontSize: '20px',\n        color: '#08c'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n\nexport default CommentRow;","map":{"version":3,"sources":["C:/nodebird/front/components/CommentRow.js"],"names":["React","useEffect","useCallback","Avatar","Comment","notification","CloseSquareOutlined","CommentRowRapper","useSelector","useDispatch","DELETE_COMMENT_REQUEST","CommentRow","comment","PostId","dispatch","console","log","deleteCommentDone","deleteCommentLoading","state","post","deleteComment","type","data","open","message","description","User","nickname","content","fontSize","color"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,WAA3B,QAA8C,OAA9C;AACA,SAASC,MAAT,EAAiBC,OAAjB,EAA0BC,YAA1B,QAA8C,MAA9C;AACA,SAASC,mBAAT,QAAoC,mBAApC;AACA,SAASC,gBAAT,QAAiC,yBAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,sBAAT,QAAuC,kBAAvC;;;AAGA,SAASC,UAAT,CAAoB;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAApB,EAAyC;AACrC,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;AACA,QAAM;AAAEK,IAAAA,iBAAF;AAAqBC,IAAAA;AAArB,MAA8CV,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAA/D;AAEA,QAAMC,aAAa,GAAGnB,WAAW,CAAC,MAAM;AACpCY,IAAAA,QAAQ,CAAC;AACLQ,MAAAA,IAAI,EAAEZ,sBADD;AAELa,MAAAA,IAAI,EAAEV;AAFD,KAAD,CAAR;AAIAR,IAAAA,YAAY,CAACmB,IAAb,CAAkB;AACdC,MAAAA,OAAO,EAAE,IADK;AAEdC,MAAAA,WAAW,EAAE;AAFC,KAAlB;AAIH,GATgC,EAS9B,CAACT,iBAAD,CAT8B,CAAjC;AAWA,sBACI,QAAC,gBAAD;AAAA,4BACI,QAAC,OAAD;AACI,MAAA,MAAM,EAAEL,OAAO,CAACe,IAAR,CAAaC,QADzB;AAEI,MAAA,MAAM,eAAE,QAAC,MAAD;AAAA,kBAAShB,OAAO,CAACe,IAAR,CAAaC,QAAb,CAAsB,CAAtB;AAAT;AAAA;AAAA;AAAA;AAAA,cAFZ;AAGI,MAAA,OAAO,EAAEhB,OAAO,CAACiB;AAHrB;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI,QAAC,mBAAD;AAAqB,MAAA,OAAO,EAAEX,oBAA9B;AAAoD,MAAA,OAAO,EAAEG,aAA7D;AAA4E,MAAA,KAAK,EAAE;AAAES,QAAAA,QAAQ,EAAE,MAAZ;AAAoBC,QAAAA,KAAK,EAAE;AAA3B;AAAnF;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH;;AAED,eAAepB,UAAf","sourcesContent":["// import React from 'react'\r\nimport React, { useEffect, useCallback } from \"react\";\r\nimport { Avatar, Comment, notification } from 'antd';\r\nimport { CloseSquareOutlined } from '@ant-design/icons';\r\nimport { CommentRowRapper } from './style/CommentRowStyle';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { DELETE_COMMENT_REQUEST } from '../reducers/post'\r\n\r\n\r\nfunction CommentRow({ comment, PostId }) {\r\n    const dispatch = useDispatch();\r\n    console.log(comment);\r\n    const { deleteCommentDone, deleteCommentLoading } = useSelector((state) => state.post);\r\n\r\n    const deleteComment = useCallback(() => {\r\n        dispatch({\r\n            type: DELETE_COMMENT_REQUEST,\r\n            data: PostId,\r\n        });\r\n        notification.open({\r\n            message: '알림',\r\n            description: \"댓글 삭제 성공 !!\"\r\n        })\r\n    }, [deleteCommentDone]);\r\n\r\n    return (\r\n        <CommentRowRapper>\r\n            <Comment\r\n                author={comment.User.nickname}\r\n                avatar={<Avatar>{comment.User.nickname[0]}</Avatar>}\r\n                content={comment.content}\r\n            />\r\n            <CloseSquareOutlined loading={deleteCommentLoading} onClick={deleteComment} style={{ fontSize: '20px', color: '#08c' }} />\r\n        </CommentRowRapper>\r\n    )\r\n}\r\n\r\nexport default CommentRow\r\n"]},"metadata":{},"sourceType":"module"}