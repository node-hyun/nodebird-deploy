{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport Head from \"next/head\";\nimport AppLayout from \"../components/AppLayout\";\nimport { Form, Input, Checkbox, Button, notification } from \"antd\";\nimport useInput from '../hooks/useInput';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { SIGN_UP_REQUEST } from '../reducers/user';\nimport Router from 'next/router';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Signup = function Signup() {\n  var dispatch = useDispatch();\n\n  var _useInput = useInput(\"\"),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      email = _useInput2[0],\n      onChangeEmail = _useInput2[1];\n\n  var _useInput3 = useInput(\"\"),\n      _useInput4 = _slicedToArray(_useInput3, 2),\n      nickname = _useInput4[0],\n      onChangeNickname = _useInput4[1];\n\n  var _useInput5 = useInput(\"\"),\n      _useInput6 = _slicedToArray(_useInput5, 2),\n      password = _useInput6[0],\n      onChangePassword = _useInput6[1];\n\n  var _useState = useState(\"\"),\n      passwordCheck = _useState[0],\n      setPasswordCheck = _useState[1];\n\n  var _useState2 = useState(false),\n      passwordError = _useState2[0],\n      setPasswordError = _useState2[1];\n\n  var _useState3 = useState(false),\n      term = _useState3[0],\n      setTerm = _useState3[1];\n\n  var _useState4 = useState(false),\n      termError = _useState4[0],\n      setTermError = _useState4[1]; // const { signUpLoading} = useSelector((state) => state.user);\n\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      signUpLoading = _useSelector.signUpLoading,\n      me = _useSelector.me,\n      signUpDone = _useSelector.signUpDone,\n      signUpError = _useSelector.signUpError;\n\n  useEffect(function () {\n    if (signUpDone) {\n      notification.open({\n        message: '알림',\n        description: \"회원 가입 성공! 로그인 페이지로 이동하겠습니다\"\n      });\n    }\n  }, [signUpDone]);\n  useEffect(function () {\n    if (me && me.id) {\n      notification.open({\n        message: '알림',\n        description: \"로그인 상태입니다 메인 페이지로 이동합니다!\"\n      });\n      Router.replace('/');\n    }\n  }, [me && me.id]);\n  useEffect(function () {\n    if (signUpError) {\n      alert(signUpError);\n    }\n  }, [signUpError]);\n  useEffect(function () {\n    if (signUpDone) {\n      Router.replace('/');\n    }\n  }, [signUpDone]);\n  var onSubmit = useCallback(function () {\n    if (password !== passwordCheck) {\n      return setPasswordError(true);\n    }\n\n    if (!term) {\n      return setTermError(true);\n    } // console.log(\"회원 가입 정보 : id, nick, password : \", email, nickname, password);\n\n\n    return dispatch({\n      type: SIGN_UP_REQUEST,\n      data: {\n        email: email,\n        nickname: nickname,\n        password: password\n      }\n    });\n  }, [email, password, passwordCheck, term]);\n  var onChangePasswordCheck = useCallback(function (e) {\n    setPasswordError(e.target.value !== password);\n    setPasswordCheck(e.target.value);\n  }, [password]);\n  var onChangeTerm = useCallback(function (e) {\n    setTermError(false);\n    setTerm(e.target.checked);\n  }, []);\n  return /*#__PURE__*/_jsxs(AppLayout, {\n    children: [/*#__PURE__*/_jsx(Head, {\n      children: /*#__PURE__*/_jsx(\"title\", {\n        children: \"\\uD68C\\uC6D0 \\uAC00\\uC785 | NodeBird\"\n      })\n    }), /*#__PURE__*/_jsxs(Form, {\n      onFinish: onSubmit,\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        children: [/*#__PURE__*/_jsx(\"label\", {\n          htmlFor: \"user-id\",\n          children: \"\\uC774\\uBA54\\uC77C\"\n        }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(Input, {\n          name: \"user-id\",\n          value: email,\n          required: true,\n          onChange: onChangeEmail\n        })]\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        children: [/*#__PURE__*/_jsx(\"label\", {\n          htmlFor: \"user-nick\",\n          children: \"\\uB2C9\\uB124\\uC784\"\n        }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(Input, {\n          name: \"user-nick\",\n          value: nickname,\n          required: true,\n          onChange: onChangeNickname\n        })]\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        children: [/*#__PURE__*/_jsx(\"label\", {\n          htmlFor: \"user-password\",\n          children: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n        }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(Input, {\n          name: \"user-password\",\n          type: \"password\",\n          value: password,\n          required: true,\n          onChange: onChangePassword\n        })]\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        children: [/*#__PURE__*/_jsx(\"label\", {\n          htmlFor: \"user-password-check\",\n          children: \"\\uBE44\\uBC00\\uBC88\\uD638\\uCCB4\\uD06C\"\n        }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(Input, {\n          name: \"user-password-check\",\n          type: \"password\",\n          value: passwordCheck,\n          required: true,\n          onChange: onChangePasswordCheck\n        }), passwordError && /*#__PURE__*/_jsx(\"div\", {\n          style: {\n            color: \"red\"\n          },\n          children: \"\\uBE44\\uBC00\\uBC88\\uD638\\uAC00 \\uC77C\\uCE58\\uD558\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4.\"\n        })]\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        children: [/*#__PURE__*/_jsx(Checkbox, {\n          name: \"user-term\",\n          checked: term,\n          onChange: onChangeTerm,\n          children: \"\\uC81C\\uB85C\\uCD08 \\uB9D0\\uC744 \\uC798 \\uB4E4\\uC744 \\uAC83\\uC744 \\uB3D9\\uC758\\uD569\\uB2C8\\uB2E4.\"\n        }), termError && /*#__PURE__*/_jsx(\"div\", {\n          style: {\n            color: \"red\"\n          },\n          children: \"\\uC57D\\uAD00\\uC5D0 \\uB3D9\\uC758\\uD558\\uC154\\uC57C \\uD569\\uB2C8\\uB2E4.\"\n        })]\n      }), /*#__PURE__*/_jsx(\"div\", {\n        style: {\n          marginTop: 10\n        },\n        children: /*#__PURE__*/_jsx(Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          loading: signUpLoading,\n          children: \"\\uAC00\\uC785\\uD558\\uAE30\"\n        })\n      })]\n    })]\n  });\n};\n\nexport default Signup;","map":{"version":3,"sources":["C:/nodebird-deploy/front/pages/signup.js"],"names":["React","useState","useCallback","useEffect","Head","AppLayout","Form","Input","Checkbox","Button","notification","useInput","useDispatch","useSelector","SIGN_UP_REQUEST","Router","Signup","dispatch","email","onChangeEmail","nickname","onChangeNickname","password","onChangePassword","passwordCheck","setPasswordCheck","passwordError","setPasswordError","term","setTerm","termError","setTermError","state","user","signUpLoading","me","signUpDone","signUpError","open","message","description","id","replace","alert","onSubmit","type","data","onChangePasswordCheck","e","target","value","onChangeTerm","checked","color","marginTop"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useEffect } from \"react\";\r\nimport Head from \"next/head\";\r\nimport AppLayout from \"../components/AppLayout\";\r\nimport { Form, Input, Checkbox, Button, notification } from \"antd\";\r\nimport useInput from '../hooks/useInput';\r\nimport { useDispatch ,useSelector} from 'react-redux';\r\nimport { SIGN_UP_REQUEST } from '../reducers/user';\r\nimport Router from 'next/router';\r\n\r\n\r\n\r\nconst Signup = () => {\r\n    const dispatch = useDispatch();\r\n    const [email, onChangeEmail] = useInput(\"\");\r\n    const [nickname, onChangeNickname] = useInput(\"\");\r\n    const [password, onChangePassword] = useInput(\"\");\r\n    const [passwordCheck, setPasswordCheck] = useState(\"\");\r\n    const [passwordError, setPasswordError] = useState(false);\r\n    const [term, setTerm] = useState(false);\r\n    const [termError, setTermError] = useState(false);\r\n    // const { signUpLoading} = useSelector((state) => state.user);\r\n    const { signUpLoading, me, signUpDone, signUpError} = useSelector((state) => state.user);\r\n\r\n    useEffect(() => {\r\n        if (signUpDone) {\r\n            notification.open({\r\n                message: '알림',\r\n                description: \"회원 가입 성공! 로그인 페이지로 이동하겠습니다\"\r\n            })\r\n        }\r\n    }, [signUpDone]);\r\n\r\n    useEffect(() => {\r\n        if (me && me.id) {\r\n            notification.open({\r\n                message: '알림',\r\n                description: \"로그인 상태입니다 메인 페이지로 이동합니다!\"\r\n            })\r\n            Router.replace('/');\r\n        }\r\n    }, [me && me.id]);\r\n\r\n    useEffect(() => {\r\n        if (signUpError) {\r\n            alert(signUpError);\r\n        }\r\n    }, [signUpError]);\r\n\r\n    useEffect(() => {\r\n        if (signUpDone) {\r\n            Router.replace('/');\r\n        }\r\n    }, [signUpDone]);\r\n\r\n    \r\n    const onSubmit = useCallback(() => {\r\n        if (password !== passwordCheck) {\r\n            return setPasswordError(true);\r\n        }\r\n        if (!term) {\r\n            return setTermError(true);\r\n        }\r\n        // console.log(\"회원 가입 정보 : id, nick, password : \", email, nickname, password);\r\n\r\n        return dispatch({\r\n            type: SIGN_UP_REQUEST,\r\n            data: {\r\n                email,\r\n                nickname,\r\n                password,\r\n            },\r\n        });\r\n\r\n\r\n    }, [email, password, passwordCheck, term]);\r\n\r\n    const onChangePasswordCheck = useCallback(\r\n        (e) => {\r\n            setPasswordError(e.target.value !== password);\r\n            setPasswordCheck(e.target.value);\r\n        },\r\n        [password]\r\n    );\r\n\r\n    const onChangeTerm = useCallback((e) => {\r\n        setTermError(false);\r\n        setTerm(e.target.checked);\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <AppLayout>\r\n            <Head>\r\n                <title>회원 가입 | NodeBird</title>\r\n            </Head>\r\n\r\n            <Form onFinish={onSubmit}>\r\n                <div>\r\n                    <label htmlFor=\"user-id\">이메일</label>\r\n                    <br />\r\n                    <Input\r\n                        name=\"user-id\"\r\n                        value={email}\r\n                        required\r\n                        onChange={onChangeEmail}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"user-nick\">닉네임</label>\r\n                    <br />\r\n                    <Input\r\n                        name=\"user-nick\"\r\n                        value={nickname}\r\n                        required\r\n                        onChange={onChangeNickname}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"user-password\">비밀번호</label>\r\n                    <br />\r\n                    <Input\r\n                        name=\"user-password\"\r\n                        type=\"password\"\r\n                        value={password}\r\n                        required\r\n                        onChange={onChangePassword}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"user-password-check\">비밀번호체크</label>\r\n                    <br />\r\n                    <Input\r\n                        name=\"user-password-check\"\r\n                        type=\"password\"\r\n                        value={passwordCheck}\r\n                        required\r\n                        onChange={onChangePasswordCheck}\r\n                    />\r\n\r\n                    {passwordError && (\r\n                        <div style={{ color: \"red\" }}>\r\n                            비밀번호가 일치하지 않습니다.\r\n                        </div>\r\n                    )}\r\n                </div>\r\n\r\n                <div>\r\n                    <Checkbox\r\n                        name=\"user-term\"\r\n                        checked={term}\r\n                        onChange={onChangeTerm}\r\n                    >\r\n                        제로초 말을 잘 들을 것을 동의합니다.\r\n                    </Checkbox>\r\n                    {termError && (\r\n                        <div style={{ color: \"red\" }}>\r\n                            약관에 동의하셔야 합니다.\r\n                        </div>\r\n                    )}\r\n                </div>\r\n\r\n                <div style={{ marginTop: 10 }}>\r\n                    <Button type=\"primary\" htmlType=\"submit\" loading={signUpLoading}>가입하기</Button>\r\n                </div>\r\n\r\n            </Form>\r\n        </AppLayout>\r\n    );\r\n};\r\n\r\n\r\nexport default Signup;"]},"metadata":{},"sourceType":"module"}