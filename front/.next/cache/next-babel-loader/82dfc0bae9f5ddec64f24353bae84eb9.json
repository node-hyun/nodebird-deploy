{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport React, { useCallback, useEffect, useRef } from 'react';\nimport useInput from '../hooks/useInput';\nimport { TweetForm, TweetButton, TweetTextArea } from \"./style/PostFormStyle.js\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button, notification } from \"antd\"; // import { ADD_POST_REQUEST, UPLOAD_IMAGES_REQUEST } from '../reducers/post';\n\nimport { ADD_POST_REQUEST, UPLOAD_IMAGES_REQUEST, REMOVE_IMAGE } from '../reducers/post';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nfunction PostForm() {\n  var dispatch = useDispatch();\n\n  var _useInput = useInput(\"\"),\n      _useInput2 = _slicedToArray(_useInput, 3),\n      text = _useInput2[0],\n      onChangeText = _useInput2[1],\n      setText = _useInput2[2];\n\n  var imageInput = useRef();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      addPostLoading = _useSelector.addPostLoading,\n      addPostDone = _useSelector.addPostDone,\n      imagePaths = _useSelector.imagePaths;\n\n  useEffect(function () {\n    if (addPostDone) {\n      setText('');\n    }\n  }, [addPostDone]);\n  var onSubmit = useCallback(function (e) {\n    e.preventDefault();\n\n    if (!text || !text.trim()) {\n      return alert('게시글을 작성하세요.');\n    } // 폼데이터 객체에 이미지와 텍스트 정보를 설정 한뒤 \n\n\n    var formData = new FormData();\n    imagePaths.forEach(function (p) {\n      formData.append('image', p);\n    });\n    formData.append('content', text); // 액션 data로 설정\n\n    dispatch({\n      type: ADD_POST_REQUEST,\n      data: formData\n    });\n    notification.open({\n      message: '알림',\n      description: \"posting 성공!\"\n    });\n  }, [text, imagePaths, addPostDone]);\n  var onClickImageUpload = useCallback(function () {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  var onChangeImages = useCallback(function (e) {\n    console.log('images : ', e.target.files);\n    var imageFormData = new FormData();\n    [].forEach.call(e.target.files, function (f) {\n      imageFormData.append('image', f);\n    });\n    console.log(\"imageFormData : \", imageFormData);\n    dispatch({\n      type: UPLOAD_IMAGES_REQUEST,\n      data: imageFormData\n    });\n  });\n  var onRemoveImage = useCallback(function (index) {\n    return function () {\n      dispatch({\n        type: REMOVE_IMAGE,\n        data: index\n      });\n    };\n  });\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsxs(TweetForm, {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsx(TweetTextArea, {\n        rows: 4,\n        value: text,\n        onChange: onChangeText,\n        maxLength: 140,\n        placeholder: \"\\uC5B4\\uB5A4 \\uC2E0\\uAE30\\uD55C \\uC77C\\uC774 \\uC788\\uC5C8\\uB098\\uC694?\"\n      }), /*#__PURE__*/_jsx(\"input\", {\n        type: \"file\",\n        name: \"image\",\n        multiple: true,\n        hidden: true,\n        ref: imageInput,\n        onChange: onChangeImages\n      }), /*#__PURE__*/_jsx(Button, {\n        onClick: onClickImageUpload,\n        children: \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"\n      }), /*#__PURE__*/_jsx(Button, {\n        type: \"submit\",\n        style: {\n          \"float\": 'right'\n        },\n        htmlType: \"submit\",\n        loading: addPostLoading,\n        children: \"Tweet\"\n      })]\n    }), imagePaths.map(function (v, i) {\n      return /*#__PURE__*/_jsxs(\"div\", {\n        style: {\n          display: 'inline-block'\n        },\n        children: [/*#__PURE__*/_jsx(\"img\", {\n          src: \"http://127.0.0.1:3065/\".concat(v),\n          style: {\n            width: '200px'\n          },\n          alt: v\n        }), /*#__PURE__*/_jsx(\"div\", {\n          children: /*#__PURE__*/_jsx(Button, {\n            onClick: onRemoveImage(i),\n            children: \"\\uC81C\\uAC70\"\n          })\n        })]\n      }, v);\n    })]\n  });\n}\n\nexport default PostForm;","map":null,"metadata":{},"sourceType":"module"}