{"ast":null,"code":"import { all, call, delay, fork, put, takeLatest } from 'redux-saga/effects';\nimport { LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE, FOLLOW_FAILURE, FOLLOW_REQUEST, FOLLOW_SUCCESS, UNFOLLOW_FAILURE, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS } from '../reducers/user';\n\nfunction followAPI() {\n  return axios.post('/api/follow');\n}\n\nfunction* follow(action) {\n  try {\n    // const result = yield call(followAPI);\n    yield delay(1000);\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction unfollowAPI() {\n  return axios.post('/api/unfollow');\n}\n\nfunction* unfollow(action) {\n  try {\n    // const result = yield call(unfollowAPI);\n    yield delay(1000);\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction logInAPI(data) {\n  return axios.post('/api/login', data);\n}\n\nfunction* logIn(action) {\n  try {\n    console.log('saga logIn'); // const result = yield call(logInAPI);\n\n    yield delay(2000);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      // data: { ...action.data, nickname: \"hyun\" },\n      data: action.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction logOutAPI(data) {\n  return axios.post('/api/login', data);\n}\n\nfunction* logOut(action) {\n  try {\n    console.log('saga logout'); // const result = yield call(logInAPI);\n\n    yield delay(2000);\n    yield put({\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchLogOut() {\n  console.log(\"saga watch 실행 check\");\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchLogIn() {\n  console.log(\"saga watch 실행 check\");\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchUnfollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\n}\n\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogIn), fork(watchLogOut), fork(watchFollow), fork(watchUnfollow)]);\n}","map":{"version":3,"sources":["C:/prepare/front/sagas/user.js"],"names":["all","call","delay","fork","put","takeLatest","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","FOLLOW_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","UNFOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","followAPI","axios","post","follow","action","type","data","err","console","error","response","unfollowAPI","unfollow","logInAPI","logIn","log","logOutAPI","logOut","watchLogOut","watchLogIn","watchUnfollow","watchFollow","userSaga"],"mappings":"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","sourcesContent":["import { all, call, delay, fork, put, takeLatest } from 'redux-saga/effects';\r\nimport {\r\n    LOG_IN_REQUEST,\r\n    LOG_IN_SUCCESS,\r\n    LOG_IN_FAILURE,\r\n    LOG_OUT_REQUEST,\r\n    LOG_OUT_SUCCESS,\r\n    LOG_OUT_FAILURE,\r\n    FOLLOW_FAILURE,\r\n    FOLLOW_REQUEST,\r\n    FOLLOW_SUCCESS,\r\n    UNFOLLOW_FAILURE,\r\n    UNFOLLOW_REQUEST,\r\n    UNFOLLOW_SUCCESS,\r\n\r\n} from '../reducers/user';\r\n\r\n\r\nfunction followAPI() {\r\n    return axios.post('/api/follow');\r\n}\r\nfunction* follow(action) {\r\n    try {\r\n        // const result = yield call(followAPI);\r\n        yield delay(1000);\r\n        yield put({\r\n            type: FOLLOW_SUCCESS,\r\n            data: action.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: FOLLOW_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction unfollowAPI() {\r\n    return axios.post('/api/unfollow');\r\n}\r\nfunction* unfollow(action) {\r\n    try {\r\n        // const result = yield call(unfollowAPI);\r\n        yield delay(1000);\r\n        yield put({\r\n            type: UNFOLLOW_SUCCESS,\r\n            data: action.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: UNFOLLOW_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction logInAPI(data) {\r\n    return axios.post('/api/login', data);\r\n}\r\n\r\nfunction* logIn(action) {\r\n    try {\r\n        console.log('saga logIn');\r\n        // const result = yield call(logInAPI);\r\n        yield delay(2000);\r\n        yield put({\r\n            type: LOG_IN_SUCCESS,\r\n            // data: { ...action.data, nickname: \"hyun\" },\r\n            data: action.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: LOG_IN_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction logOutAPI(data) {\r\n    return axios.post('/api/login', data);\r\n}\r\n\r\nfunction* logOut(action) {\r\n    try {\r\n        console.log('saga logout');\r\n        // const result = yield call(logInAPI);\r\n        yield delay(2000);\r\n        yield put({\r\n            type: LOG_OUT_SUCCESS,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: LOG_OUT_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchLogOut() {\r\n    console.log(\"saga watch 실행 check\");\r\n    yield takeLatest(LOG_OUT_REQUEST, logOut);\r\n}\r\nfunction* watchLogIn() {\r\n    console.log(\"saga watch 실행 check\");\r\n    yield takeLatest(LOG_IN_REQUEST, logIn);\r\n}\r\n\r\nfunction* watchUnfollow() {\r\n    yield takeLatest(UNFOLLOW_REQUEST, unfollow);\r\n}\r\nfunction* watchFollow() {\r\n    yield takeLatest(FOLLOW_REQUEST, follow);\r\n}\r\n\r\nexport default function* userSaga() {\r\n    yield all([\r\n        fork(watchLogIn),\r\n        fork(watchLogOut),\r\n        fork(watchFollow),\r\n        fork(watchUnfollow),\r\n    ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}