{"ast":null,"code":"var _jsxFileName = \"C:\\\\nodebird\\\\front\\\\pages\\\\profile.js\";\nimport AppLayout from \"../components/AppLayout\";\nimport Head from \"next/head\";\nimport NicknameEditForm from '../components/NicknameEditForm';\nimport FollowList from '../components/FollowList';\nimport React, { useEffect } from \"react\";\nimport { useSelector } from 'react-redux';\nimport Router from 'next/router'; // 팔로잉(내가 팔로잉 하는 사람)\n// 팔로워(나를 팔로잉 하는 사람)\n// const followingList = [\n//     { nickname: \"제로초\" },\n//     { nickname: \"장기효\" },\n//     { nickname: \"k덕배\" },\n// ];\n// const followerList = [\n//     { nickname: \"음바페\" },\n//     { nickname: \"호빵맨\" },\n//     { nickname: \"이순신\" },\n// ];\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Profile = () => {\n  const {\n    me\n  } = useSelector(state => state.user);\n  console.log(\"me : \", me);\n  useEffect(() => {\n    if (!(me && me.id)) {\n      Router.push('/');\n    }\n  }, [me && me.id]);\n\n  if (!me) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"\\uB0B4 \\uD504\\uB85C\\uD544 | NodeBird\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AppLayout, {\n      children: [/*#__PURE__*/_jsxDEV(NicknameEditForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FollowList, {\n        header: \"\\uD314\\uB85C\\uC789 \\uBAA9\\uB85D\",\n        data: me.Followings\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FollowList, {\n        header: \"\\uD314\\uB85C\\uC6CC \\uBAA9\\uB85D\",\n        data: me.Followers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  console.log(context.req.headers);\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    type: LOAD_USER_REQUEST\n  }); // 아래의 두줄은success 요청할때까지 기다리라는 뜻\n\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});\nexport default Profile;","map":{"version":3,"sources":["C:/nodebird/front/pages/profile.js"],"names":["AppLayout","Head","NicknameEditForm","FollowList","React","useEffect","useSelector","Router","Profile","me","state","user","console","log","id","push","Followings","Followers","getServerSideProps","wrapper","context","req","headers","cookie","axios","defaults","Cookie","store","dispatch","type","LOAD_USER_REQUEST","END","sagaTask","toPromise"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,yBAAtB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AAEA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,MAAP,MAAmB,aAAnB,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAClB,QAAM;AAAEC,IAAAA;AAAF,MAASH,WAAW,CAAEI,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAA1B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBJ,EAArB;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,EAAEI,EAAE,IAAIA,EAAE,CAACK,EAAX,CAAJ,EAAoB;AAChBP,MAAAA,MAAM,CAACQ,IAAP,CAAY,GAAZ;AACH;AACJ,GAJQ,EAIN,CAACN,EAAE,IAAIA,EAAE,CAACK,EAAV,CAJM,CAAT;;AAKA,MAAI,CAACL,EAAL,EAAS;AACL,WAAO,IAAP;AACH;;AAED,sBACI;AAAA,4BACI,QAAC,IAAD;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI,QAAC,SAAD;AAAA,8BACI,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,UAAD;AAAY,QAAA,MAAM,EAAC,iCAAnB;AAA4B,QAAA,IAAI,EAAEA,EAAE,CAACO;AAArC;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,UAAD;AAAY,QAAA,MAAM,EAAC,iCAAnB;AAA4B,QAAA,IAAI,EAAEP,EAAE,CAACQ;AAArC;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA,kBADJ;AAaH,CA1BD;;AA4BA,OAAO,MAAMC,kBAAkB,GAAGC,OAAO,CAACD,kBAAR,CAA2B,MAAOE,OAAP,IAAmB;AAE5ER,EAAAA,OAAO,CAACC,GAAR,CAAYO,OAAO,CAACC,GAAR,CAAYC,OAAxB;AACA,QAAMC,MAAM,GAAGH,OAAO,CAACC,GAAR,GAAcD,OAAO,CAACC,GAAR,CAAYC,OAAZ,CAAoBC,MAAlC,GAA2C,EAA1D;AACAC,EAAAA,KAAK,CAACC,QAAN,CAAeH,OAAf,CAAuBI,MAAvB,GAAgC,EAAhC;;AACA,MAAIN,OAAO,CAACC,GAAR,IAAeE,MAAnB,EAA2B;AACvBC,IAAAA,KAAK,CAACC,QAAN,CAAeH,OAAf,CAAuBI,MAAvB,GAAgCH,MAAhC;AACH;;AAEDH,EAAAA,OAAO,CAACO,KAAR,CAAcC,QAAd,CAAuB;AACnBC,IAAAA,IAAI,EAAEC;AADa,GAAvB,EAT4E,CAa5E;;AACAV,EAAAA,OAAO,CAACO,KAAR,CAAcC,QAAd,CAAuBG,GAAvB;AACA,QAAMX,OAAO,CAACO,KAAR,CAAcK,QAAd,CAAuBC,SAAvB,EAAN;AACH,CAhBiC,CAA3B;AAmBP,eAAezB,OAAf","sourcesContent":["import AppLayout from \"../components/AppLayout\";\r\nimport Head from \"next/head\";\r\nimport NicknameEditForm from '../components/NicknameEditForm';\r\nimport FollowList from '../components/FollowList';\r\n\r\nimport React, { useEffect } from \"react\";\r\nimport { useSelector } from 'react-redux';\r\nimport Router from 'next/router';\r\n\r\n\r\n// 팔로잉(내가 팔로잉 하는 사람)\r\n// 팔로워(나를 팔로잉 하는 사람)\r\n// const followingList = [\r\n//     { nickname: \"제로초\" },\r\n//     { nickname: \"장기효\" },\r\n//     { nickname: \"k덕배\" },\r\n// ];\r\n\r\n// const followerList = [\r\n//     { nickname: \"음바페\" },\r\n//     { nickname: \"호빵맨\" },\r\n//     { nickname: \"이순신\" },\r\n// ];\r\n\r\nconst Profile = () => {\r\n    const { me } = useSelector((state) => state.user);\r\n    console.log(\"me : \", me);\r\n\r\n    useEffect(() => {\r\n        if (!(me && me.id)) {\r\n            Router.push('/');\r\n        }\r\n    }, [me && me.id]);\r\n    if (!me) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Head>\r\n                <title>내 프로필 | NodeBird</title>\r\n            </Head>\r\n\r\n            <AppLayout>\r\n                <NicknameEditForm />\r\n                <FollowList header=\"팔로잉 목록\" data={me.Followings} />\r\n                <FollowList header=\"팔로워 목록\" data={me.Followers} />\r\n            </AppLayout>\r\n        </>\r\n    );\r\n};\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n\r\n    console.log(context.req.headers);\r\n    const cookie = context.req ? context.req.headers.cookie : '';\r\n    axios.defaults.headers.Cookie = '';\r\n    if (context.req && cookie) {\r\n        axios.defaults.headers.Cookie = cookie;\r\n    }\r\n\r\n    context.store.dispatch({\r\n        type: LOAD_USER_REQUEST,\r\n    });\r\n\r\n    // 아래의 두줄은success 요청할때까지 기다리라는 뜻\r\n    context.store.dispatch(END);\r\n    await context.store.sagaTask.toPromise();\r\n});\r\n\r\n\r\nexport default Profile;\r\n\r\n"]},"metadata":{},"sourceType":"module"}