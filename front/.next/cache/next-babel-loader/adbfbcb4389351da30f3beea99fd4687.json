{"ast":null,"code":"import { all, call, delay, fork, put, takeLatest } from 'redux-saga/effects';\nimport { LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE, FOLLOW_FAILURE, FOLLOW_REQUEST, FOLLOW_SUCCESS, UNFOLLOW_FAILURE, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE, LOAD_USER_FAILURE, LOAD_USER_REQUEST, LOAD_USER_SUCCESS } from '../reducers/user';\nimport axios from \"axios\";\n\nfunction signUpAPI(data) {\n  // console.log(\"saga signUpAPI 실행 확인 회원 가입 정보는 => \", data);\n  return axios.post('/user', data);\n}\n\nfunction* signUp(action) {\n  try {\n    // yield delay(1000);\n    const result = yield call(signUpAPI, action.data);\n    console.log(\"회원 가입 응답 result : \", result);\n    yield put({\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction followAPI() {\n  return axios.post('/api/follow');\n}\n\nfunction* follow(action) {\n  try {\n    // const result = yield call(followAPI);\n    yield delay(1000);\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction unfollowAPI() {\n  return axios.post('/api/unfollow');\n}\n\nfunction* unfollow(action) {\n  try {\n    // const result = yield call(unfollowAPI);\n    yield delay(1000);\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction logInAPI(data) {\n  console.log(\"로그인 데이터 to 서버 from saga: \", data); // return axios.post('/api/login', data);\n\n  return axios.post('/user/login', data);\n}\n\nfunction* logIn(action) {\n  try {\n    // yield delay(2000);\n    const result = yield call(logInAPI, action.data);\n    console.log(\"result.data(from server) : \", result.data);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      // data: action.data,\n      data: result.data\n    });\n  } catch (err) {\n    console.log(\"로그인 에러 확인 from saga : \", err);\n    console.error(err);\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction logOutAPI(data) {\n  // return axios.post('/api/login', data);\n  return axios.post('/user/logout', data);\n}\n\nfunction* logOut(action) {\n  try {\n    console.log('saga logout'); // yield delay(2000);\n\n    const result = yield call(logOutAPI);\n    yield put({\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadUserAPI() {\n  return axios.get('/user');\n}\n\nfunction* loadUser(action) {\n  try {\n    const result = yield call(loadUserAPI, action.data);\n    yield put({\n      type: LOAD_USER_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_USER_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchLogOut() {\n  console.log(\"saga watch 실행 check\");\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchLogIn() {\n  console.log(\"saga watch 실행 check\");\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchUnfollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\n}\n\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\nfunction* watchLoadUser() {\n  yield takeLatest(LOAD_USER_REQUEST, loadUser);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogIn), fork(watchLogOut), fork(watchFollow), fork(watchUnfollow), fork(watchSignUp), fork(watchLoadUser)]);\n}","map":{"version":3,"sources":["C:/prepare/front/sagas/user.js"],"names":["all","call","delay","fork","put","takeLatest","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","FOLLOW_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","UNFOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","LOAD_USER_FAILURE","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","axios","signUpAPI","data","post","signUp","action","result","console","log","type","err","error","response","followAPI","follow","unfollowAPI","unfollow","logInAPI","logIn","logOutAPI","logOut","loadUserAPI","get","loadUser","watchLogOut","watchLogIn","watchUnfollow","watchFollow","watchSignUp","watchLoadUser","userSaga"],"mappings":"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","sourcesContent":["import { all, call, delay, fork, put, takeLatest } from 'redux-saga/effects';\r\nimport {\r\n    LOG_IN_REQUEST,\r\n    LOG_IN_SUCCESS,\r\n    LOG_IN_FAILURE,\r\n    LOG_OUT_REQUEST,\r\n    LOG_OUT_SUCCESS,\r\n    LOG_OUT_FAILURE,\r\n    FOLLOW_FAILURE,\r\n    FOLLOW_REQUEST,\r\n    FOLLOW_SUCCESS,\r\n    UNFOLLOW_FAILURE,\r\n    UNFOLLOW_REQUEST,\r\n    UNFOLLOW_SUCCESS,\r\n    SIGN_UP_REQUEST,\r\n    SIGN_UP_SUCCESS,\r\n    SIGN_UP_FAILURE,\r\n    LOAD_USER_FAILURE,\r\n    LOAD_USER_REQUEST,\r\n    LOAD_USER_SUCCESS,\r\n} from '../reducers/user';\r\n\r\nimport axios from \"axios\";\r\n\r\n\r\nfunction signUpAPI(data) {\r\n    // console.log(\"saga signUpAPI 실행 확인 회원 가입 정보는 => \", data);\r\n    return axios.post('/user', data);\r\n}\r\n\r\nfunction* signUp(action) {\r\n    try {\r\n        // yield delay(1000);\r\n        const result = yield call(signUpAPI, action.data);\r\n        console.log(\"회원 가입 응답 result : \", result);\r\n        yield put({\r\n            type: SIGN_UP_SUCCESS,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: SIGN_UP_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction followAPI() {\r\n    return axios.post('/api/follow');\r\n}\r\nfunction* follow(action) {\r\n    try {\r\n        // const result = yield call(followAPI);\r\n        yield delay(1000);\r\n        yield put({\r\n            type: FOLLOW_SUCCESS,\r\n            data: action.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: FOLLOW_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction unfollowAPI() {\r\n    return axios.post('/api/unfollow');\r\n}\r\nfunction* unfollow(action) {\r\n    try {\r\n        // const result = yield call(unfollowAPI);\r\n        yield delay(1000);\r\n        yield put({\r\n            type: UNFOLLOW_SUCCESS,\r\n            data: action.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: UNFOLLOW_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction logInAPI(data) {\r\n    console.log(\"로그인 데이터 to 서버 from saga: \", data);\r\n    // return axios.post('/api/login', data);\r\n    return axios.post('/user/login', data);\r\n}\r\n\r\nfunction* logIn(action) {\r\n    try {\r\n        // yield delay(2000);\r\n        const result = yield call(logInAPI, action.data);\r\n        console.log(\"result.data(from server) : \", result.data);\r\n\r\n        yield put({\r\n            type: LOG_IN_SUCCESS,\r\n            // data: action.data,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.log(\"로그인 에러 확인 from saga : \",err);\r\n        console.error(err);\r\n        yield put({\r\n            type: LOG_IN_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction logOutAPI(data) {\r\n    // return axios.post('/api/login', data);\r\n    return axios.post('/user/logout', data);\r\n}\r\n\r\nfunction* logOut(action) {\r\n    try {\r\n        console.log('saga logout');\r\n        // yield delay(2000);\r\n        const result = yield call(logOutAPI);\r\n        yield put({\r\n            type: LOG_OUT_SUCCESS,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: LOG_OUT_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction loadUserAPI() {\r\n    return axios.get('/user');\r\n}\r\nfunction* loadUser(action) {\r\n    try {\r\n        const result = yield call(loadUserAPI, action.data);\r\n        yield put({\r\n            type: LOAD_USER_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: LOAD_USER_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchLogOut() {\r\n    console.log(\"saga watch 실행 check\");\r\n    yield takeLatest(LOG_OUT_REQUEST, logOut);\r\n}\r\nfunction* watchLogIn() {\r\n    console.log(\"saga watch 실행 check\");\r\n    yield takeLatest(LOG_IN_REQUEST, logIn);\r\n}\r\n\r\nfunction* watchUnfollow() {\r\n    yield takeLatest(UNFOLLOW_REQUEST, unfollow);\r\n}\r\nfunction* watchFollow() {\r\n    yield takeLatest(FOLLOW_REQUEST, follow);\r\n}\r\n\r\nfunction* watchSignUp() {\r\n    yield takeLatest(SIGN_UP_REQUEST, signUp);\r\n}\r\n\r\nfunction* watchLoadUser() {\r\n    yield takeLatest(LOAD_USER_REQUEST, loadUser);\r\n}\r\n\r\nexport default function* userSaga() {\r\n    yield all([\r\n        fork(watchLogIn),\r\n        fork(watchLogOut),\r\n        fork(watchFollow),\r\n        fork(watchUnfollow),\r\n        fork(watchSignUp),\r\n        fork(watchLoadUser),\r\n    ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}