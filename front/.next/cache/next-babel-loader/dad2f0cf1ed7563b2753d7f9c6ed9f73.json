{"ast":null,"code":"var _jsxFileName = \"C:\\\\prepare\\\\front\\\\components\\\\PostCard.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from \"react\";\nimport { RetweetOutlined, HeartTwoTone, HeartOutlined, MessageOutlined, EllipsisOutlined } from '@ant-design/icons';\nimport CommentForm from './CommentForm';\nimport PostImages from \"./PostImages\";\nimport { Card, Avatar, List, Comment, Popover, Button } from 'antd';\nimport PostCardContent from \"../components/PostCardContent\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { REMOVE_POST_REQUEST } from '../reducers/post';\nimport FollowButton from './FollowButton';\nimport CommentRow from './CommentRow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar PostCard = function PostCard(_ref) {\n  _s();\n\n  var post = _ref.post;\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      removePostLoading = _useSelector.removePostLoading;\n\n  var _useState = useState(false),\n      commentFormOpened = _useState[0],\n      setCommentFormOpened = _useState[1];\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector2.me;\n\n  var id = me && me.id; // const [liked, setLiked] = useState(false);\n\n  var liked = post.Likers.find(function (v) {\n    return v.id === id;\n  });\n  var onToggleComment = useCallback(function () {\n    setCommentFormOpened(function (prev) {\n      return !prev;\n    });\n  }, []);\n  var onRemovePost = useCallback(function () {\n    dispatch({\n      type: REMOVE_POST_REQUEST,\n      data: post.id\n    });\n  }, []); // const onToggleLike = useCallback(() => {\n  //     setLiked((prev) => !prev);\n  // }, []);\n\n  var onLike = useCallback(function () {\n    if (!id) {\n      return alert('로그인이 필요합니다.');\n    }\n\n    return dispatch({\n      type: LIKE_POST_REQUEST,\n      data: post.id\n    });\n  }, [id]);\n  var onUnlike = useCallback(function () {\n    if (!id) {\n      return alert('로그인이 필요합니다.');\n    }\n\n    return dispatch({\n      type: UNLIKE_POST_REQUEST,\n      data: post.id\n    });\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        width: \"100%\"\n      } // cover={post.Images[0] && <img alt=\"example\" src={post.Images[0].src} />}\n      ,\n      cover: post.Images[0] && /*#__PURE__*/_jsxDEV(PostImages, {\n        images: post.Images\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 42\n      }, _this),\n      actions: [/*#__PURE__*/_jsxDEV(RetweetOutlined, {}, \"retweet\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, _this), // <HeartOutlined key=\"heart\" onClick=\"\" />,\n      // liked\n      //     ? <HeartTwoTone twoToneColor=\"#eb2f96\" key=\"heart\" onClick={onToggleLike} />\n      //     : <HeartOutlined key=\"heart\" onClick={onToggleLike} />,\n      liked ? /*#__PURE__*/_jsxDEV(HeartTwoTone, {\n        twoToneColor: \"#eb2f96\",\n        onClick: onUnlike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 27\n      }, _this) : /*#__PURE__*/_jsxDEV(HeartOutlined, {\n        onClick: onLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 27\n      }, _this), /*#__PURE__*/_jsxDEV(MessageOutlined, {\n        onClick: onToggleComment\n      }, \"message\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, _this), /*#__PURE__*/_jsxDEV(Popover, {\n        content: /*#__PURE__*/_jsxDEV(Button.Group, {\n          children: id && post.User.id === id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              children: \"\\uC218\\uC815\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 45\n            }, _this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"danger\",\n              loading: removePostLoading,\n              onClick: onRemovePost,\n              children: \"\\uC0AD\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 45\n            }, _this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n            children: \"\\uC2E0\\uACE0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 39\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 29\n        }, _this),\n        children: /*#__PURE__*/_jsxDEV(EllipsisOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 25\n        }, _this)\n      }, \"ellipsis\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, _this)],\n      extra: /*#__PURE__*/_jsxDEV(FollowButton, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 24\n      }, _this),\n      children: /*#__PURE__*/_jsxDEV(Card.Meta, {\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          children: post.User.nickname[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 29\n        }, _this),\n        description: /*#__PURE__*/_jsxDEV(PostCardContent, {\n          postData: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 34\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, _this), \",\", commentFormOpened && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(CommentForm, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }, _this), /*#__PURE__*/_jsxDEV(List, {\n        header: \"\".concat(post.Comments ? post.Comments.length : 0, \" \\uB313\\uAE00\"),\n        itemLayout: \"horizontal\",\n        dataSource: post.Comments || [],\n        renderItem: function renderItem(item) {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(CommentRow, {\n              comment: item,\n              PostId: post.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 33\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 29\n          }, _this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }, _this)]\n    }, void 0, true)]\n  }, void 0, true);\n};\n\n_s(PostCard, \"kK9Bx7OPxvYbnonkNuOSd7u0Qcs=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = PostCard;\nexport default PostCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"sources":["C:/prepare/front/components/PostCard.js"],"names":["React","useState","useCallback","RetweetOutlined","HeartTwoTone","HeartOutlined","MessageOutlined","EllipsisOutlined","CommentForm","PostImages","Card","Avatar","List","Comment","Popover","Button","PostCardContent","useSelector","useDispatch","REMOVE_POST_REQUEST","FollowButton","CommentRow","PostCard","post","dispatch","state","removePostLoading","commentFormOpened","setCommentFormOpened","user","me","id","liked","Likers","find","v","onToggleComment","prev","onRemovePost","type","data","onLike","alert","LIKE_POST_REQUEST","onUnlike","UNLIKE_POST_REQUEST","width","Images","User","nickname","content","Comments","length","item"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from \"react\";\r\nimport { RetweetOutlined, HeartTwoTone, HeartOutlined, MessageOutlined, EllipsisOutlined } from '@ant-design/icons';\r\nimport CommentForm from './CommentForm';\r\nimport PostImages from \"./PostImages\";\r\n\r\nimport { Card, Avatar, List, Comment, Popover, Button } from 'antd';\r\nimport PostCardContent from \"../components/PostCardContent\";\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { REMOVE_POST_REQUEST } from '../reducers/post';\r\nimport FollowButton from './FollowButton';\r\nimport CommentRow from './CommentRow';\r\n\r\n\r\nconst PostCard = ({ post }) => {\r\n    const dispatch = useDispatch();\r\n    const { removePostLoading } = useSelector((state) => state.post);\r\n    const [commentFormOpened, setCommentFormOpened] = useState(false);\r\n\r\n    const { me } = useSelector((state) => state.user);\r\n    const id = me && me.id;\r\n    // const [liked, setLiked] = useState(false);\r\n    const liked = post.Likers.find((v) => v.id === id);\r\n\r\n\r\n\r\n    const onToggleComment = useCallback(() => {\r\n        setCommentFormOpened((prev) => !prev);\r\n    }, []);\r\n\r\n    const onRemovePost = useCallback(() => {\r\n        dispatch({\r\n            type: REMOVE_POST_REQUEST,\r\n            data: post.id,\r\n        });\r\n    }, []);\r\n\r\n    // const onToggleLike = useCallback(() => {\r\n    //     setLiked((prev) => !prev);\r\n    // }, []);\r\n\r\n    const onLike = useCallback(() => {\r\n        if (!id) {\r\n            return alert('로그인이 필요합니다.');\r\n        }\r\n        return dispatch({\r\n            type: LIKE_POST_REQUEST,\r\n            data: post.id,\r\n        });\r\n    }, [id]);\r\n\r\n    const onUnlike = useCallback(() => {\r\n        if (!id) {\r\n            return alert('로그인이 필요합니다.');\r\n        }\r\n        return dispatch({\r\n            type: UNLIKE_POST_REQUEST,\r\n            data: post.id,\r\n        });\r\n    }, [id]);\r\n\r\n    return (\r\n        <>\r\n            <Card\r\n                style={{ width: \"100%\" }}\r\n                // cover={post.Images[0] && <img alt=\"example\" src={post.Images[0].src} />}\r\n                cover={post.Images[0] && <PostImages images={post.Images} />}\r\n                actions={[\r\n                    <RetweetOutlined key=\"retweet\" />,\r\n                    // <HeartOutlined key=\"heart\" onClick=\"\" />,\r\n                    // liked\r\n                    //     ? <HeartTwoTone twoToneColor=\"#eb2f96\" key=\"heart\" onClick={onToggleLike} />\r\n                    //     : <HeartOutlined key=\"heart\" onClick={onToggleLike} />,\r\n                    liked\r\n                        ? <HeartTwoTone twoToneColor=\"#eb2f96\" key=\"heart\" onClick={onUnlike} />\r\n                        : <HeartOutlined key=\"heart\" onClick={onLike} />,\r\n\r\n                    <MessageOutlined key=\"message\" onClick={onToggleComment} />,\r\n\r\n                    <Popover\r\n                        key=\"ellipsis\"\r\n                        content={(\r\n                            <Button.Group>\r\n                                {id && post.User.id === id\r\n                                    ? (\r\n                                        <>\r\n                                            <Button>수정</Button>\r\n                                            <Button type=\"danger\" loading={removePostLoading} onClick={onRemovePost}>삭제</Button>\r\n                                        </>\r\n                                    )\r\n                                    : <Button>신고</Button>}\r\n                            </Button.Group>\r\n                        )}\r\n                    >\r\n                        <EllipsisOutlined />\r\n                    </Popover>,\r\n                ]}\r\n                extra={< FollowButton post={post} />}\r\n            >\r\n                <Card.Meta\r\n                    avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\r\n                    description={<PostCardContent postData={post.content} />}\r\n                />\r\n            </Card>,\r\n\r\n            {commentFormOpened && ( \r\n                <>\r\n                    <CommentForm post={post} />\r\n                    <List\r\n                        header={`${post.Comments ? post.Comments.length : 0} 댓글`}\r\n                        itemLayout=\"horizontal\"\r\n                        dataSource={post.Comments || []}\r\n                        renderItem={(item) => (\r\n                            <li>\r\n                                <CommentRow comment={item} PostId = {post.id} />\r\n                            </li>\r\n                        )}\r\n                    />\r\n                </>\r\n            )}\r\n\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PostCard;\r\n\r\n"]},"metadata":{},"sourceType":"module"}