{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(loadHashtagPosts),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(searchPosts),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(retweet),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(addPost),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(removePost),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(addComment),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(loadPosts),\n    _marked8 = /*#__PURE__*/_regeneratorRuntime.mark(uploadImages),\n    _marked9 = /*#__PURE__*/_regeneratorRuntime.mark(deleteComment),\n    _marked10 = /*#__PURE__*/_regeneratorRuntime.mark(likePost),\n    _marked11 = /*#__PURE__*/_regeneratorRuntime.mark(unlikePost),\n    _marked12 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoadPosts),\n    _marked13 = /*#__PURE__*/_regeneratorRuntime.mark(watchRemovePost),\n    _marked14 = /*#__PURE__*/_regeneratorRuntime.mark(watchAddPost),\n    _marked15 = /*#__PURE__*/_regeneratorRuntime.mark(watchAddComment),\n    _marked16 = /*#__PURE__*/_regeneratorRuntime.mark(watchUploadImages),\n    _marked17 = /*#__PURE__*/_regeneratorRuntime.mark(watchDeleteComment),\n    _marked18 = /*#__PURE__*/_regeneratorRuntime.mark(watchLikePost),\n    _marked19 = /*#__PURE__*/_regeneratorRuntime.mark(watchUnlikePost),\n    _marked20 = /*#__PURE__*/_regeneratorRuntime.mark(watchRetweet),\n    _marked21 = /*#__PURE__*/_regeneratorRuntime.mark(watchSearchPosts),\n    _marked22 = /*#__PURE__*/_regeneratorRuntime.mark(postSaga);\n\nimport { all, delay, fork, put, takeLatest, throttle, call } from 'redux-saga/effects';\nimport axios from 'axios'; // import shortId from 'shortid';\n\nimport { ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE, REMOVE_POST_REQUEST, REMOVE_POST_SUCCESS, REMOVE_POST_FAILURE, LOAD_POSTS_REQUEST, LOAD_POSTS_SUCCESS, LOAD_POSTS_FAILURE, UPLOAD_IMAGES_REQUEST, UPLOAD_IMAGES_SUCCESS, UPLOAD_IMAGES_FAILURE, DELETE_COMMENT_REQUEST, DELETE_COMMENT_SUCCESS, DELETE_COMMENT_FAILURE, LIKE_POST_REQUEST, LIKE_POST_SUCCESS, LIKE_POST_FAILURE, UNLIKE_POST_REQUEST, UNLIKE_POST_SUCCESS, UNLIKE_POST_FAILURE, RETWEET_REQUEST, RETWEET_SUCCESS, RETWEET_FAILURE, SEARCH_POSTS_REQUEST, SEARCH_POSTS_SUCCESS, SEARCH_POSTS_FAILURE, LOAD_HASHTAG_POSTS_REQUEST, LOAD_HASHTAG_POSTS_SUCCESS, LOAD_POST_FAILURE } from '../reducers/post';\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from '../reducers/user'; // add your api 1122\n\nfunction loadHashtagPostsAPI(data, lastId) {\n  return axios.get(\"/hashtag/\".concat(encodeURIComponent(data), \"?lastId=\").concat(lastId || 0));\n}\n\nfunction loadHashtagPosts(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadHashtagPosts$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(loadHashtagPostsAPI, action.data, action.lastId);\n\n        case 3:\n          result = _context.sent;\n          _context.next = 6;\n          return put({\n            type: LOAD_HASHTAG_POSTS_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context.next = 13;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          console.error(_context.t0);\n          _context.next = 13;\n          return put({\n            type: LOAD_HASHTAG_POSTS_FAILURE,\n            data: _context.t0.response.data\n          });\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 8]]);\n}\n\nfunction SearchPostsAPI(data) {\n  console.log('data : ', data);\n  return axios.get(\"/search/posts/\".concat(data.search_word, \"/\").concat(data.lastId || 0, \"?\"));\n}\n\n_c = SearchPostsAPI;\n\nfunction searchPosts(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function searchPosts$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          console.log(\"action.data : \", action.data);\n          _context2.next = 4;\n          return call(SearchPostsAPI, action.data);\n\n        case 4:\n          result = _context2.sent;\n          console.log(\"result for SearchPostsAPI : \", result);\n          console.log(\"result for SearchPostsAPI : \", result.data.length);\n          _context2.next = 9;\n          return put({\n            type: SEARCH_POSTS_SUCCESS,\n            data: result.data\n          });\n\n        case 9:\n          _context2.next = 17;\n          break;\n\n        case 11:\n          _context2.prev = 11;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.log(\"error : \", _context2.t0);\n          console.error(_context2.t0);\n          _context2.next = 17;\n          return put({\n            type: SEARCH_POSTS_FAILURE,\n            data: _context2.t0.response.data\n          });\n\n        case 17:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 11]]);\n}\n\nfunction retweetAPI(data) {\n  return axios.post(\"/post/\".concat(data, \"/retweet\"));\n}\n\nfunction retweet(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function retweet$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return call(retweetAPI, action.data);\n\n        case 3:\n          result = _context3.sent;\n          _context3.next = 6;\n          return put({\n            type: RETWEET_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context3.next = 13;\n          break;\n\n        case 8:\n          _context3.prev = 8;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.error(_context3.t0);\n          _context3.next = 13;\n          return put({\n            type: RETWEET_FAILURE,\n            error: _context3.t0.response.data\n          });\n\n        case 13:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 8]]);\n}\n\nfunction addPostAPI(data) {\n  // console.log(\"data for posting at saga : \", data);\n  return axios.post('/post', data);\n}\n\nfunction addPost(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function addPost$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _context4.next = 3;\n          return call(addPostAPI, action.data);\n\n        case 3:\n          result = _context4.sent;\n          console.log(\"result for posting : \", result);\n          _context4.next = 7;\n          return put({\n            type: ADD_POST_SUCCESS,\n            data: result.data\n          });\n\n        case 7:\n          _context4.next = 9;\n          return put({\n            type: ADD_POST_TO_ME,\n            data: result.data.id\n          });\n\n        case 9:\n          _context4.next = 16;\n          break;\n\n        case 11:\n          _context4.prev = 11;\n          _context4.t0 = _context4[\"catch\"](0);\n          console.error(_context4.t0);\n          _context4.next = 16;\n          return put({\n            type: ADD_POST_FAILURE,\n            data: _context4.t0.response.data\n          });\n\n        case 16:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, null, [[0, 11]]);\n}\n\nfunction removePostAPI(data) {\n  // return axios.delete('/api/post', data);\n  return axios[\"delete\"](\"/post/\".concat(data));\n}\n\nfunction removePost(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function removePost$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return call(removePostAPI, action.data);\n\n        case 3:\n          result = _context5.sent;\n          console.log(\"result from backend, postId 확인 하기 : \", result.data);\n          _context5.next = 7;\n          return put({\n            type: REMOVE_POST_SUCCESS,\n            // data: action.data,\n            data: result.data\n          });\n\n        case 7:\n          _context5.next = 9;\n          return put({\n            type: REMOVE_POST_OF_ME,\n            // data: action.data,\n            data: result.data\n          });\n\n        case 9:\n          _context5.next = 16;\n          break;\n\n        case 11:\n          _context5.prev = 11;\n          _context5.t0 = _context5[\"catch\"](0);\n          console.error(_context5.t0);\n          _context5.next = 16;\n          return put({\n            type: REMOVE_POST_FAILURE,\n            data: _context5.t0.response.data\n          });\n\n        case 16:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 11]]);\n}\n\nfunction addCommentAPI(data) {\n  console.log(\"data from saga for add comment : \", data);\n  return axios.post(\"/post/\".concat(data.postId, \"/comment\"), data);\n}\n\nfunction addComment(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function addComment$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          console.log(\"addComent action : \", action.data);\n          _context6.prev = 1;\n          _context6.next = 4;\n          return call(addCommentAPI, action.data);\n\n        case 4:\n          result = _context6.sent;\n          console.log(\"result(response from backend from insert comment): \", result);\n          _context6.next = 8;\n          return put({\n            type: ADD_COMMENT_SUCCESS,\n            data: result.data\n          });\n\n        case 8:\n          _context6.next = 15;\n          break;\n\n        case 10:\n          _context6.prev = 10;\n          _context6.t0 = _context6[\"catch\"](1);\n          console.log(\"댓글 에러 : \", _context6.t0);\n          _context6.next = 15;\n          return put({\n            type: ADD_COMMENT_FAILURE,\n            data: _context6.t0.response.data\n          });\n\n        case 15:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6, null, [[1, 10]]);\n}\n\nfunction loadPostsAPI(lastId) {\n  // return axios.get('/posts', data);\n  return axios.get(\"/posts?lastId=\".concat(lastId || 0));\n}\n\nfunction loadPosts(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadPosts$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.prev = 0;\n          _context7.next = 3;\n          return call(loadPostsAPI, action.lastId);\n\n        case 3:\n          result = _context7.sent;\n          console.log(\"result for loadPostsAPI : \", result);\n          console.log(\"result for loadPostsAPI : \", result.data.length);\n          _context7.next = 8;\n          return put({\n            type: LOAD_POSTS_SUCCESS,\n            data: result.data\n          });\n\n        case 8:\n          _context7.next = 15;\n          break;\n\n        case 10:\n          _context7.prev = 10;\n          _context7.t0 = _context7[\"catch\"](0);\n          console.error(_context7.t0);\n          _context7.next = 15;\n          return put({\n            type: LOAD_POSTS_FAILURE,\n            data: _context7.t0.response.data\n          });\n\n        case 15:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7, null, [[0, 10]]);\n}\n\nfunction uploadImagesAPI(data) {\n  console.log(\"data 확인 from saga : \", data);\n  return axios.post('/post/images', data);\n}\n\nfunction uploadImages(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function uploadImages$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.prev = 0;\n          _context8.next = 3;\n          return call(uploadImagesAPI, action.data);\n\n        case 3:\n          result = _context8.sent;\n          _context8.next = 6;\n          return put({\n            type: UPLOAD_IMAGES_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context8.next = 13;\n          break;\n\n        case 8:\n          _context8.prev = 8;\n          _context8.t0 = _context8[\"catch\"](0);\n          console.error(_context8.t0);\n          _context8.next = 13;\n          return put({\n            type: UPLOAD_IMAGES_FAILURE,\n            error: _context8.t0.response.data\n          });\n\n        case 13:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8, null, [[0, 8]]);\n}\n\nfunction deleteCommentAPI(data) {\n  console.log(\"data 확인 from saga : \", data);\n  return axios[\"delete\"](\"post/comment/\".concat(data.PostId, \"/\").concat(data.CommentId));\n}\n\nfunction deleteComment(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function deleteComment$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.prev = 0;\n          _context9.next = 3;\n          return call(deleteCommentAPI, action.data);\n\n        case 3:\n          result = _context9.sent;\n          console.log(\"삭제에 대한 응답 : \", result.data);\n          _context9.next = 7;\n          return put({\n            type: DELETE_COMMENT_SUCCESS,\n            // 라우터에서 댓글 삭제한뒤 PostId와 CommentId 리턴 \n            data: result.data\n          });\n\n        case 7:\n          _context9.next = 14;\n          break;\n\n        case 9:\n          _context9.prev = 9;\n          _context9.t0 = _context9[\"catch\"](0);\n          console.error(_context9.t0);\n          _context9.next = 14;\n          return put({\n            type: DELETE_COMMENT_FAILURE,\n            error: _context9.t0.response.data\n          });\n\n        case 14:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9, null, [[0, 9]]);\n}\n\nfunction likePostAPI(data) {\n  return axios.patch(\"/post/\".concat(data, \"/like\"));\n}\n\nfunction likePost(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function likePost$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.prev = 0;\n          _context10.next = 3;\n          return call(likePostAPI, action.data);\n\n        case 3:\n          result = _context10.sent;\n          _context10.next = 6;\n          return put({\n            type: LIKE_POST_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context10.next = 13;\n          break;\n\n        case 8:\n          _context10.prev = 8;\n          _context10.t0 = _context10[\"catch\"](0);\n          console.error(_context10.t0);\n          _context10.next = 13;\n          return put({\n            type: LIKE_POST_FAILURE,\n            error: _context10.t0.response.data\n          });\n\n        case 13:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _marked10, null, [[0, 8]]);\n}\n\nfunction unlikePostAPI(data) {\n  return axios[\"delete\"](\"/post/\".concat(data, \"/like\"));\n}\n\nfunction unlikePost(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function unlikePost$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.prev = 0;\n          _context11.next = 3;\n          return call(unlikePostAPI, action.data);\n\n        case 3:\n          result = _context11.sent;\n          _context11.next = 6;\n          return put({\n            type: UNLIKE_POST_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context11.next = 13;\n          break;\n\n        case 8:\n          _context11.prev = 8;\n          _context11.t0 = _context11[\"catch\"](0);\n          console.error(_context11.t0);\n          _context11.next = 13;\n          return put({\n            type: UNLIKE_POST_FAILURE,\n            error: _context11.t0.response.data\n          });\n\n        case 13:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, _marked11, null, [[0, 8]]);\n}\n\nfunction watchLoadPosts() {\n  return _regeneratorRuntime.wrap(function watchLoadPosts$(_context12) {\n    while (1) {\n      switch (_context12.prev = _context12.next) {\n        case 0:\n          _context12.next = 2;\n          return throttle(5000, LOAD_POSTS_REQUEST, loadPosts);\n\n        case 2:\n        case \"end\":\n          return _context12.stop();\n      }\n    }\n  }, _marked12);\n}\n\nfunction watchRemovePost() {\n  return _regeneratorRuntime.wrap(function watchRemovePost$(_context13) {\n    while (1) {\n      switch (_context13.prev = _context13.next) {\n        case 0:\n          _context13.next = 2;\n          return takeLatest(REMOVE_POST_REQUEST, removePost);\n\n        case 2:\n        case \"end\":\n          return _context13.stop();\n      }\n    }\n  }, _marked13);\n}\n\nfunction watchAddPost() {\n  return _regeneratorRuntime.wrap(function watchAddPost$(_context14) {\n    while (1) {\n      switch (_context14.prev = _context14.next) {\n        case 0:\n          _context14.next = 2;\n          return takeLatest(ADD_POST_REQUEST, addPost);\n\n        case 2:\n        case \"end\":\n          return _context14.stop();\n      }\n    }\n  }, _marked14);\n}\n\nfunction watchAddComment() {\n  return _regeneratorRuntime.wrap(function watchAddComment$(_context15) {\n    while (1) {\n      switch (_context15.prev = _context15.next) {\n        case 0:\n          _context15.next = 2;\n          return takeLatest(ADD_COMMENT_REQUEST, addComment);\n\n        case 2:\n        case \"end\":\n          return _context15.stop();\n      }\n    }\n  }, _marked15);\n}\n\nfunction watchUploadImages() {\n  return _regeneratorRuntime.wrap(function watchUploadImages$(_context16) {\n    while (1) {\n      switch (_context16.prev = _context16.next) {\n        case 0:\n          _context16.next = 2;\n          return takeLatest(UPLOAD_IMAGES_REQUEST, uploadImages);\n\n        case 2:\n        case \"end\":\n          return _context16.stop();\n      }\n    }\n  }, _marked16);\n}\n\nfunction watchDeleteComment() {\n  return _regeneratorRuntime.wrap(function watchDeleteComment$(_context17) {\n    while (1) {\n      switch (_context17.prev = _context17.next) {\n        case 0:\n          _context17.next = 2;\n          return takeLatest(DELETE_COMMENT_REQUEST, deleteComment);\n\n        case 2:\n        case \"end\":\n          return _context17.stop();\n      }\n    }\n  }, _marked17);\n}\n\nfunction watchLikePost() {\n  return _regeneratorRuntime.wrap(function watchLikePost$(_context18) {\n    while (1) {\n      switch (_context18.prev = _context18.next) {\n        case 0:\n          _context18.next = 2;\n          return takeLatest(LIKE_POST_REQUEST, likePost);\n\n        case 2:\n        case \"end\":\n          return _context18.stop();\n      }\n    }\n  }, _marked18);\n}\n\nfunction watchUnlikePost() {\n  return _regeneratorRuntime.wrap(function watchUnlikePost$(_context19) {\n    while (1) {\n      switch (_context19.prev = _context19.next) {\n        case 0:\n          _context19.next = 2;\n          return takeLatest(UNLIKE_POST_REQUEST, unlikePost);\n\n        case 2:\n        case \"end\":\n          return _context19.stop();\n      }\n    }\n  }, _marked19);\n}\n\nfunction watchRetweet() {\n  return _regeneratorRuntime.wrap(function watchRetweet$(_context20) {\n    while (1) {\n      switch (_context20.prev = _context20.next) {\n        case 0:\n          _context20.next = 2;\n          return takeLatest(RETWEET_REQUEST, retweet);\n\n        case 2:\n        case \"end\":\n          return _context20.stop();\n      }\n    }\n  }, _marked20);\n}\n\nfunction watchSearchPosts() {\n  return _regeneratorRuntime.wrap(function watchSearchPosts$(_context21) {\n    while (1) {\n      switch (_context21.prev = _context21.next) {\n        case 0:\n          _context21.next = 2;\n          return takeLatest(SEARCH_POSTS_REQUEST, searchPosts);\n\n        case 2:\n        case \"end\":\n          return _context21.stop();\n      }\n    }\n  }, _marked21);\n}\n\nexport default function postSaga() {\n  return _regeneratorRuntime.wrap(function postSaga$(_context22) {\n    while (1) {\n      switch (_context22.prev = _context22.next) {\n        case 0:\n          _context22.next = 2;\n          return all([fork(watchAddPost), fork(watchAddComment), fork(watchRemovePost), fork(watchLoadPosts), fork(watchUploadImages), fork(watchDeleteComment), fork(watchLikePost), fork(watchUnlikePost), fork(watchRetweet), fork(watchSearchPosts)]);\n\n        case 2:\n        case \"end\":\n          return _context22.stop();\n      }\n    }\n  }, _marked22);\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchPostsAPI\");","map":{"version":3,"sources":["C:/nodebird/front/sagas/post.js"],"names":["loadHashtagPosts","searchPosts","retweet","addPost","removePost","addComment","loadPosts","uploadImages","deleteComment","likePost","unlikePost","watchLoadPosts","watchRemovePost","watchAddPost","watchAddComment","watchUploadImages","watchDeleteComment","watchLikePost","watchUnlikePost","watchRetweet","watchSearchPosts","postSaga","all","delay","fork","put","takeLatest","throttle","call","axios","ADD_POST_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_SUCCESS","UPLOAD_IMAGES_FAILURE","DELETE_COMMENT_REQUEST","DELETE_COMMENT_SUCCESS","DELETE_COMMENT_FAILURE","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","RETWEET_REQUEST","RETWEET_SUCCESS","RETWEET_FAILURE","SEARCH_POSTS_REQUEST","SEARCH_POSTS_SUCCESS","SEARCH_POSTS_FAILURE","LOAD_HASHTAG_POSTS_REQUEST","LOAD_HASHTAG_POSTS_SUCCESS","LOAD_POST_FAILURE","ADD_POST_TO_ME","REMOVE_POST_OF_ME","loadHashtagPostsAPI","data","lastId","get","encodeURIComponent","action","result","type","console","error","LOAD_HASHTAG_POSTS_FAILURE","response","SearchPostsAPI","log","search_word","length","retweetAPI","post","addPostAPI","id","removePostAPI","addCommentAPI","postId","loadPostsAPI","uploadImagesAPI","deleteCommentAPI","PostId","CommentId","likePostAPI","patch","unlikePostAPI"],"mappings":"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","sourcesContent":["import { all, delay, fork, put, takeLatest, throttle, call } from 'redux-saga/effects';\r\nimport axios from 'axios';\r\n// import shortId from 'shortid';\r\nimport {\r\n    ADD_POST_FAILURE,\r\n    ADD_POST_REQUEST,\r\n    ADD_POST_SUCCESS,\r\n    ADD_COMMENT_REQUEST,\r\n    ADD_COMMENT_SUCCESS,\r\n    ADD_COMMENT_FAILURE,\r\n\r\n    REMOVE_POST_REQUEST,\r\n    REMOVE_POST_SUCCESS,\r\n    REMOVE_POST_FAILURE,\r\n\r\n    LOAD_POSTS_REQUEST,\r\n    LOAD_POSTS_SUCCESS,\r\n    LOAD_POSTS_FAILURE,\r\n\r\n    UPLOAD_IMAGES_REQUEST,\r\n    UPLOAD_IMAGES_SUCCESS,\r\n    UPLOAD_IMAGES_FAILURE,\r\n\r\n    DELETE_COMMENT_REQUEST,\r\n    DELETE_COMMENT_SUCCESS,\r\n    DELETE_COMMENT_FAILURE,\r\n\r\n    LIKE_POST_REQUEST,\r\n    LIKE_POST_SUCCESS,\r\n    LIKE_POST_FAILURE,\r\n\r\n    UNLIKE_POST_REQUEST,\r\n    UNLIKE_POST_SUCCESS,\r\n    UNLIKE_POST_FAILURE,\r\n\r\n    RETWEET_REQUEST,\r\n    RETWEET_SUCCESS,\r\n    RETWEET_FAILURE,\r\n\r\n    SEARCH_POSTS_REQUEST,\r\n    SEARCH_POSTS_SUCCESS,\r\n    SEARCH_POSTS_FAILURE,\r\n\r\n    LOAD_HASHTAG_POSTS_REQUEST,\r\n    LOAD_HASHTAG_POSTS_SUCCESS,\r\n    LOAD_POST_FAILURE,  \r\n\r\n} from '../reducers/post';\r\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from '../reducers/user';\r\n\r\n// add your api 1122\r\n\r\nfunction loadHashtagPostsAPI(data, lastId) {\r\n    return axios.get(`/hashtag/${encodeURIComponent(data)}?lastId=${lastId || 0}`);\r\n}\r\n\r\nfunction* loadHashtagPosts(action) {\r\n    try {\r\n        const result = yield call(loadHashtagPostsAPI, action.data, action.lastId);\r\n        yield put({\r\n            type: LOAD_HASHTAG_POSTS_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: LOAD_HASHTAG_POSTS_FAILURE,\r\n            data: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction SearchPostsAPI(data) {\r\n    console.log('data : ', data);\r\n    return axios.get(`/search/posts/${data.search_word}/${data.lastId || 0}?`);\r\n}\r\n\r\nfunction* searchPosts(action) {\r\n    try {\r\n        console.log(\"action.data : \", action.data);\r\n        const result = yield call(SearchPostsAPI, action.data);\r\n        console.log(\"result for SearchPostsAPI : \", result);\r\n        console.log(\"result for SearchPostsAPI : \", result.data.length);\r\n\r\n        yield put({\r\n            type: SEARCH_POSTS_SUCCESS,\r\n            data: result.data\r\n        });\r\n\r\n    } catch (err) {\r\n        console.log(\"error : \", err);\r\n        console.error(err);\r\n        yield put({\r\n            type: SEARCH_POSTS_FAILURE,\r\n            data: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction retweetAPI(data) {\r\n    return axios.post(`/post/${data}/retweet`);\r\n}\r\n\r\nfunction* retweet(action) {\r\n    try {\r\n        const result = yield call(retweetAPI, action.data);\r\n        yield put({\r\n            type: RETWEET_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: RETWEET_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction addPostAPI(data) {\r\n    // console.log(\"data for posting at saga : \", data);\r\n    return axios.post('/post', data);\r\n}\r\n\r\nfunction* addPost(action) {\r\n    try {\r\n        const result = yield call(addPostAPI, action.data);\r\n        console.log(\"result for posting : \", result);\r\n\r\n        yield put({\r\n            type: ADD_POST_SUCCESS,\r\n            data: result.data\r\n        });\r\n        yield put({\r\n            type: ADD_POST_TO_ME,\r\n            data: result.data.id,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: ADD_POST_FAILURE,\r\n            data: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction removePostAPI(data) {\r\n    // return axios.delete('/api/post', data);\r\n    return axios.delete(`/post/${data}`);\r\n}\r\nfunction* removePost(action) {\r\n    try {\r\n        // yield delay(1000);\r\n        const result = yield call(removePostAPI, action.data);\r\n        console.log(\"result from backend, postId 확인 하기 : \", result.data);\r\n\r\n        yield put({\r\n            type: REMOVE_POST_SUCCESS,\r\n            // data: action.data,\r\n            data: result.data,\r\n        });\r\n\r\n        yield put({\r\n            type: REMOVE_POST_OF_ME,\r\n            // data: action.data,\r\n            data: result.data,\r\n        });\r\n\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: REMOVE_POST_FAILURE,\r\n            data: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction addCommentAPI(data) {\r\n    console.log(\"data from saga for add comment : \", data);\r\n    return axios.post(`/post/${data.postId}/comment`, data);\r\n}\r\n\r\nfunction* addComment(action) {\r\n    console.log(\"addComent action : \", action.data);\r\n    try {\r\n        // yield delay(1000);\r\n        const result = yield call(addCommentAPI, action.data);\r\n        console.log(\"result(response from backend from insert comment): \", result);\r\n\r\n        yield put({\r\n            type: ADD_COMMENT_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.log(\"댓글 에러 : \", err);\r\n        yield put({\r\n            type: ADD_COMMENT_FAILURE,\r\n            data: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction loadPostsAPI(lastId) {\r\n    // return axios.get('/posts', data);\r\n    return axios.get(`/posts?lastId=${lastId || 0}`);\r\n\r\n}\r\nfunction* loadPosts(action) {\r\n    try {\r\n        const result = yield call(loadPostsAPI, action.lastId);\r\n        console.log(\"result for loadPostsAPI : \", result);\r\n        console.log(\"result for loadPostsAPI : \", result.data.length);\r\n\r\n        yield put({\r\n            type: LOAD_POSTS_SUCCESS,\r\n            data: result.data\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: LOAD_POSTS_FAILURE,\r\n            data: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction uploadImagesAPI(data) {\r\n    console.log(\"data 확인 from saga : \", data);\r\n    return axios.post('/post/images', data);\r\n}\r\n\r\nfunction* uploadImages(action) {\r\n    try {\r\n        const result = yield call(uploadImagesAPI, action.data);\r\n        yield put({\r\n            type: UPLOAD_IMAGES_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: UPLOAD_IMAGES_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction deleteCommentAPI(data) {\r\n    console.log(\"data 확인 from saga : \", data);\r\n    return axios.delete(`post/comment/${data.PostId}/${data.CommentId}`);\r\n}\r\n\r\nfunction* deleteComment(action) {\r\n    try {\r\n        const result = yield call(deleteCommentAPI, action.data);\r\n        console.log(\"삭제에 대한 응답 : \", result.data);\r\n\r\n        yield put({\r\n            type: DELETE_COMMENT_SUCCESS,\r\n            // 라우터에서 댓글 삭제한뒤 PostId와 CommentId 리턴 \r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: DELETE_COMMENT_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction likePostAPI(data) {\r\n    return axios.patch(`/post/${data}/like`);\r\n}\r\nfunction* likePost(action) {\r\n    try {\r\n        const result = yield call(likePostAPI, action.data);\r\n        yield put({\r\n            type: LIKE_POST_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: LIKE_POST_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction unlikePostAPI(data) {\r\n    return axios.delete(`/post/${data}/like`);\r\n}\r\nfunction* unlikePost(action) {\r\n    try {\r\n        const result = yield call(unlikePostAPI, action.data);\r\n        yield put({\r\n            type: UNLIKE_POST_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: UNLIKE_POST_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchLoadPosts() {\r\n    yield throttle(5000, LOAD_POSTS_REQUEST, loadPosts);\r\n}\r\n\r\nfunction* watchRemovePost() {\r\n    yield takeLatest(REMOVE_POST_REQUEST, removePost);\r\n}\r\n\r\nfunction* watchAddPost() {\r\n    yield takeLatest(ADD_POST_REQUEST, addPost);\r\n}\r\nfunction* watchAddComment() {\r\n    yield takeLatest(ADD_COMMENT_REQUEST, addComment);\r\n}\r\n\r\nfunction* watchUploadImages() {\r\n    yield takeLatest(UPLOAD_IMAGES_REQUEST, uploadImages);\r\n}\r\nfunction* watchDeleteComment() {\r\n    yield takeLatest(DELETE_COMMENT_REQUEST, deleteComment);\r\n}\r\n\r\nfunction* watchLikePost() {\r\n    yield takeLatest(LIKE_POST_REQUEST, likePost);\r\n}\r\nfunction* watchUnlikePost() {\r\n    yield takeLatest(UNLIKE_POST_REQUEST, unlikePost);\r\n}\r\n\r\nfunction* watchRetweet() {\r\n    yield takeLatest(RETWEET_REQUEST, retweet);\r\n}\r\n\r\nfunction* watchSearchPosts() {\r\n    yield takeLatest(SEARCH_POSTS_REQUEST, searchPosts);\r\n}\r\n\r\nexport default function* postSaga() {\r\n    yield all([\r\n        fork(watchAddPost),\r\n        fork(watchAddComment),\r\n        fork(watchRemovePost),\r\n        fork(watchLoadPosts),\r\n        fork(watchUploadImages),\r\n        fork(watchDeleteComment),\r\n        fork(watchLikePost),\r\n        fork(watchUnlikePost),\r\n        fork(watchRetweet),\r\n        fork(watchSearchPosts),\r\n    ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}