{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport produce from 'immer';\nimport shortId from 'shortid';\nimport faker from 'faker';\nexport var initialState = {\n  mainPosts: [],\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  loadPostsLoading: false,\n  loadPostsDone: false,\n  loadPostsError: null,\n  uploadImagesLoading: false,\n  uploadImagesDone: false,\n  uploadImagesError: null,\n  deleteCommentLoading: false,\n  deleteCommentDone: false,\n  deleteCommentError: null,\n  likePostLoading: false,\n  likePostDone: false,\n  likePostError: null,\n  unlikePostLoading: false,\n  unlikePostDone: false,\n  unlikePostError: null,\n  retweetLoading: false,\n  retweetDone: false,\n  retweetError: null,\n  searchPostsLoading: false,\n  searchPostsDone: false,\n  searchPostsError: null,\n  imagePaths: [],\n  hasMorePosts: true\n}; // 액션 추가\n\nexport var SEARCH_POSTS_REQUEST = 'SEARCH_POSTS_REQUEST';\nexport var SEARCH_POSTS_SUCCESS = 'SEARCH_POSTS_SUCCESS';\nexport var SEARCH_POSTS_FAILURE = 'SEARCH_POSTS_FAILURE';\nexport var ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport var ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport var ADD_POST_FAILURE = 'ADD_POST_FAILURE'; // 댓글 추가\n\nexport var ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport var ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport var ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport var REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport var REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport var REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\nexport var LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\nexport var LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\nexport var LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\nexport var UPLOAD_IMAGES_REQUEST = 'UPLOAD_IMAGES_REQUEST';\nexport var UPLOAD_IMAGES_SUCCESS = 'UPLOAD_IMAGES_SUCCESS';\nexport var UPLOAD_IMAGES_FAILURE = 'UPLOAD_IMAGES_FAILURE';\nexport var REMOVE_IMAGE = 'REMOVE_IMAGE';\nexport var DELETE_COMMENT_REQUEST = 'DELETE_COMMENT_REQUEST';\nexport var DELETE_COMMENT_SUCCESS = 'DELETE_COMMENT_SUCCESS';\nexport var DELETE_COMMENT_FAILURE = 'DELETE_COMMENT_FAILURE';\nexport var LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\nexport var LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\nexport var LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\nexport var UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\nexport var UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\nexport var UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\nexport var RETWEET_REQUEST = 'RETWEET_REQUEST';\nexport var RETWEET_SUCCESS = 'RETWEET_SUCCESS';\nexport var RETWEET_FAILURE = 'RETWEET_FAILURE';\nexport var LOAD_HASHTAG_POSTS_REQUEST = 'LOAD_HASHTAG_POSTS_REQUEST';\nexport var LOAD_HASHTAG_POSTS_SUCCESS = 'LOAD_HASHTAG_POSTS_SUCCESS';\nexport var LOAD_HASHTAG_POSTS_FAILURE = 'LOAD_HASHTAG_POSTS_FAILURE';\nexport var LOAD_USER_POSTS_REQUEST = 'LOAD_USER_POSTS_REQUEST';\nexport var LOAD_USER_POSTS_SUCCESS = 'LOAD_USER_POSTS_SUCCESS';\nexport var LOAD_USER_POSTS_FAILURE = 'LOAD_USER_POSTS_FAILURE';\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addCommentError = null;\n        break;\n\n      case ADD_POST_SUCCESS:\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        draft.imagePaths = []; // draft.mainPosts.unshift(dummyPost(action.data));\n\n        draft.mainPosts.unshift(action.data);\n        break;\n\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = false;\n        draft.addPostError = action.error;\n        break;\n\n      case ADD_COMMENT_REQUEST:\n        draft.addCommentLoading = false;\n        draft.addCommentDone = false;\n        draft.addCommentError = null;\n        break;\n\n      case ADD_COMMENT_SUCCESS:\n        var post = draft.mainPosts.find(function (v) {\n          return v.id === action.data.PostId;\n        });\n        post.Comments.unshift(action.data);\n        draft.addCommentLoading = false;\n        draft.addCommentDone = true;\n        break;\n\n      case ADD_COMMENT_FAILURE:\n        return _objectSpread(_objectSpread({}, state), {}, {\n          addCommentLoading: false,\n          addCommentError: action.error\n        });\n\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoading = true;\n        draft.removePostDone = false;\n        draft.removePostError = null;\n        break;\n\n      case REMOVE_POST_SUCCESS:\n        draft.removePostLoading = false;\n        draft.removePostDone = true;\n        draft.mainPosts = draft.mainPosts.filter(function (v) {\n          return v.id !== action.data.PostId;\n        });\n\n      case REMOVE_POST_FAILURE:\n        draft.removePostLoading = false;\n        draft.removePostError = action.error;\n        break;\n\n      case LOAD_POSTS_REQUEST:\n        draft.loadPostsLoading = true;\n        draft.loadPostsDone = false;\n        draft.loadPostsError = null;\n        break;\n\n      case LOAD_POSTS_SUCCESS:\n        draft.loadPostsLoading = false;\n        draft.loadPostsDone = true;\n        draft.mainPosts = draft.mainPosts.concat(action.data);\n        draft.hasMorePosts = action.data.length === 10;\n        break;\n\n      case LOAD_POSTS_FAILURE:\n        draft.loadPostsLoading = false;\n        draft.loadPostsError = action.error;\n        break;\n\n      case UPLOAD_IMAGES_REQUEST:\n        draft.uploadImagesLoading = true;\n        draft.uploadImagesDone = false;\n        draft.uploadImagesError = null;\n        break;\n\n      case UPLOAD_IMAGES_SUCCESS:\n        {\n          // draft.imagePaths = draft.action.data;\n          draft.imagePaths.unshift(action.data);\n          draft.uploadImagesLoading = false;\n          draft.uploadImagesDone = true;\n          break;\n        }\n\n      case UPLOAD_IMAGES_FAILURE:\n        draft.uploadImagesLoading = false;\n        draft.uploadImagesError = action.error;\n        break;\n\n      case REMOVE_IMAGE:\n        draft.imagePaths = draft.imagePaths.filter(function (v, i) {\n          return i !== action.data;\n        });\n        break;\n\n      case DELETE_COMMENT_REQUEST:\n        draft.delteCommentLoading = false;\n        draft.delteCommentDone = false;\n        draft.delteCommentError = null;\n        break;\n\n      case DELETE_COMMENT_SUCCESS:\n        draft.deleteCommentLoading = false;\n        draft.deleteCommentDone = true;\n        var index = draft.mainPosts.findIndex(function (v) {\n          return v.id === action.data.PostId;\n        });\n        var CommentsForDelete = draft.mainPosts[index].Comments;\n        draft.mainPosts[index].Comments = CommentsForDelete.filter(function (v) {\n          return v.id !== action.data.CommentId;\n        });\n        break;\n\n      case DELETE_COMMENT_FAILURE:\n        return _objectSpread(_objectSpread({}, state), {}, {\n          delteCommentLoading: false,\n          delteCommentError: action.error\n        });\n\n      case LIKE_POST_REQUEST:\n        draft.likePostLoading = true;\n        draft.likePostDone = false;\n        draft.likePostError = null;\n        break;\n\n      case LIKE_POST_SUCCESS:\n        {\n          var _post = draft.mainPosts.find(function (v) {\n            return v.id === action.data.PostId;\n          });\n\n          _post.Likers.push({\n            id: action.data.UserId\n          });\n\n          draft.likePostLoading = false;\n          draft.likePostDone = true;\n          break;\n        }\n\n      case LIKE_POST_FAILURE:\n        draft.likePostLoading = false;\n        draft.likePostError = action.error;\n        break;\n\n      case UNLIKE_POST_REQUEST:\n        draft.unlikePostLoading = true;\n        draft.unlikePostDone = false;\n        draft.unlikePostError = null;\n        break;\n\n      case UNLIKE_POST_SUCCESS:\n        {\n          var _post2 = draft.mainPosts.find(function (v) {\n            return v.id === action.data.PostId;\n          });\n\n          _post2.Likers = _post2.Likers.filter(function (v) {\n            return v.id !== action.data.UserId;\n          });\n          draft.unlikePostLoading = false;\n          draft.unlikePostDone = true;\n          break;\n        }\n\n      case UNLIKE_POST_FAILURE:\n        draft.unlikePostLoading = false;\n        draft.unlikePostError = action.error;\n        break;\n\n      case RETWEET_REQUEST:\n        draft.retweetLoading = true;\n        draft.retweetDone = false;\n        draft.retweetError = null;\n        break;\n\n      case RETWEET_SUCCESS:\n        {\n          draft.retweetLoading = false;\n          draft.retweetDone = true;\n          draft.mainPosts.unshift(action.data);\n          break;\n        }\n\n      case RETWEET_FAILURE:\n        draft.retweetLoading = false;\n        draft.retweetError = action.error;\n        break;\n\n      case SEARCH_POSTS_REQUEST:\n        draft.searchPostsLoading = true;\n        draft.searchPostsDone = false;\n        break;\n\n      case SEARCH_POSTS_SUCCESS:\n        draft.searchPostsLoading = false;\n        draft.searchPostsDone = true;\n        draft.mainPosts = action.data;\n        draft.hasMorePosts = action.data.length === 10;\n        break;\n\n      case SEARCH_POSTS_FAILURE:\n        draft.searchPostsLoading = false;\n        draft.searchPostsError = action.error;\n        break;\n\n      case LOAD_POSTS_REQUEST:\n      case LOAD_USER_POSTS_REQUEST:\n      case LOAD_HASHTAG_POSTS_REQUEST:\n        draft.loadPostsLoading = true;\n        draft.loadPostsDone = false;\n        draft.loadPostsError = null;\n        break;\n\n      case LOAD_HASHTAG_POSTS_SUCCESS:\n      case LOAD_USER_POSTS_SUCCESS:\n      case LOAD_POSTS_SUCCESS:\n        draft.loadPostsLoading = false;\n        draft.loadPostsDone = true;\n        draft.mainPosts = draft.mainPosts.concat(action.data);\n        draft.hasMorePosts = action.data.length === 10;\n        break;\n\n      case LOAD_POSTS_FAILURE:\n      case LOAD_USER_POSTS_FAILURE:\n      case LOAD_HASHTAG_POSTS_FAILURE:\n        draft.loadPostsLoading = false;\n        draft.loadPostsError = action.error;\n        break;\n\n      default:\n        return state;\n    }\n  });\n}); // export default reducer;","map":{"version":3,"sources":["C:/nodebird/front/reducers/post.js"],"names":["produce","shortId","faker","initialState","mainPosts","addPostLoading","addPostDone","addPostError","addCommentLoading","addCommentDone","addCommentError","removePostLoading","removePostDone","removePostError","loadPostsLoading","loadPostsDone","loadPostsError","uploadImagesLoading","uploadImagesDone","uploadImagesError","deleteCommentLoading","deleteCommentDone","deleteCommentError","likePostLoading","likePostDone","likePostError","unlikePostLoading","unlikePostDone","unlikePostError","retweetLoading","retweetDone","retweetError","searchPostsLoading","searchPostsDone","searchPostsError","imagePaths","hasMorePosts","SEARCH_POSTS_REQUEST","SEARCH_POSTS_SUCCESS","SEARCH_POSTS_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_SUCCESS","UPLOAD_IMAGES_FAILURE","REMOVE_IMAGE","DELETE_COMMENT_REQUEST","DELETE_COMMENT_SUCCESS","DELETE_COMMENT_FAILURE","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","RETWEET_REQUEST","RETWEET_SUCCESS","RETWEET_FAILURE","LOAD_HASHTAG_POSTS_REQUEST","LOAD_HASHTAG_POSTS_SUCCESS","LOAD_HASHTAG_POSTS_FAILURE","LOAD_USER_POSTS_REQUEST","LOAD_USER_POSTS_SUCCESS","LOAD_USER_POSTS_FAILURE","state","action","draft","type","unshift","data","error","post","find","v","id","PostId","Comments","filter","concat","length","i","delteCommentLoading","delteCommentDone","delteCommentError","index","findIndex","CommentsForDelete","CommentId","Likers","push","UserId"],"mappings":";;;;;;AAAA,OAAOA,OAAP,MAAoB,OAApB;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,OAAO,IAAMC,YAAY,GAAG;AACxBC,EAAAA,SAAS,EAAE,EADa;AAExBC,EAAAA,cAAc,EAAE,KAFQ;AAGxBC,EAAAA,WAAW,EAAE,KAHW;AAIxBC,EAAAA,YAAY,EAAE,IAJU;AAMxBC,EAAAA,iBAAiB,EAAE,KANK;AAOxBC,EAAAA,cAAc,EAAE,KAPQ;AAQxBC,EAAAA,eAAe,EAAE,IARO;AAUxBC,EAAAA,iBAAiB,EAAE,KAVK;AAWxBC,EAAAA,cAAc,EAAE,KAXQ;AAYxBC,EAAAA,eAAe,EAAE,IAZO;AAcxBC,EAAAA,gBAAgB,EAAE,KAdM;AAexBC,EAAAA,aAAa,EAAE,KAfS;AAgBxBC,EAAAA,cAAc,EAAE,IAhBQ;AAkBxBC,EAAAA,mBAAmB,EAAE,KAlBG;AAmBxBC,EAAAA,gBAAgB,EAAE,KAnBM;AAoBxBC,EAAAA,iBAAiB,EAAE,IApBK;AAsBxBC,EAAAA,oBAAoB,EAAE,KAtBE;AAuBxBC,EAAAA,iBAAiB,EAAE,KAvBK;AAwBxBC,EAAAA,kBAAkB,EAAE,IAxBI;AA0BxBC,EAAAA,eAAe,EAAE,KA1BO;AA2BxBC,EAAAA,YAAY,EAAE,KA3BU;AA4BxBC,EAAAA,aAAa,EAAE,IA5BS;AA8BxBC,EAAAA,iBAAiB,EAAE,KA9BK;AA+BxBC,EAAAA,cAAc,EAAE,KA/BQ;AAgCxBC,EAAAA,eAAe,EAAE,IAhCO;AAkCxBC,EAAAA,cAAc,EAAE,KAlCQ;AAmCxBC,EAAAA,WAAW,EAAE,KAnCW;AAoCxBC,EAAAA,YAAY,EAAE,IApCU;AAsCxBC,EAAAA,kBAAkB,EAAE,KAtCI;AAuCxBC,EAAAA,eAAe,EAAE,KAvCO;AAwCxBC,EAAAA,gBAAgB,EAAE,IAxCM;AA0CxBC,EAAAA,UAAU,EAAE,EA1CY;AA2CxBC,EAAAA,YAAY,EAAE;AA3CU,CAArB,C,CA8CP;;AACA,OAAO,IAAMC,oBAAoB,GAAG,sBAA7B;AACP,OAAO,IAAMC,oBAAoB,GAAG,sBAA7B;AACP,OAAO,IAAMC,oBAAoB,GAAG,sBAA7B;AAEP,OAAO,IAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,IAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,IAAMC,gBAAgB,GAAG,kBAAzB,C,CAEP;;AACA,OAAO,IAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,IAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,IAAMC,mBAAmB,GAAG,qBAA5B;AAEP,OAAO,IAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,IAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,IAAMC,mBAAmB,GAAG,qBAA5B;AAEP,OAAO,IAAMC,kBAAkB,GAAG,oBAA3B;AACP,OAAO,IAAMC,kBAAkB,GAAG,oBAA3B;AACP,OAAO,IAAMC,kBAAkB,GAAG,oBAA3B;AAEP,OAAO,IAAMC,qBAAqB,GAAG,uBAA9B;AACP,OAAO,IAAMC,qBAAqB,GAAG,uBAA9B;AACP,OAAO,IAAMC,qBAAqB,GAAG,uBAA9B;AACP,OAAO,IAAMC,YAAY,GAAG,cAArB;AAEP,OAAO,IAAMC,sBAAsB,GAAG,wBAA/B;AACP,OAAO,IAAMC,sBAAsB,GAAG,wBAA/B;AACP,OAAO,IAAMC,sBAAsB,GAAG,wBAA/B;AAEP,OAAO,IAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,IAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,IAAMC,iBAAiB,GAAG,mBAA1B;AAEP,OAAO,IAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,IAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,IAAMC,mBAAmB,GAAG,qBAA5B;AAEP,OAAO,IAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,IAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,IAAMC,eAAe,GAAG,iBAAxB;AAEP,OAAO,IAAMC,0BAA0B,GAAG,4BAAnC;AACP,OAAO,IAAMC,0BAA0B,GAAG,4BAAnC;AACP,OAAO,IAAMC,0BAA0B,GAAG,4BAAnC;AAEP,OAAO,IAAMC,uBAAuB,GAAG,yBAAhC;AACP,OAAO,IAAMC,uBAAuB,GAAG,yBAAhC;AACP,OAAO,IAAMC,uBAAuB,GAAG,yBAAhC;AAEP,gBAAe,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBvE,YAAyB;AAAA,MAAXwE,MAAW;AAC7C,SAAO3E,OAAO,CAAC0E,KAAD,EAAQ,UAACE,KAAD,EAAW;AAC7B,YAAQD,MAAM,CAACE,IAAf;AACI,WAAKrC,gBAAL;AACIoC,QAAAA,KAAK,CAACvE,cAAN,GAAuB,IAAvB;AACAuE,QAAAA,KAAK,CAACtE,WAAN,GAAoB,KAApB;AACAsE,QAAAA,KAAK,CAAClE,eAAN,GAAwB,IAAxB;AACA;;AACJ,WAAK+B,gBAAL;AACImC,QAAAA,KAAK,CAACvE,cAAN,GAAuB,KAAvB;AACAuE,QAAAA,KAAK,CAACtE,WAAN,GAAoB,IAApB;AACAsE,QAAAA,KAAK,CAACzC,UAAN,GAAmB,EAAnB,CAHJ,CAII;;AACAyC,QAAAA,KAAK,CAACxE,SAAN,CAAgB0E,OAAhB,CAAwBH,MAAM,CAACI,IAA/B;AACA;;AACJ,WAAKrC,gBAAL;AACIkC,QAAAA,KAAK,CAACvE,cAAN,GAAuB,KAAvB;AACAuE,QAAAA,KAAK,CAACrE,YAAN,GAAqBoE,MAAM,CAACK,KAA5B;AACA;;AAEJ,WAAKrC,mBAAL;AACIiC,QAAAA,KAAK,CAACpE,iBAAN,GAA0B,KAA1B;AACAoE,QAAAA,KAAK,CAACnE,cAAN,GAAuB,KAAvB;AACAmE,QAAAA,KAAK,CAAClE,eAAN,GAAwB,IAAxB;AACA;;AACJ,WAAKkC,mBAAL;AACI,YAAMqC,IAAI,GAAGL,KAAK,CAACxE,SAAN,CAAgB8E,IAAhB,CAAqB,UAACC,CAAD;AAAA,iBAAOA,CAAC,CAACC,EAAF,KAAST,MAAM,CAACI,IAAP,CAAYM,MAA5B;AAAA,SAArB,CAAb;AACAJ,QAAAA,IAAI,CAACK,QAAL,CAAcR,OAAd,CAAsBH,MAAM,CAACI,IAA7B;AACAH,QAAAA,KAAK,CAACpE,iBAAN,GAA0B,KAA1B;AACAoE,QAAAA,KAAK,CAACnE,cAAN,GAAuB,IAAvB;AACA;;AAEJ,WAAKoC,mBAAL;AACI,+CACO6B,KADP;AAEIlE,UAAAA,iBAAiB,EAAE,KAFvB;AAGIE,UAAAA,eAAe,EAAEiE,MAAM,CAACK;AAH5B;;AAKJ,WAAKlC,mBAAL;AACI8B,QAAAA,KAAK,CAACjE,iBAAN,GAA0B,IAA1B;AACAiE,QAAAA,KAAK,CAAChE,cAAN,GAAuB,KAAvB;AACAgE,QAAAA,KAAK,CAAC/D,eAAN,GAAwB,IAAxB;AACA;;AACJ,WAAKkC,mBAAL;AACI6B,QAAAA,KAAK,CAACjE,iBAAN,GAA0B,KAA1B;AACAiE,QAAAA,KAAK,CAAChE,cAAN,GAAuB,IAAvB;AACAgE,QAAAA,KAAK,CAACxE,SAAN,GAAkBwE,KAAK,CAACxE,SAAN,CAAgBmF,MAAhB,CAAuB,UAACJ,CAAD;AAAA,iBAAOA,CAAC,CAACC,EAAF,KAAST,MAAM,CAACI,IAAP,CAAYM,MAA5B;AAAA,SAAvB,CAAlB;;AAEJ,WAAKrC,mBAAL;AACI4B,QAAAA,KAAK,CAACjE,iBAAN,GAA0B,KAA1B;AACAiE,QAAAA,KAAK,CAAC/D,eAAN,GAAwB8D,MAAM,CAACK,KAA/B;AACA;;AAEJ,WAAK/B,kBAAL;AACI2B,QAAAA,KAAK,CAAC9D,gBAAN,GAAyB,IAAzB;AACA8D,QAAAA,KAAK,CAAC7D,aAAN,GAAsB,KAAtB;AACA6D,QAAAA,KAAK,CAAC5D,cAAN,GAAuB,IAAvB;AACA;;AACJ,WAAKkC,kBAAL;AACI0B,QAAAA,KAAK,CAAC9D,gBAAN,GAAyB,KAAzB;AACA8D,QAAAA,KAAK,CAAC7D,aAAN,GAAsB,IAAtB;AACA6D,QAAAA,KAAK,CAACxE,SAAN,GAAkBwE,KAAK,CAACxE,SAAN,CAAgBoF,MAAhB,CAAuBb,MAAM,CAACI,IAA9B,CAAlB;AACAH,QAAAA,KAAK,CAACxC,YAAN,GAAqBuC,MAAM,CAACI,IAAP,CAAYU,MAAZ,KAAuB,EAA5C;AACA;;AACJ,WAAKtC,kBAAL;AACIyB,QAAAA,KAAK,CAAC9D,gBAAN,GAAyB,KAAzB;AACA8D,QAAAA,KAAK,CAAC5D,cAAN,GAAuB2D,MAAM,CAACK,KAA9B;AACA;;AAEJ,WAAK5B,qBAAL;AACIwB,QAAAA,KAAK,CAAC3D,mBAAN,GAA4B,IAA5B;AACA2D,QAAAA,KAAK,CAAC1D,gBAAN,GAAyB,KAAzB;AACA0D,QAAAA,KAAK,CAACzD,iBAAN,GAA0B,IAA1B;AACA;;AACJ,WAAKkC,qBAAL;AAA4B;AACxB;AACAuB,UAAAA,KAAK,CAACzC,UAAN,CAAiB2C,OAAjB,CAAyBH,MAAM,CAACI,IAAhC;AACAH,UAAAA,KAAK,CAAC3D,mBAAN,GAA4B,KAA5B;AACA2D,UAAAA,KAAK,CAAC1D,gBAAN,GAAyB,IAAzB;AACA;AACH;;AACD,WAAKoC,qBAAL;AACIsB,QAAAA,KAAK,CAAC3D,mBAAN,GAA4B,KAA5B;AACA2D,QAAAA,KAAK,CAACzD,iBAAN,GAA0BwD,MAAM,CAACK,KAAjC;AACA;;AACJ,WAAKzB,YAAL;AACIqB,QAAAA,KAAK,CAACzC,UAAN,GAAmByC,KAAK,CAACzC,UAAN,CAAiBoD,MAAjB,CAAwB,UAACJ,CAAD,EAAIO,CAAJ;AAAA,iBAAUA,CAAC,KAAKf,MAAM,CAACI,IAAvB;AAAA,SAAxB,CAAnB;AACA;;AAEJ,WAAKvB,sBAAL;AACIoB,QAAAA,KAAK,CAACe,mBAAN,GAA4B,KAA5B;AACAf,QAAAA,KAAK,CAACgB,gBAAN,GAAyB,KAAzB;AACAhB,QAAAA,KAAK,CAACiB,iBAAN,GAA0B,IAA1B;AACA;;AACJ,WAAKpC,sBAAL;AACImB,QAAAA,KAAK,CAACxD,oBAAN,GAA6B,KAA7B;AACAwD,QAAAA,KAAK,CAACvD,iBAAN,GAA0B,IAA1B;AACA,YAAMyE,KAAK,GAAGlB,KAAK,CAACxE,SAAN,CAAgB2F,SAAhB,CAA0B,UAACZ,CAAD;AAAA,iBAAOA,CAAC,CAACC,EAAF,KAAST,MAAM,CAACI,IAAP,CAAYM,MAA5B;AAAA,SAA1B,CAAd;AACA,YAAMW,iBAAiB,GAAGpB,KAAK,CAACxE,SAAN,CAAgB0F,KAAhB,EAAuBR,QAAjD;AACAV,QAAAA,KAAK,CAACxE,SAAN,CAAgB0F,KAAhB,EAAuBR,QAAvB,GAAkCU,iBAAiB,CAACT,MAAlB,CAAyB,UAACJ,CAAD;AAAA,iBAAOA,CAAC,CAACC,EAAF,KAAST,MAAM,CAACI,IAAP,CAAYkB,SAA5B;AAAA,SAAzB,CAAlC;AACA;;AACJ,WAAKvC,sBAAL;AACI,+CACOgB,KADP;AAEIiB,UAAAA,mBAAmB,EAAE,KAFzB;AAGIE,UAAAA,iBAAiB,EAAElB,MAAM,CAACK;AAH9B;;AAKJ,WAAKrB,iBAAL;AACIiB,QAAAA,KAAK,CAACrD,eAAN,GAAwB,IAAxB;AACAqD,QAAAA,KAAK,CAACpD,YAAN,GAAqB,KAArB;AACAoD,QAAAA,KAAK,CAACnD,aAAN,GAAsB,IAAtB;AACA;;AACJ,WAAKmC,iBAAL;AAAwB;AACpB,cAAMqB,KAAI,GAAGL,KAAK,CAACxE,SAAN,CAAgB8E,IAAhB,CAAqB,UAACC,CAAD;AAAA,mBAAOA,CAAC,CAACC,EAAF,KAAST,MAAM,CAACI,IAAP,CAAYM,MAA5B;AAAA,WAArB,CAAb;;AACAJ,UAAAA,KAAI,CAACiB,MAAL,CAAYC,IAAZ,CAAiB;AAAEf,YAAAA,EAAE,EAAET,MAAM,CAACI,IAAP,CAAYqB;AAAlB,WAAjB;;AACAxB,UAAAA,KAAK,CAACrD,eAAN,GAAwB,KAAxB;AACAqD,UAAAA,KAAK,CAACpD,YAAN,GAAqB,IAArB;AACA;AACH;;AACD,WAAKqC,iBAAL;AACIe,QAAAA,KAAK,CAACrD,eAAN,GAAwB,KAAxB;AACAqD,QAAAA,KAAK,CAACnD,aAAN,GAAsBkD,MAAM,CAACK,KAA7B;AACA;;AAEJ,WAAKlB,mBAAL;AACIc,QAAAA,KAAK,CAAClD,iBAAN,GAA0B,IAA1B;AACAkD,QAAAA,KAAK,CAACjD,cAAN,GAAuB,KAAvB;AACAiD,QAAAA,KAAK,CAAChD,eAAN,GAAwB,IAAxB;AACA;;AACJ,WAAKmC,mBAAL;AAA0B;AACtB,cAAMkB,MAAI,GAAGL,KAAK,CAACxE,SAAN,CAAgB8E,IAAhB,CAAqB,UAACC,CAAD;AAAA,mBAAOA,CAAC,CAACC,EAAF,KAAST,MAAM,CAACI,IAAP,CAAYM,MAA5B;AAAA,WAArB,CAAb;;AACAJ,UAAAA,MAAI,CAACiB,MAAL,GAAcjB,MAAI,CAACiB,MAAL,CAAYX,MAAZ,CAAmB,UAACJ,CAAD;AAAA,mBAAOA,CAAC,CAACC,EAAF,KAAST,MAAM,CAACI,IAAP,CAAYqB,MAA5B;AAAA,WAAnB,CAAd;AACAxB,UAAAA,KAAK,CAAClD,iBAAN,GAA0B,KAA1B;AACAkD,UAAAA,KAAK,CAACjD,cAAN,GAAuB,IAAvB;AACA;AACH;;AAED,WAAKqC,mBAAL;AACIY,QAAAA,KAAK,CAAClD,iBAAN,GAA0B,KAA1B;AACAkD,QAAAA,KAAK,CAAChD,eAAN,GAAwB+C,MAAM,CAACK,KAA/B;AACA;;AAEJ,WAAKf,eAAL;AACIW,QAAAA,KAAK,CAAC/C,cAAN,GAAuB,IAAvB;AACA+C,QAAAA,KAAK,CAAC9C,WAAN,GAAoB,KAApB;AACA8C,QAAAA,KAAK,CAAC7C,YAAN,GAAqB,IAArB;AACA;;AACJ,WAAKmC,eAAL;AAAsB;AAClBU,UAAAA,KAAK,CAAC/C,cAAN,GAAuB,KAAvB;AACA+C,UAAAA,KAAK,CAAC9C,WAAN,GAAoB,IAApB;AACA8C,UAAAA,KAAK,CAACxE,SAAN,CAAgB0E,OAAhB,CAAwBH,MAAM,CAACI,IAA/B;AACA;AACH;;AACD,WAAKZ,eAAL;AACIS,QAAAA,KAAK,CAAC/C,cAAN,GAAuB,KAAvB;AACA+C,QAAAA,KAAK,CAAC7C,YAAN,GAAqB4C,MAAM,CAACK,KAA5B;AACA;;AAEJ,WAAK3C,oBAAL;AACIuC,QAAAA,KAAK,CAAC5C,kBAAN,GAA2B,IAA3B;AACA4C,QAAAA,KAAK,CAAC3C,eAAN,GAAwB,KAAxB;AACA;;AACJ,WAAKK,oBAAL;AACIsC,QAAAA,KAAK,CAAC5C,kBAAN,GAA2B,KAA3B;AACA4C,QAAAA,KAAK,CAAC3C,eAAN,GAAwB,IAAxB;AACA2C,QAAAA,KAAK,CAACxE,SAAN,GAAkBuE,MAAM,CAACI,IAAzB;AACAH,QAAAA,KAAK,CAACxC,YAAN,GAAqBuC,MAAM,CAACI,IAAP,CAAYU,MAAZ,KAAuB,EAA5C;AACA;;AACJ,WAAKlD,oBAAL;AACIqC,QAAAA,KAAK,CAAC5C,kBAAN,GAA2B,KAA3B;AACA4C,QAAAA,KAAK,CAAC1C,gBAAN,GAAyByC,MAAM,CAACK,KAAhC;AACA;;AAEJ,WAAK/B,kBAAL;AACA,WAAKsB,uBAAL;AACA,WAAKH,0BAAL;AACIQ,QAAAA,KAAK,CAAC9D,gBAAN,GAAyB,IAAzB;AACA8D,QAAAA,KAAK,CAAC7D,aAAN,GAAsB,KAAtB;AACA6D,QAAAA,KAAK,CAAC5D,cAAN,GAAuB,IAAvB;AACA;;AACJ,WAAKqD,0BAAL;AACA,WAAKG,uBAAL;AACA,WAAKtB,kBAAL;AACI0B,QAAAA,KAAK,CAAC9D,gBAAN,GAAyB,KAAzB;AACA8D,QAAAA,KAAK,CAAC7D,aAAN,GAAsB,IAAtB;AACA6D,QAAAA,KAAK,CAACxE,SAAN,GAAkBwE,KAAK,CAACxE,SAAN,CAAgBoF,MAAhB,CAAuBb,MAAM,CAACI,IAA9B,CAAlB;AACAH,QAAAA,KAAK,CAACxC,YAAN,GAAqBuC,MAAM,CAACI,IAAP,CAAYU,MAAZ,KAAuB,EAA5C;AACA;;AACJ,WAAKtC,kBAAL;AACA,WAAKsB,uBAAL;AACA,WAAKH,0BAAL;AACIM,QAAAA,KAAK,CAAC9D,gBAAN,GAAyB,KAAzB;AACA8D,QAAAA,KAAK,CAAC5D,cAAN,GAAuB2D,MAAM,CAACK,KAA9B;AACA;;AAEJ;AACI,eAAON,KAAP;AAlMR;AAoMH,GArMa,CAAd;AAuMH,CAxMD,E,CA0MA","sourcesContent":["import produce from 'immer';\r\nimport shortId from 'shortid';\r\nimport faker from 'faker';\r\n\r\n\r\nexport const initialState = {\r\n    mainPosts: [],\r\n    addPostLoading: false,\r\n    addPostDone: false,\r\n    addPostError: null,\r\n\r\n    addCommentLoading: false,\r\n    addCommentDone: false,\r\n    addCommentError: null,\r\n\r\n    removePostLoading: false,\r\n    removePostDone: false,\r\n    removePostError: null,\r\n\r\n    loadPostsLoading: false,\r\n    loadPostsDone: false,\r\n    loadPostsError: null,\r\n\r\n    uploadImagesLoading: false,\r\n    uploadImagesDone: false,\r\n    uploadImagesError: null,\r\n\r\n    deleteCommentLoading: false,\r\n    deleteCommentDone: false,\r\n    deleteCommentError: null,\r\n\r\n    likePostLoading: false,\r\n    likePostDone: false,\r\n    likePostError: null,\r\n\r\n    unlikePostLoading: false,\r\n    unlikePostDone: false,\r\n    unlikePostError: null,\r\n\r\n    retweetLoading: false,\r\n    retweetDone: false,\r\n    retweetError: null,\r\n\r\n    searchPostsLoading: false,\r\n    searchPostsDone: false,\r\n    searchPostsError: null,\r\n\r\n    imagePaths: [],\r\n    hasMorePosts: true,\r\n};\r\n\r\n// 액션 추가\r\nexport const SEARCH_POSTS_REQUEST = 'SEARCH_POSTS_REQUEST';\r\nexport const SEARCH_POSTS_SUCCESS = 'SEARCH_POSTS_SUCCESS';\r\nexport const SEARCH_POSTS_FAILURE = 'SEARCH_POSTS_FAILURE';\r\n\r\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\r\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\r\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\r\n\r\n// 댓글 추가\r\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\r\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\r\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\r\n\r\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\r\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\r\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\r\n\r\nexport const LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\r\nexport const LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\r\nexport const LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\r\n\r\nexport const UPLOAD_IMAGES_REQUEST = 'UPLOAD_IMAGES_REQUEST';\r\nexport const UPLOAD_IMAGES_SUCCESS = 'UPLOAD_IMAGES_SUCCESS';\r\nexport const UPLOAD_IMAGES_FAILURE = 'UPLOAD_IMAGES_FAILURE';\r\nexport const REMOVE_IMAGE = 'REMOVE_IMAGE';\r\n\r\nexport const DELETE_COMMENT_REQUEST = 'DELETE_COMMENT_REQUEST';\r\nexport const DELETE_COMMENT_SUCCESS = 'DELETE_COMMENT_SUCCESS';\r\nexport const DELETE_COMMENT_FAILURE = 'DELETE_COMMENT_FAILURE';\r\n\r\nexport const LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\r\nexport const LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\r\nexport const LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\r\n\r\nexport const UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\r\nexport const UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\r\nexport const UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\r\n\r\nexport const RETWEET_REQUEST = 'RETWEET_REQUEST';\r\nexport const RETWEET_SUCCESS = 'RETWEET_SUCCESS';\r\nexport const RETWEET_FAILURE = 'RETWEET_FAILURE';\r\n\r\nexport const LOAD_HASHTAG_POSTS_REQUEST = 'LOAD_HASHTAG_POSTS_REQUEST';\r\nexport const LOAD_HASHTAG_POSTS_SUCCESS = 'LOAD_HASHTAG_POSTS_SUCCESS';\r\nexport const LOAD_HASHTAG_POSTS_FAILURE = 'LOAD_HASHTAG_POSTS_FAILURE';\r\n\r\nexport const LOAD_USER_POSTS_REQUEST = 'LOAD_USER_POSTS_REQUEST';\r\nexport const LOAD_USER_POSTS_SUCCESS = 'LOAD_USER_POSTS_SUCCESS';\r\nexport const LOAD_USER_POSTS_FAILURE = 'LOAD_USER_POSTS_FAILURE';\r\n\r\nexport default (state = initialState, action) => {\r\n    return produce(state, (draft) => {\r\n        switch (action.type) {\r\n            case ADD_POST_REQUEST:\r\n                draft.addPostLoading = true;\r\n                draft.addPostDone = false;\r\n                draft.addCommentError = null;\r\n                break;\r\n            case ADD_POST_SUCCESS:\r\n                draft.addPostLoading = false;\r\n                draft.addPostDone = true;\r\n                draft.imagePaths = [];\r\n                // draft.mainPosts.unshift(dummyPost(action.data));\r\n                draft.mainPosts.unshift(action.data);\r\n                break;\r\n            case ADD_POST_FAILURE:\r\n                draft.addPostLoading = false;\r\n                draft.addPostError = action.error;\r\n                break;\r\n\r\n            case ADD_COMMENT_REQUEST:\r\n                draft.addCommentLoading = false;\r\n                draft.addCommentDone = false;\r\n                draft.addCommentError = null;\r\n                break;\r\n            case ADD_COMMENT_SUCCESS:\r\n                const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\r\n                post.Comments.unshift(action.data);\r\n                draft.addCommentLoading = false;\r\n                draft.addCommentDone = true;\r\n                break;\r\n\r\n            case ADD_COMMENT_FAILURE:\r\n                return {\r\n                    ...state,\r\n                    addCommentLoading: false,\r\n                    addCommentError: action.error,\r\n                };\r\n            case REMOVE_POST_REQUEST:\r\n                draft.removePostLoading = true;\r\n                draft.removePostDone = false;\r\n                draft.removePostError = null;\r\n                break;\r\n            case REMOVE_POST_SUCCESS:\r\n                draft.removePostLoading = false;\r\n                draft.removePostDone = true;\r\n                draft.mainPosts = draft.mainPosts.filter((v) => v.id !== action.data.PostId);\r\n\r\n            case REMOVE_POST_FAILURE:\r\n                draft.removePostLoading = false;\r\n                draft.removePostError = action.error;\r\n                break;\r\n\r\n            case LOAD_POSTS_REQUEST:\r\n                draft.loadPostsLoading = true;\r\n                draft.loadPostsDone = false;\r\n                draft.loadPostsError = null;\r\n                break;\r\n            case LOAD_POSTS_SUCCESS:\r\n                draft.loadPostsLoading = false;\r\n                draft.loadPostsDone = true;\r\n                draft.mainPosts = draft.mainPosts.concat(action.data);\r\n                draft.hasMorePosts = action.data.length === 10;\r\n                break;\r\n            case LOAD_POSTS_FAILURE:\r\n                draft.loadPostsLoading = false;\r\n                draft.loadPostsError = action.error;\r\n                break;\r\n\r\n            case UPLOAD_IMAGES_REQUEST:\r\n                draft.uploadImagesLoading = true;\r\n                draft.uploadImagesDone = false;\r\n                draft.uploadImagesError = null;\r\n                break;\r\n            case UPLOAD_IMAGES_SUCCESS: {\r\n                // draft.imagePaths = draft.action.data;\r\n                draft.imagePaths.unshift(action.data)\r\n                draft.uploadImagesLoading = false;\r\n                draft.uploadImagesDone = true;\r\n                break;\r\n            }\r\n            case UPLOAD_IMAGES_FAILURE:\r\n                draft.uploadImagesLoading = false;\r\n                draft.uploadImagesError = action.error;\r\n                break;\r\n            case REMOVE_IMAGE:\r\n                draft.imagePaths = draft.imagePaths.filter((v, i) => i !== action.data);\r\n                break;\r\n\r\n            case DELETE_COMMENT_REQUEST:\r\n                draft.delteCommentLoading = false;\r\n                draft.delteCommentDone = false;\r\n                draft.delteCommentError = null;\r\n                break;\r\n            case DELETE_COMMENT_SUCCESS:\r\n                draft.deleteCommentLoading = false;\r\n                draft.deleteCommentDone = true;\r\n                const index = draft.mainPosts.findIndex((v) => v.id === action.data.PostId)\r\n                const CommentsForDelete = draft.mainPosts[index].Comments;\r\n                draft.mainPosts[index].Comments = CommentsForDelete.filter((v) => v.id !== action.data.CommentId)\r\n                break;\r\n            case DELETE_COMMENT_FAILURE:\r\n                return {\r\n                    ...state,\r\n                    delteCommentLoading: false,\r\n                    delteCommentError: action.error,\r\n                };\r\n            case LIKE_POST_REQUEST:\r\n                draft.likePostLoading = true;\r\n                draft.likePostDone = false;\r\n                draft.likePostError = null;\r\n                break;\r\n            case LIKE_POST_SUCCESS: {\r\n                const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\r\n                post.Likers.push({ id: action.data.UserId });\r\n                draft.likePostLoading = false;\r\n                draft.likePostDone = true;\r\n                break;\r\n            }\r\n            case LIKE_POST_FAILURE:\r\n                draft.likePostLoading = false;\r\n                draft.likePostError = action.error;\r\n                break;\r\n\r\n            case UNLIKE_POST_REQUEST:\r\n                draft.unlikePostLoading = true;\r\n                draft.unlikePostDone = false;\r\n                draft.unlikePostError = null;\r\n                break;\r\n            case UNLIKE_POST_SUCCESS: {\r\n                const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\r\n                post.Likers = post.Likers.filter((v) => v.id !== action.data.UserId);\r\n                draft.unlikePostLoading = false;\r\n                draft.unlikePostDone = true;\r\n                break;\r\n            }\r\n\r\n            case UNLIKE_POST_FAILURE:\r\n                draft.unlikePostLoading = false;\r\n                draft.unlikePostError = action.error;\r\n                break;\r\n\r\n            case RETWEET_REQUEST:\r\n                draft.retweetLoading = true;\r\n                draft.retweetDone = false;\r\n                draft.retweetError = null;\r\n                break;\r\n            case RETWEET_SUCCESS: {\r\n                draft.retweetLoading = false;\r\n                draft.retweetDone = true;\r\n                draft.mainPosts.unshift(action.data);\r\n                break;\r\n            }\r\n            case RETWEET_FAILURE:\r\n                draft.retweetLoading = false;\r\n                draft.retweetError = action.error;\r\n                break;\r\n\r\n            case SEARCH_POSTS_REQUEST:\r\n                draft.searchPostsLoading = true;\r\n                draft.searchPostsDone = false;\r\n                break;\r\n            case SEARCH_POSTS_SUCCESS:\r\n                draft.searchPostsLoading = false;\r\n                draft.searchPostsDone = true;\r\n                draft.mainPosts = action.data;\r\n                draft.hasMorePosts = action.data.length === 10;\r\n                break;\r\n            case SEARCH_POSTS_FAILURE:\r\n                draft.searchPostsLoading = false;\r\n                draft.searchPostsError = action.error;\r\n                break;\r\n\r\n            case LOAD_POSTS_REQUEST:\r\n            case LOAD_USER_POSTS_REQUEST:\r\n            case LOAD_HASHTAG_POSTS_REQUEST:\r\n                draft.loadPostsLoading = true;\r\n                draft.loadPostsDone = false;\r\n                draft.loadPostsError = null;\r\n                break;\r\n            case LOAD_HASHTAG_POSTS_SUCCESS:\r\n            case LOAD_USER_POSTS_SUCCESS:\r\n            case LOAD_POSTS_SUCCESS:\r\n                draft.loadPostsLoading = false;\r\n                draft.loadPostsDone = true;\r\n                draft.mainPosts = draft.mainPosts.concat(action.data);\r\n                draft.hasMorePosts = action.data.length === 10;\r\n                break;\r\n            case LOAD_POSTS_FAILURE:\r\n            case LOAD_USER_POSTS_FAILURE:\r\n            case LOAD_HASHTAG_POSTS_FAILURE:\r\n                draft.loadPostsLoading = false;\r\n                draft.loadPostsError = action.error;\r\n                break;\r\n\r\n            default:\r\n                return state;\r\n        }\r\n    });\r\n\r\n}\r\n\r\n// export default reducer;\r\n"]},"metadata":{},"sourceType":"module"}