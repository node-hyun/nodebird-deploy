{"ast":null,"code":"import React, { useCallback, useState } from 'react';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst PostImages = ({\n  images\n}) => {\n  // console.log(\"images from PostImages : \", images);\n  // console.log(\"images from PostImages : \", images.length);\n  const showImage = useCallback(() => {\n    alert(\"이미지 슬라이드 출력 구현 예정!\");\n  }, []);\n\n  if (images.length === 1) {\n    return /*#__PURE__*/_jsx(_Fragment, {\n      children: /*#__PURE__*/_jsx(\"img\", {\n        role: \"presentation\",\n        src: `http://127.0.0.1:3065/${images[0].src}`,\n        alt: images[0].src,\n        onClick: \"\"\n      })\n    });\n  }\n\n  if (images.length === 2) {\n    return /*#__PURE__*/_jsx(_Fragment, {\n      children: /*#__PURE__*/_jsxs(\"div\", {\n        children: [/*#__PURE__*/_jsx(\"img\", {\n          role: \"presentation\",\n          src: `http://127.0.0.1:3065/${images[0].src}`,\n          alt: images[0].src,\n          width: \"50%\",\n          onClick: \"\"\n        }), /*#__PURE__*/_jsx(\"img\", {\n          role: \"presentation\",\n          src: `http://127.0.0.1:3065/${images[1].src}`,\n          alt: images[1].src,\n          width: \"50%\",\n          onClick: \"\"\n        })]\n      })\n    });\n  }\n\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/_jsxs(\"div\", {\n      children: [/*#__PURE__*/_jsx(\"img\", {\n        role: \"presentation\",\n        src: `http://127.0.0.1:3065/${images[0].src}`,\n        alt: images[0].src,\n        width: \"50%\",\n        onClick: \"\"\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        role: \"presentation\",\n        style: {\n          display: 'inline-block',\n          width: '50%',\n          textAlign: 'center',\n          verticalAlign: 'middle'\n        },\n        onClick: showImage,\n        children: [/*#__PURE__*/_jsx(PlusOutlined, {}), /*#__PURE__*/_jsx(\"br\", {}), images.length - 1, \" \\uAC1C\\uC758 \\uC0AC\\uC9C4 \\uB354\\uBCF4\\uAE30\"]\n      })]\n    })\n  });\n};\n\nexport default PostImages;","map":{"version":3,"sources":["C:/nodebird-deploy/front/components/PostImages.js"],"names":["React","useCallback","useState","PlusOutlined","PostImages","images","showImage","alert","length","src","display","width","textAlign","verticalAlign"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,QAA6C,OAA7C;AAEA,SAASC,YAAT,QAA6B,mBAA7B;;;;;AAGA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAC/B;AACA;AAEA,QAAMC,SAAS,GAAGL,WAAW,CAAC,MAAM;AAChCM,IAAAA,KAAK,CAAC,oBAAD,CAAL;AACH,GAF4B,EAE1B,EAF0B,CAA7B;;AAIA,MAAIF,MAAM,CAACG,MAAP,KAAkB,CAAtB,EAAyB;AACrB,wBACI;AAAA,6BACI;AAAK,QAAA,IAAI,EAAC,cAAV;AAAyB,QAAA,GAAG,EAAG,yBAAwBH,MAAM,CAAC,CAAD,CAAN,CAAUI,GAAI,EAArE;AAAwE,QAAA,GAAG,EAAEJ,MAAM,CAAC,CAAD,CAAN,CAAUI,GAAvF;AAA4F,QAAA,OAAO,EAAC;AAApG;AADJ,MADJ;AAMH;;AACD,MAAIJ,MAAM,CAACG,MAAP,KAAkB,CAAtB,EAAyB;AACrB,wBACI;AAAA,6BACI;AAAA,gCACI;AAAK,UAAA,IAAI,EAAC,cAAV;AAAyB,UAAA,GAAG,EAAG,yBAAwBH,MAAM,CAAC,CAAD,CAAN,CAAUI,GAAI,EAArE;AAAwE,UAAA,GAAG,EAAEJ,MAAM,CAAC,CAAD,CAAN,CAAUI,GAAvF;AAA4F,UAAA,KAAK,EAAC,KAAlG;AAAwG,UAAA,OAAO,EAAC;AAAhH,UADJ,eAEI;AAAK,UAAA,IAAI,EAAC,cAAV;AAAyB,UAAA,GAAG,EAAG,yBAAwBJ,MAAM,CAAC,CAAD,CAAN,CAAUI,GAAI,EAArE;AAAwE,UAAA,GAAG,EAAEJ,MAAM,CAAC,CAAD,CAAN,CAAUI,GAAvF;AAA4F,UAAA,KAAK,EAAC,KAAlG;AAAwG,UAAA,OAAO,EAAC;AAAhH,UAFJ;AAAA;AADJ,MADJ;AAQH;;AACD,sBACI;AAAA,2BACI;AAAA,8BACI;AAAK,QAAA,IAAI,EAAC,cAAV;AAAyB,QAAA,GAAG,EAAG,yBAAwBJ,MAAM,CAAC,CAAD,CAAN,CAAUI,GAAI,EAArE;AAAwE,QAAA,GAAG,EAAEJ,MAAM,CAAC,CAAD,CAAN,CAAUI,GAAvF;AAA4F,QAAA,KAAK,EAAC,KAAlG;AAAwG,QAAA,OAAO,EAAC;AAAhH,QADJ,eAEI;AACI,QAAA,IAAI,EAAC,cADT;AAEI,QAAA,KAAK,EAAE;AAAEC,UAAAA,OAAO,EAAE,cAAX;AAA2BC,UAAAA,KAAK,EAAE,KAAlC;AAAyCC,UAAAA,SAAS,EAAE,QAApD;AAA8DC,UAAAA,aAAa,EAAE;AAA7E,SAFX;AAGI,QAAA,OAAO,EAAEP,SAHb;AAAA,gCAKI,KAAC,YAAD,KALJ,eAMI,cANJ,EAOKD,MAAM,CAACG,MAAP,GAAgB,CAPrB;AAAA,QAFJ;AAAA;AADJ,IADJ;AAgBH,CA1CD;;AAkDA,eAAeJ,UAAf","sourcesContent":["import React, { useCallback, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\n\r\n\r\nconst PostImages = ({ images }) => {\r\n    // console.log(\"images from PostImages : \", images);\r\n    // console.log(\"images from PostImages : \", images.length);\r\n\r\n    const showImage = useCallback(() => {\r\n        alert(\"이미지 슬라이드 출력 구현 예정!\")\r\n    }, []);\r\n\r\n    if (images.length === 1) {\r\n        return (\r\n            <>\r\n                <img role=\"presentation\" src={`http://127.0.0.1:3065/${images[0].src}`} alt={images[0].src} onClick=\"\" />\r\n                {/* <img role=\"presentation\" src={`http://127.0.0.1:3065/${images[0]}`} alt={images[0].src} onClick=\"\" /> */}\r\n            </>\r\n        );\r\n    }\r\n    if (images.length === 2) {\r\n        return (\r\n            <>\r\n                <div>\r\n                    <img role=\"presentation\" src={`http://127.0.0.1:3065/${images[0].src}`} alt={images[0].src} width=\"50%\" onClick=\"\" />\r\n                    <img role=\"presentation\" src={`http://127.0.0.1:3065/${images[1].src}`} alt={images[1].src} width=\"50%\" onClick=\"\" />\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n    return (\r\n        <>\r\n            <div>\r\n                <img role=\"presentation\" src={`http://127.0.0.1:3065/${images[0].src}`} alt={images[0].src} width=\"50%\" onClick=\"\" />\r\n                <div\r\n                    role=\"presentation\"\r\n                    style={{ display: 'inline-block', width: '50%', textAlign: 'center', verticalAlign: 'middle' }}\r\n                    onClick={showImage}\r\n                >\r\n                    <PlusOutlined />\r\n                    <br />\r\n                    {images.length - 1} 개의 사진 더보기\r\n        </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nPostImages.propTypes = {\r\n    images: PropTypes.arrayOf(PropTypes.shape({\r\n        src: PropTypes.string,\r\n    })).isRequired,\r\n};\r\n\r\nexport default PostImages;  \r\n"]},"metadata":{},"sourceType":"module"}